Simple DataFrame { time: "2014/Oct/24 18:34:28.666455", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "53", function_name: "testcase:WCG100140020", message: " Port dnsInternalPort[0] was started" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.666490", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "53", function_name: "testcase:WCG100140020", message: " Port dnsInternalPort[1] was started" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.666506", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "53", function_name: "testcase:WCG100140020", message: " Port dnsInternalPort[2] was started" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.666520", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "53", function_name: "testcase:WCG100140020", message: " Port dnsInternalPort[3] was started" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.666534", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "53", function_name: "testcase:WCG100140020", message: " Port httpNodeInternalPort[0] was started" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.666548", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "53", function_name: "testcase:WCG100140020", message: " Port httpNodeInternalPort[1] was started" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.666562", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "53", function_name: "testcase:WCG100140020", message: " Port httpNodeInternalPort[2] was started" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.666588", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "53", function_name: "testcase:WCG100140020", message: " Port httpNodeInternalPort[3] was started" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.666615", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "53", function_name: "testcase:WCG100140020", message: " Port httpNodeInternalPort[4] was started" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.666633", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "53", function_name: "testcase:WCG100140020", message: " Port httpNodeInternalPort[5] was started" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.666647", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "53", function_name: "testcase:WCG100140020", message: " Port httpNodeInternalPort[6] was started" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.666661", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "53", function_name: "testcase:WCG100140020", message: " Port httpNodeInternalPort[7] was started" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.666723", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "53", function_name: "testcase:WCG100140020", message: " Port httpNodeInternalPort[8] was started" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.666742", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "53", function_name: "testcase:WCG100140020", message: " Port httpNodeInternalPort[9] was started" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.666756", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "53", function_name: "testcase:WCG100140020", message: " Port httpNodeInternalPort[10] was started" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.666781", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "53", function_name: "testcase:WCG100140020", message: " Port httpNodeInternalPort[11] was started" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.666806", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "53", function_name: "testcase:WCG100140020", message: " Port httpNodeInternalPort[12] was started" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.666824", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "53", function_name: "testcase:WCG100140020", message: " Port httpNodeInternalPort[13] was started" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.666839", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "53", function_name: "testcase:WCG100140020", message: " Port httpNodeInternalPort[14] was started" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.666852", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "53", function_name: "testcase:WCG100140020", message: " Port httpNodeInternalPort[15] was started" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.666866", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "53", function_name: "testcase:WCG100140020", message: " Port msrpInternalPort[0] was started" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.666880", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "53", function_name: "testcase:WCG100140020", message: " Port msrpInternalPort[1] was started" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.666894", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "53", function_name: "testcase:WCG100140020", message: " Port msrpInternalPort[2] was started" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.666908", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "53", function_name: "testcase:WCG100140020", message: " Port msrpInternalPort[3] was started" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.666922", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "53", function_name: "testcase:WCG100140020", message: " Port msrpInternalPort[4] was started" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.666936", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "53", function_name: "testcase:WCG100140020", message: " Port msrpInternalPort[5] was started" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.666949", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "53", function_name: "testcase:WCG100140020", message: " Port msrpInternalPort[6] was started" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.666963", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "53", function_name: "testcase:WCG100140020", message: " Port msrpInternalPort[7] was started" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.666978", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "53", function_name: "testcase:WCG100140020", message: " Port sipInternalPort[0] was started" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.666992", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "53", function_name: "testcase:WCG100140020", message: " Port sipInternalPort[1] was started" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.667006", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "53", function_name: "testcase:WCG100140020", message: " Port sipInternalPort[2] was started" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.667019", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "53", function_name: "testcase:WCG100140020", message: " Port sipInternalPort[3] was started" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.667033", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "53", function_name: "testcase:WCG100140020", message: " Port sipInternalPort[4] was started" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.667047", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "53", function_name: "testcase:WCG100140020", message: " Port sipInternalPort[5] was started" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.667061", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "53", function_name: "testcase:WCG100140020", message: " Port sipInternalPort[6] was started" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.667075", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "53", function_name: "testcase:WCG100140020", message: " Port sipInternalPort[7] was started" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.667089", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "53", function_name: "testcase:WCG100140020", message: " Port sshClientPort was started" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.667104", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "53", function_name: "testcase:WCG100140020", message: " Port tcpClientPort was started" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.680829", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 10 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.681237", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port sipClientPort was started." }
Simple DataFrame { time: "2014/Oct/24 18:34:28.681304", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port sipInternalPort was started." }
Simple DataFrame { time: "2014/Oct/24 18:34:28.683427", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port sipInternalPort[0] is waiting for connection from 849:sipInternalPort on UNIX pathname /tmp/ttcn3-portconn-2256f413." }
Simple DataFrame { time: "2014/Oct/24 18:34:28.683552", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "146", function_name: "function:sipInitialize", message: " Port sipInternalPort has established the connection with mtc:sipInternalPort[0] using transport type UNIX" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.683618", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "253", function_name: "function:receiveInternalMessage", message: " Port sipInternalPort[0] has accepted the connection from 849:sipInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.683908", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "149", function_name: "function:sipInitialize", message: " Port sipClientPort was mapped to system:sipClientPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.684126", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "152", function_name: "function:sipInitialize", message: " Sent on sipInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.684238", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "74", function_name: "function:sipRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.684245", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "253", function_name: "function:receiveInternalMessage", message: " Message enqueued on sipInternalPort[0] from 849 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.684307", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Receive operation on port sipInternalPort[0] succeeded, message from 849: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.684364", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Message with id 1 was extracted from the queue of sipInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.684390", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "255", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 10 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.684552", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.694982", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "286", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.695096", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "202", function_name: "function:sendInternalMessage", message: " Sent on sipInternalPort[0] to 849 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.695225", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.695242", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "78", function_name: "function:sipRun", message: " Message enqueued on sipInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.695334", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Receive operation on port sipInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.695375", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Message with id 1 was extracted from the queue of sipInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.695402", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "80", function_name: "function:sipRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.696199", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "388", function_name: "function:processCommand", message: " Sent on sipInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.696280", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "74", function_name: "function:sipRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.696328", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "253", function_name: "function:receiveInternalMessage", message: " Message enqueued on sipInternalPort[0] from 849 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.696403", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Receive operation on port sipInternalPort[0] succeeded, message from 849: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.696441", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Message with id 2 was extracted from the queue of sipInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.696471", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "255", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.698309", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 10 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.698461", component: "850", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port msrpPort was started." }
Simple DataFrame { time: "2014/Oct/24 18:34:28.698497", component: "850", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port msrpInternalPort was started." }
Simple DataFrame { time: "2014/Oct/24 18:34:28.699602", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port msrpInternalPort[0] is waiting for connection from 850:msrpInternalPort on UNIX pathname /tmp/ttcn3-portconn-6019304." }
Simple DataFrame { time: "2014/Oct/24 18:34:28.699706", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "155", function_name: "function:msrpInitialize", message: " Port msrpInternalPort has established the connection with mtc:msrpInternalPort[0] using transport type UNIX" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.699788", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "216", function_name: "function:receiveInternalMessage", message: " Port msrpInternalPort[0] has accepted the connection from 850:msrpInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.700083", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "158", function_name: "function:msrpInitialize", message: " Port msrpPort was mapped to system:msrpPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.700272", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "161", function_name: "function:msrpInitialize", message: " Sent on msrpInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.700355", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "216", function_name: "function:receiveInternalMessage", message: " Message enqueued on msrpInternalPort[0] from 850 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.700409", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Receive operation on port msrpInternalPort[0] succeeded, message from 850: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.700437", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Message with id 1 was extracted from the queue of msrpInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.700459", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "218", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 10 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.700633", component: "850", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "79", function_name: "function:msrpRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.700680", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.711068", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.711152", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "168", function_name: "function:sendInternalMessage", message: " Sent on msrpInternalPort[0] to 850 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.711276", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "83", function_name: "function:msrpRun", message: " Message enqueued on msrpInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.711336", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Receive operation on port msrpInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.711368", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Message with id 1 was extracted from the queue of msrpInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.711384", component: "850", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "85", function_name: "function:msrpRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.711886", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "343", function_name: "function:processCommand", message: " Sent on msrpInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.711950", component: "850", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "79", function_name: "function:msrpRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.711989", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "68", function_name: "function:createPtc", message: " Message enqueued on msrpInternalPort[0] from 850 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.722402", component: "851", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port clientPort was started." }
Simple DataFrame { time: "2014/Oct/24 18:34:28.722445", component: "851", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port serverPort was started." }
Simple DataFrame { time: "2014/Oct/24 18:34:28.722478", component: "851", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port httpNodeInternalPort was started." }
Simple DataFrame { time: "2014/Oct/24 18:34:28.722490", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 10 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.723925", component: "851", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "130", function_name: "function:httpNodeInitialize", message: " Port clientPort was mapped to system:clientPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.724205", component: "851", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "133", function_name: "function:httpNodeInitialize", message: " Port serverPort was mapped to system:serverPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.724577", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port httpNodeInternalPort[0] is waiting for connection from 851:httpNodeInternalPort on UNIX pathname /tmp/ttcn3-portconn-290b992a." }
Simple DataFrame { time: "2014/Oct/24 18:34:28.724663", component: "851", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "136", function_name: "function:httpNodeInitialize", message: " Port httpNodeInternalPort has established the connection with mtc:httpNodeInternalPort[0] using transport type UNIX" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.724734", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "239", function_name: "function:receiveInternalMessage", message: " Port httpNodeInternalPort[0] has accepted the connection from 851:httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.724993", component: "851", peer_component: "BaseHttpServerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "55", function_name: "function:openServerForListening", message: " Sent on serverPort to system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.725119", component: "851", peer_component: "BaseHttpServerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "55", function_name: "function:openServerForListening", message: " Message enqueued on serverPort from system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.725168", component: "851", peer_component: "BaseHttpServerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "73", function_name: "function:receiveHTTPServerListenResult", message: " Start timer timerWaitForHTTPRequest: 5 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.725234", component: "851", peer_component: "BaseHttpServerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "77", function_name: "function:receiveHTTPServerListenResult", message: " Receive operation on port serverPort succeeded, message from system(" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.725259", component: "851", peer_component: "BaseHttpServerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "77", function_name: "function:receiveHTTPServerListenResult", message: " Message with id 1 was extracted from the queue of serverPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.725276", component: "851", peer_component: "BaseHttpServerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "78", function_name: "function:receiveHTTPServerListenResult", message: " Stop timer timerWaitForHTTPRequest: 5 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.725357", component: "851", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "141", function_name: "function:httpNodeInitialize", message: " Sent on httpNodeInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.725462", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "239", function_name: "function:receiveInternalMessage", message: " Message enqueued on httpNodeInternalPort[0] from 851 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.725489", component: "851", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "62", function_name: "function:httpNodeRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.725536", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Receive operation on port httpNodeInternalPort[0] succeeded, message from 851: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.725566", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Message with id 1 was extracted from the queue of httpNodeInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.725587", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "241", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 10 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.727239", component: "852", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port clientPort was started." }
Simple DataFrame { time: "2014/Oct/24 18:34:28.727285", component: "852", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port serverPort was started." }
Simple DataFrame { time: "2014/Oct/24 18:34:28.727315", component: "852", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port httpNodeInternalPort was started." }
Simple DataFrame { time: "2014/Oct/24 18:34:28.727376", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 10 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.728539", component: "852", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "130", function_name: "function:httpNodeInitialize", message: " Port clientPort was mapped to system:clientPort[1]" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.728787", component: "852", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "133", function_name: "function:httpNodeInitialize", message: " Port serverPort was mapped to system:serverPort[1]" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.729118", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port httpNodeInternalPort[1] is waiting for connection from 852:httpNodeInternalPort on UNIX pathname /tmp/ttcn3-portconn-2e0b982a." }
Simple DataFrame { time: "2014/Oct/24 18:34:28.729269", component: "852", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "136", function_name: "function:httpNodeInitialize", message: " Port httpNodeInternalPort has established the connection with mtc:httpNodeInternalPort[1] using transport type UNIX" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.729340", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "239", function_name: "function:receiveInternalMessage", message: " Port httpNodeInternalPort[1] has accepted the connection from 852:httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.729562", component: "852", peer_component: "BaseHttpServerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "55", function_name: "function:openServerForListening", message: " Sent on serverPort to system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.729658", component: "852", peer_component: "BaseHttpServerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "55", function_name: "function:openServerForListening", message: " Message enqueued on serverPort from system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.729697", component: "852", peer_component: "BaseHttpServerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "73", function_name: "function:receiveHTTPServerListenResult", message: " Start timer timerWaitForHTTPRequest: 5 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.729756", component: "852", peer_component: "BaseHttpServerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "77", function_name: "function:receiveHTTPServerListenResult", message: " Receive operation on port serverPort succeeded, message from system(" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.729780", component: "852", peer_component: "BaseHttpServerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "77", function_name: "function:receiveHTTPServerListenResult", message: " Message with id 1 was extracted from the queue of serverPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.729797", component: "852", peer_component: "BaseHttpServerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "78", function_name: "function:receiveHTTPServerListenResult", message: " Stop timer timerWaitForHTTPRequest: 5 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.729867", component: "852", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "141", function_name: "function:httpNodeInitialize", message: " Sent on httpNodeInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.729956", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "239", function_name: "function:receiveInternalMessage", message: " Message enqueued on httpNodeInternalPort[1] from 852 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.730010", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Receive operation on port httpNodeInternalPort[1] succeeded, message from 852: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.730012", component: "852", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "62", function_name: "function:httpNodeRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.730058", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Message with id 1 was extracted from the queue of httpNodeInternalPort[1]" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.730084", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "241", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 10 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.730308", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.742992", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "267", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:28.743314", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort[1] to 852 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"PARAM_PORT_OVERRIDE\", parameterValue := \"8888\" } } }, aspHttp := { { httpMessage := { method := \"POST\", url := \"/jolokia/\", body := \"[ { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,successfulTerminating=successfulTerminating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,successfulOriginating=successfulOriginating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulOriginating=unsuccessfulOriginating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulTerminating=unsuccessfulTerminating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,textMessages=textMessages-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,mediaMessages=mediaMessages-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,MSRPSession=MSRPSession-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=GAUGE,format=INTEGER,MSRPCurrentlyActive=MSRPCurrentlyActive1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } ] \", contentType := \"application/json\", statusCode := \"\", header := omit } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.743533", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:28.743673", component: "852", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort from mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"PARAM_PORT_OVERRIDE\", parameterValue := \"8888\" } } }, aspHttp := { { httpMessage := { method := \"POST\", url := \"/jolokia/\", body := \"[ { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,successfulTerminating=successfulTerminating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,successfulOriginating=successfulOriginating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulOriginating=unsuccessfulOriginating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulTerminating=unsuccessfulTerminating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,textMessages=textMessages-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,mediaMessages=mediaMessages-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,MSRPSession=MSRPSession-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=GAUGE,format=INTEGER,MSRPCurrentlyActive=MSRPCurrentlyActive1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } ] \", contentType := \"application/json\", statusCode := \"\", header := omit } } }} id 1" }
Structured  DataFrame { time: "2014/Oct/24 18:34:28.743984", component: "852", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort succeeded, message from mtc: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"PARAM_PORT_OVERRIDE\", parameterValue := \"8888\" } } }, aspHttp := { { httpMessage := { method := \"POST\", url := \"/jolokia/\", body := \"[ { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,successfulTerminating=successfulTerminating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,successfulOriginating=successfulOriginating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulOriginating=unsuccessfulOriginating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulTerminating=unsuccessfulTerminating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,textMessages=textMessages-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,mediaMessages=mediaMessages-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,MSRPSession=MSRPSession-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=GAUGE,format=INTEGER,MSRPCurrentlyActive=MSRPCurrentlyActive1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } ] \", contentType := \"application/json\", statusCode := \"\", header := omit } } }} id 1" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.744047", component: "852", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "67", function_name: "function:httpNodeRun", message: " Message with id 1 was extracted from the queue of httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.744067", component: "852", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "68", function_name: "function:httpNodeRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.744239", component: "852", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "307", function_name: "function:clearHTTPClientPort", message: " Start timer timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.744261", component: "852", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "313", function_name: "function:clearHTTPClientPort", message: " Timeout timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.744357", component: "852", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Sent on clientPort to system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.745156", component: "852", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Message enqueued on clientPort from system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.745202", component: "852", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "243", function_name: "function:sendHTTPClientRequest", message: " Start timer timerWaitForHTTPOpenConnection: 2 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.745234", component: "852", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Receive operation on port clientPort succeeded, message from system(" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.745252", component: "852", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Message with id 1 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.745268", component: "852", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "246", function_name: "function:sendHTTPClientRequest", message: " Stop timer timerWaitForHTTPOpenConnection: 2 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:28.745526", component: "852", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on clientPort to system @HTTPmsg_Types.HTTPMessage : { request := { client_id := 9, method := \"POST\", uri := \"/jolokia/\", version_major := 1, version_minor := 1, header := { { header_name := \"Host\", header_value := \"142.133.142.3\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Content-Length\", header_value := \"1971\" } }, body := \"[ { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,successfulTerminating=successfulTerminating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,successfulOriginating=successfulOriginating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulOriginating=unsuccessfulOriginating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulTerminating=unsuccessfulTerminating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,textMessages=textMessages-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,mediaMessages=mediaMessages-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,MSRPSession=MSRPSession-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=GAUGE,format=INTEGER,MSRPCurrentlyActive=MSRPCurrentlyActive1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } ] \" }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.745690", component: "852", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "189", function_name: "function:receiveAnyHTTPClientResponse", message: " Start timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:28.767124", component: "852", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on clientPort from system @HTTPmsg_Types.HTTPMessage : { response := { client_id := 9, version_major := 1, version_minor := 1, statuscode := 200, statustext := \"OK\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache\" }, { header_name := \"Pragma\", header_value := \"no-cache\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:28 GMT\" }, { header_name := \"Expires\", header_value := \"Fri, 24 Oct 2014 21:34:28 GMT\" }, { header_name := \"Content-Type\", header_value := \"text/plain;charset=utf-8\" }, { header_name := \"Content-Length\", header_value := \"1762\" } }, body := \"[{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,successfulTerminating=successfulTerminating-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,successfulOriginating=successfulOriginating-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulOriginating=unsuccessfulOriginating-1\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":1},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulTerminating=unsuccessfulTerminating-1\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":1},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,textMessages=textMessages-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,mediaMessages=mediaMessages-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,MSRPSession=MSRPSession-1,interface=WcgChatCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,MSRPCurrentlyActive=MSRPCurrentlyActive1,format=INTEGER,interface=WcgGlobalCounterGroup,type=GAUGE\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0}]\" }} id 2" }
Structured  DataFrame { time: "2014/Oct/24 18:34:28.767376", component: "852", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port clientPort succeeded, message from system(): @HTTPmsg_Types.HTTPMessage : { response := { client_id := 9, version_major := 1, version_minor := 1, statuscode := 200, statustext := \"OK\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache\" }, { header_name := \"Pragma\", header_value := \"no-cache\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:28 GMT\" }, { header_name := \"Expires\", header_value := \"Fri, 24 Oct 2014 21:34:28 GMT\" }, { header_name := \"Content-Type\", header_value := \"text/plain;charset=utf-8\" }, { header_name := \"Content-Length\", header_value := \"1762\" } }, body := \"[{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,successfulTerminating=successfulTerminating-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,successfulOriginating=successfulOriginating-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulOriginating=unsuccessfulOriginating-1\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":1},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulTerminating=unsuccessfulTerminating-1\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":1},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,textMessages=textMessages-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,mediaMessages=mediaMessages-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,MSRPSession=MSRPSession-1,interface=WcgChatCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,MSRPCurrentlyActive=MSRPCurrentlyActive1,format=INTEGER,interface=WcgGlobalCounterGroup,type=GAUGE\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0}]\" }} id 2" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.767433", component: "852", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "193", function_name: "function:receiveAnyHTTPClientResponse", message: " Message with id 2 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.767469", component: "852", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "194", function_name: "function:receiveAnyHTTPClientResponse", message: " Stop timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:28.767811", component: "852", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort to mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"[{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,successfulTerminating=successfulTerminating-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,successfulOriginating=successfulOriginating-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulOriginating=unsuccessfulOriginating-1\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":1},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulTerminating=unsuccessfulTerminating-1\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":1},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,textMessages=textMessages-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,mediaMessages=mediaMessages-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,MSRPSession=MSRPSession-1,interface=WcgChatCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,MSRPCurrentlyActive=MSRPCurrentlyActive1,format=INTEGER,interface=WcgGlobalCounterGroup,type=GAUGE\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0}]\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache\" }, { header_name := \"Pragma\", header_value := \"no-cache\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:28 GMT\" }, { header_name := \"Expires\", header_value := \"Fri, 24 Oct 2014 21:34:28 GMT\" }, { header_name := \"Content-Type\", header_value := \"text/plain;charset=utf-8\" }, { header_name := \"Content-Length\", header_value := \"1762\" } } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.767948", component: "852", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "62", function_name: "function:httpNodeRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:28.768236", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort[1] from 852 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"[{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,successfulTerminating=successfulTerminating-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,successfulOriginating=successfulOriginating-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulOriginating=unsuccessfulOriginating-1\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":1},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulTerminating=unsuccessfulTerminating-1\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":1},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,textMessages=textMessages-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,mediaMessages=mediaMessages-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,MSRPSession=MSRPSession-1,interface=WcgChatCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,MSRPCurrentlyActive=MSRPCurrentlyActive1,format=INTEGER,interface=WcgGlobalCounterGroup,type=GAUGE\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0}]\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache\" }, { header_name := \"Pragma\", header_value := \"no-cache\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:28 GMT\" }, { header_name := \"Expires\", header_value := \"Fri, 24 Oct 2014 21:34:28 GMT\" }, { header_name := \"Content-Type\", header_value := \"text/plain;charset=utf-8\" }, { header_name := \"Content-Length\", header_value := \"1762\" } } } } }} id 2" }
Structured  DataFrame { time: "2014/Oct/24 18:34:28.768503", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort[1] succeeded, message from 852: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"[{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,successfulTerminating=successfulTerminating-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,successfulOriginating=successfulOriginating-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulOriginating=unsuccessfulOriginating-1\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":1},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulTerminating=unsuccessfulTerminating-1\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":1},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,textMessages=textMessages-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,mediaMessages=mediaMessages-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,MSRPSession=MSRPSession-1,interface=WcgChatCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,MSRPCurrentlyActive=MSRPCurrentlyActive1,format=INTEGER,interface=WcgGlobalCounterGroup,type=GAUGE\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0}]\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache\" }, { header_name := \"Pragma\", header_value := \"no-cache\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:28 GMT\" }, { header_name := \"Expires\", header_value := \"Fri, 24 Oct 2014 21:34:28 GMT\" }, { header_name := \"Content-Type\", header_value := \"text/plain;charset=utf-8\" }, { header_name := \"Content-Length\", header_value := \"1762\" } } } } }} id 2" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.768568", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Message with id 2 was extracted from the queue of httpNodeInternalPort[1]" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.768612", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "241", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.770901", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.781500", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "267", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:28.781806", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort[1] to 852 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"PARAM_PORT_OVERRIDE\", parameterValue := \"8888\" } } }, aspHttp := { { httpMessage := { method := \"POST\", url := \"/jolokia/\", body := \"[ { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,successfullyReceivedDeliveryNotification=successfullyReceivedDeliveryNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,successfullyReceivedDisplayNotification=successfullyReceivedDisplayNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,failedReceivedDeliveryNotification=failedReceivedDeliveryNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,failedReceivedDisplayNotification=failedReceivedDisplayNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,successfullySentDisplayNotification=successfullySentDisplayNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,failedSentDisplayNotification=failedSentDisplayNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } ] \", contentType := \"application/json\", statusCode := \"\", header := omit } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.781997", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:28.782129", component: "852", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort from mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"PARAM_PORT_OVERRIDE\", parameterValue := \"8888\" } } }, aspHttp := { { httpMessage := { method := \"POST\", url := \"/jolokia/\", body := \"[ { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,successfullyReceivedDeliveryNotification=successfullyReceivedDeliveryNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,successfullyReceivedDisplayNotification=successfullyReceivedDisplayNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,failedReceivedDeliveryNotification=failedReceivedDeliveryNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,failedReceivedDisplayNotification=failedReceivedDisplayNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,successfullySentDisplayNotification=successfullySentDisplayNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,failedSentDisplayNotification=failedSentDisplayNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } ] \", contentType := \"application/json\", statusCode := \"\", header := omit } } }} id 2" }
Structured  DataFrame { time: "2014/Oct/24 18:34:28.782359", component: "852", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort succeeded, message from mtc: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"PARAM_PORT_OVERRIDE\", parameterValue := \"8888\" } } }, aspHttp := { { httpMessage := { method := \"POST\", url := \"/jolokia/\", body := \"[ { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,successfullyReceivedDeliveryNotification=successfullyReceivedDeliveryNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,successfullyReceivedDisplayNotification=successfullyReceivedDisplayNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,failedReceivedDeliveryNotification=failedReceivedDeliveryNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,failedReceivedDisplayNotification=failedReceivedDisplayNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,successfullySentDisplayNotification=successfullySentDisplayNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,failedSentDisplayNotification=failedSentDisplayNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } ] \", contentType := \"application/json\", statusCode := \"\", header := omit } } }} id 2" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.782398", component: "852", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "67", function_name: "function:httpNodeRun", message: " Message with id 2 was extracted from the queue of httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.782415", component: "852", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "68", function_name: "function:httpNodeRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.782544", component: "852", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "307", function_name: "function:clearHTTPClientPort", message: " Start timer timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.782563", component: "852", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "313", function_name: "function:clearHTTPClientPort", message: " Timeout timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.782631", component: "852", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Sent on clientPort to system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.783538", component: "852", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Message enqueued on clientPort from system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.783573", component: "852", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "243", function_name: "function:sendHTTPClientRequest", message: " Start timer timerWaitForHTTPOpenConnection: 2 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.783599", component: "852", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Receive operation on port clientPort succeeded, message from system(" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.783617", component: "852", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Message with id 3 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.783633", component: "852", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "246", function_name: "function:sendHTTPClientRequest", message: " Stop timer timerWaitForHTTPOpenConnection: 2 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:28.783853", component: "852", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on clientPort to system @HTTPmsg_Types.HTTPMessage : { request := { client_id := 10, method := \"POST\", uri := \"/jolokia/\", version_major := 1, version_minor := 1, header := { { header_name := \"Host\", header_value := \"142.133.142.3\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Content-Length\", header_value := \"1682\" } }, body := \"[ { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,successfullyReceivedDeliveryNotification=successfullyReceivedDeliveryNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,successfullyReceivedDisplayNotification=successfullyReceivedDisplayNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,failedReceivedDeliveryNotification=failedReceivedDeliveryNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,failedReceivedDisplayNotification=failedReceivedDisplayNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,successfullySentDisplayNotification=successfullySentDisplayNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,failedSentDisplayNotification=failedSentDisplayNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } ] \" }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.783993", component: "852", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "189", function_name: "function:receiveAnyHTTPClientResponse", message: " Start timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:28.795127", component: "852", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on clientPort from system @HTTPmsg_Types.HTTPMessage : { response := { client_id := 10, version_major := 1, version_minor := 1, statuscode := 200, statustext := \"OK\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache\" }, { header_name := \"Pragma\", header_value := \"no-cache\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:28 GMT\" }, { header_name := \"Expires\", header_value := \"Fri, 24 Oct 2014 21:34:28 GMT\" }, { header_name := \"Content-Type\", header_value := \"text/plain;charset=utf-8\" }, { header_name := \"Content-Length\", header_value := \"1525\" } }, body := \"[{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,successfullyReceivedDeliveryNotification=successfullyReceivedDeliveryNotification-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,successfullyReceivedDisplayNotification=successfullyReceivedDisplayNotification-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,failedReceivedDeliveryNotification=failedReceivedDeliveryNotification-1,interface=WcgGlobalCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,failedReceivedDisplayNotification=failedReceivedDisplayNotification-1,interface=WcgGlobalCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,successfullySentDisplayNotification=successfullySentDisplayNotification-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,failedSentDisplayNotification=failedSentDisplayNotification-1,interface=WcgGlobalCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0}]\" }} id 4" }
Structured  DataFrame { time: "2014/Oct/24 18:34:28.795327", component: "852", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port clientPort succeeded, message from system(): @HTTPmsg_Types.HTTPMessage : { response := { client_id := 10, version_major := 1, version_minor := 1, statuscode := 200, statustext := \"OK\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache\" }, { header_name := \"Pragma\", header_value := \"no-cache\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:28 GMT\" }, { header_name := \"Expires\", header_value := \"Fri, 24 Oct 2014 21:34:28 GMT\" }, { header_name := \"Content-Type\", header_value := \"text/plain;charset=utf-8\" }, { header_name := \"Content-Length\", header_value := \"1525\" } }, body := \"[{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,successfullyReceivedDeliveryNotification=successfullyReceivedDeliveryNotification-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,successfullyReceivedDisplayNotification=successfullyReceivedDisplayNotification-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,failedReceivedDeliveryNotification=failedReceivedDeliveryNotification-1,interface=WcgGlobalCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,failedReceivedDisplayNotification=failedReceivedDisplayNotification-1,interface=WcgGlobalCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,successfullySentDisplayNotification=successfullySentDisplayNotification-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,failedSentDisplayNotification=failedSentDisplayNotification-1,interface=WcgGlobalCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0}]\" }} id 4" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.795391", component: "852", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "193", function_name: "function:receiveAnyHTTPClientResponse", message: " Message with id 4 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.795412", component: "852", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "194", function_name: "function:receiveAnyHTTPClientResponse", message: " Stop timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:28.795605", component: "852", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort to mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"[{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,successfullyReceivedDeliveryNotification=successfullyReceivedDeliveryNotification-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,successfullyReceivedDisplayNotification=successfullyReceivedDisplayNotification-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,failedReceivedDeliveryNotification=failedReceivedDeliveryNotification-1,interface=WcgGlobalCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,failedReceivedDisplayNotification=failedReceivedDisplayNotification-1,interface=WcgGlobalCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,successfullySentDisplayNotification=successfullySentDisplayNotification-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,failedSentDisplayNotification=failedSentDisplayNotification-1,interface=WcgGlobalCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0}]\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache\" }, { header_name := \"Pragma\", header_value := \"no-cache\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:28 GMT\" }, { header_name := \"Expires\", header_value := \"Fri, 24 Oct 2014 21:34:28 GMT\" }, { header_name := \"Content-Type\", header_value := \"text/plain;charset=utf-8\" }, { header_name := \"Content-Length\", header_value := \"1525\" } } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.795696", component: "852", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "62", function_name: "function:httpNodeRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:28.795979", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort[1] from 852 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"[{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,successfullyReceivedDeliveryNotification=successfullyReceivedDeliveryNotification-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,successfullyReceivedDisplayNotification=successfullyReceivedDisplayNotification-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,failedReceivedDeliveryNotification=failedReceivedDeliveryNotification-1,interface=WcgGlobalCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,failedReceivedDisplayNotification=failedReceivedDisplayNotification-1,interface=WcgGlobalCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,successfullySentDisplayNotification=successfullySentDisplayNotification-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,failedSentDisplayNotification=failedSentDisplayNotification-1,interface=WcgGlobalCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0}]\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache\" }, { header_name := \"Pragma\", header_value := \"no-cache\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:28 GMT\" }, { header_name := \"Expires\", header_value := \"Fri, 24 Oct 2014 21:34:28 GMT\" }, { header_name := \"Content-Type\", header_value := \"text/plain;charset=utf-8\" }, { header_name := \"Content-Length\", header_value := \"1525\" } } } } }} id 3" }
Structured  DataFrame { time: "2014/Oct/24 18:34:28.796230", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort[1] succeeded, message from 852: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"[{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,successfullyReceivedDeliveryNotification=successfullyReceivedDeliveryNotification-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,successfullyReceivedDisplayNotification=successfullyReceivedDisplayNotification-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,failedReceivedDeliveryNotification=failedReceivedDeliveryNotification-1,interface=WcgGlobalCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,failedReceivedDisplayNotification=failedReceivedDisplayNotification-1,interface=WcgGlobalCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,successfullySentDisplayNotification=successfullySentDisplayNotification-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,failedSentDisplayNotification=failedSentDisplayNotification-1,interface=WcgGlobalCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0}]\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache\" }, { header_name := \"Pragma\", header_value := \"no-cache\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:28 GMT\" }, { header_name := \"Expires\", header_value := \"Fri, 24 Oct 2014 21:34:28 GMT\" }, { header_name := \"Content-Type\", header_value := \"text/plain;charset=utf-8\" }, { header_name := \"Content-Length\", header_value := \"1525\" } } } } }} id 3" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.796295", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Message with id 3 was extracted from the queue of httpNodeInternalPort[1]" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.796320", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "241", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.800051", component: "853", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port clientPort was started." }
Simple DataFrame { time: "2014/Oct/24 18:34:28.800071", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 10 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.800090", component: "853", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port serverPort was started." }
Simple DataFrame { time: "2014/Oct/24 18:34:28.800112", component: "853", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port httpNodeInternalPort was started." }
Simple DataFrame { time: "2014/Oct/24 18:34:28.801517", component: "853", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "130", function_name: "function:httpNodeInitialize", message: " Port clientPort was mapped to system:clientPort[2]" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.801970", component: "853", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "133", function_name: "function:httpNodeInitialize", message: " Port serverPort was mapped to system:serverPort[2]" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.802354", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port httpNodeInternalPort[2] is waiting for connection from 853:httpNodeInternalPort on UNIX pathname /tmp/ttcn3-portconn-2f0b9b2a." }
Simple DataFrame { time: "2014/Oct/24 18:34:28.802482", component: "853", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "136", function_name: "function:httpNodeInitialize", message: " Port httpNodeInternalPort has established the connection with mtc:httpNodeInternalPort[2] using transport type UNIX" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.802549", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "239", function_name: "function:receiveInternalMessage", message: " Port httpNodeInternalPort[2] has accepted the connection from 853:httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.802830", component: "853", peer_component: "BaseHttpServerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "55", function_name: "function:openServerForListening", message: " Sent on serverPort to system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.802961", component: "853", peer_component: "BaseHttpServerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "55", function_name: "function:openServerForListening", message: " Message enqueued on serverPort from system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.802998", component: "853", peer_component: "BaseHttpServerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "73", function_name: "function:receiveHTTPServerListenResult", message: " Start timer timerWaitForHTTPRequest: 5 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.803037", component: "853", peer_component: "BaseHttpServerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "77", function_name: "function:receiveHTTPServerListenResult", message: " Receive operation on port serverPort succeeded, message from system(" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.803059", component: "853", peer_component: "BaseHttpServerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "77", function_name: "function:receiveHTTPServerListenResult", message: " Message with id 1 was extracted from the queue of serverPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.803076", component: "853", peer_component: "BaseHttpServerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "78", function_name: "function:receiveHTTPServerListenResult", message: " Stop timer timerWaitForHTTPRequest: 5 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.803152", component: "853", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "141", function_name: "function:httpNodeInitialize", message: " Sent on httpNodeInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.803238", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "239", function_name: "function:receiveInternalMessage", message: " Message enqueued on httpNodeInternalPort[2] from 853 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.803244", component: "853", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "62", function_name: "function:httpNodeRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.803294", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Receive operation on port httpNodeInternalPort[2] succeeded, message from 853: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.803341", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Message with id 1 was extracted from the queue of httpNodeInternalPort[2]" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.803364", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "241", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 10 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.803537", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.814999", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "267", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:28.815184", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort[2] to 853 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"1\" } } }, aspHttp := { { httpMessage := { method := \"POST\", url := \"/14A/v3/register\", body := \"{ \\\"username\\\": \\\"10014002006@ericsson.se\\\", \\\"password\\\": \\\"10014002006\\\", \\\"mediaType\\\": \\\"rtp\\\", \\\"services\\\": [ \\\"im_chat\\\", \\\"file_transfer\\\", \\\"video_share\\\", \\\"ip_voice_call\\\", \\\"ip_video_call\\\", \\\"im_standalone\\\", \\\"cs\\\", \\\"ab\\\", \\\"+custom-valid-feature\\\", \\\"custom-invalid-feature\\\"] } \", contentType := \"application/json\", statusCode := \"\", header := { } } } }}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:28.815341", component: "853", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort from mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"1\" } } }, aspHttp := { { httpMessage := { method := \"POST\", url := \"/14A/v3/register\", body := \"{ \\\"username\\\": \\\"10014002006@ericsson.se\\\", \\\"password\\\": \\\"10014002006\\\", \\\"mediaType\\\": \\\"rtp\\\", \\\"services\\\": [ \\\"im_chat\\\", \\\"file_transfer\\\", \\\"video_share\\\", \\\"ip_voice_call\\\", \\\"ip_video_call\\\", \\\"im_standalone\\\", \\\"cs\\\", \\\"ab\\\", \\\"+custom-valid-feature\\\", \\\"custom-invalid-feature\\\"] } \", contentType := \"application/json\", statusCode := \"\", header := { } } } }} id 1" }
Structured  DataFrame { time: "2014/Oct/24 18:34:28.815432", component: "853", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort succeeded, message from mtc: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"1\" } } }, aspHttp := { { httpMessage := { method := \"POST\", url := \"/14A/v3/register\", body := \"{ \\\"username\\\": \\\"10014002006@ericsson.se\\\", \\\"password\\\": \\\"10014002006\\\", \\\"mediaType\\\": \\\"rtp\\\", \\\"services\\\": [ \\\"im_chat\\\", \\\"file_transfer\\\", \\\"video_share\\\", \\\"ip_voice_call\\\", \\\"ip_video_call\\\", \\\"im_standalone\\\", \\\"cs\\\", \\\"ab\\\", \\\"+custom-valid-feature\\\", \\\"custom-invalid-feature\\\"] } \", contentType := \"application/json\", statusCode := \"\", header := { } } } }} id 1" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.815478", component: "853", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "67", function_name: "function:httpNodeRun", message: " Message with id 1 was extracted from the queue of httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.815510", component: "853", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "68", function_name: "function:httpNodeRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.815720", component: "853", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "307", function_name: "function:clearHTTPClientPort", message: " Start timer timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.815743", component: "853", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "313", function_name: "function:clearHTTPClientPort", message: " Timeout timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.815811", component: "853", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Sent on clientPort to system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.816021", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.816543", component: "853", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Message enqueued on clientPort from system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.816577", component: "853", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "243", function_name: "function:sendHTTPClientRequest", message: " Start timer timerWaitForHTTPOpenConnection: 2 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.816605", component: "853", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Receive operation on port clientPort succeeded, message from system(" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.816623", component: "853", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Message with id 1 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.816638", component: "853", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "246", function_name: "function:sendHTTPClientRequest", message: " Stop timer timerWaitForHTTPOpenConnection: 2 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:28.816740", component: "853", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on clientPort to system @HTTPmsg_Types.HTTPMessage : { request := { client_id := 9, method := \"POST\", uri := \"/14A/v3/register\", version_major := 1, version_minor := 1, header := { { header_name := \"Host\", header_value := \"142.133.142.3\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Content-Length\", header_value := \"261\" } }, body := \"{ \\\"username\\\": \\\"10014002006@ericsson.se\\\", \\\"password\\\": \\\"10014002006\\\", \\\"mediaType\\\": \\\"rtp\\\", \\\"services\\\": [ \\\"im_chat\\\", \\\"file_transfer\\\", \\\"video_share\\\", \\\"ip_voice_call\\\", \\\"ip_video_call\\\", \\\"im_standalone\\\", \\\"cs\\\", \\\"ab\\\", \\\"+custom-valid-feature\\\", \\\"custom-invalid-feature\\\"] } \" }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.816845", component: "853", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "189", function_name: "function:receiveAnyHTTPClientResponse", message: " Start timer timerWaitForHTTPResponse: 60 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.826134", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "286", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.826248", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "202", function_name: "function:sendInternalMessage", message: " Sent on sipInternalPort[0] to 849 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.826373", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "78", function_name: "function:sipRun", message: " Message enqueued on sipInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.826418", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.826469", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Receive operation on port sipInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.826530", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Message with id 2 was extracted from the queue of sipInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.826565", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "80", function_name: "function:sipRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.827072", component: "849", peer_component: "BaseSipClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "320", function_name: "function:generalReceiveSip", message: " Start timer timerWaitForSipMessage: 15 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.886699", component: "849", peer_component: "BaseSipClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "322", function_name: "function:generalReceiveSip", message: " Message enqueued on sipClientPort from system @Socket_API_Definitions" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.886815", component: "849", peer_component: "BaseSipClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "363", function_name: "function:generalReceiveSip", message: " Receive operation on port sipClientPort succeeded, message from system(" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.886852", component: "849", peer_component: "BaseSipClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "363", function_name: "function:generalReceiveSip", message: " Message with id 1 was extracted from the queue of sipClientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.886902", component: "849", peer_component: "BaseSipClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "365", function_name: "function:generalReceiveSip", message: " Stop timer timerWaitForSipMessage: 15 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.886934", component: "849", peer_component: "BaseSipClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "320", function_name: "function:generalReceiveSip", message: " Start timer timerWaitForSipMessage: 15 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:28.893295", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on sipClientPort from system @IPL4asp_Types.ASP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msgsip:ericsson.se SIP/2.0\\r\\nMax-Forwards: 69\\r\\nAuthorization: Digest realm=\\\"ericsson.se\\\",username=\\\"10014002006@ericsson.se\\\",uri=\\\"sip:ericsson.se\\\",nonce=\\\"\\\",response=\\\"\\\"\\r\\nRequire: pref\\r\\nContent-Length: 0\\r\\nTo: <sip:10014002006@ericsson.se>\\r\\nExpires: 600000\\r\\nContact: <sip:10014002006@142.133.142.3:5060;csid=8cf72980-08e3-4819-943d-f7260f67318d;transport=TCP>;+g.gsma.rcs.ipcall;+g.3gpp.icsi-ref=\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\";+g.oma.sip-im;+g.gsma.rcs.telephony=\\\"cs\\\";+g.3gpp.cs-voice;+g.3gpp.iari-ref=\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\";video;sip.ice=true;q=0.5\\r\\nCseq: 1 REGISTER\\r\\nVia: SIP/2.0/TCP 142.133.142.3:5060;branch=z9hG4bKf1f94d7cead7c7a3435784500c2ba6fc176b\\r\\nUser-Agent: H2S\\r\\nRoute: <sip:142.133.150.169:26720;lr;transport=TCP>\\r\\nCall-Id: 142.133.142.3_4_1575518397039837327\\r\\nFrom: <sip:10014002006@ericsson.se>;tag=i1o494sa-5\\r\\n\\r\\n\")} id 2" }
Structured  DataFrame { time: "2014/Oct/24 18:34:28.894492", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Incoming message was mapped to @IPL4_demo_types.SIP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msg := { request := { requestLine := { method := REGISTER_E (11), requestUri := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := { fieldName := AUTHORIZATION_E (11), body := { digestResponse := { { id := \"realm\", paramValue := \"\\\"ericsson.se\\\"\" }, { id := \"username\", paramValue := \"\\\"10014002006@ericsson.se\\\"\" }, { id := \"uri\", paramValue := \"\\\"sip:ericsson.se\\\"\" }, { id := \"nonce\", paramValue := \"\\\"\\\"\" }, { id := \"response\", paramValue := \"\\\"\\\"\" } } } }, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_4_1575518397039837327\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"8cf72980-08e3-4819-943d-f7260f67318d\" }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.telephony\", paramValue := \"\\\"cs\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit }, { id := \"sip.ice\", paramValue := \"true\" }, { id := \"q\", paramValue := \"0.5\" } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := { fieldName := EXPIRES_E (24), deltaSec := \"600000\" }, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494sa-5\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := { fieldName := REQUIRE_E (80), optionsTags := { \"pref\" } }, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := { fieldName := ROUTE_E (84), routeBody := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"lr\", paramValue := omit }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } }, rrParam := omit } } }, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f94d7cead7c7a3435784500c2ba6fc176b\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } }} id 2" }
Structured  DataFrame { time: "2014/Oct/24 18:34:28.894848", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port sipClientPort succeeded, message from system(): @IPL4_demo_types.SIP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msg := { request := { requestLine := { method := REGISTER_E (11), requestUri := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := { fieldName := AUTHORIZATION_E (11), body := { digestResponse := { { id := \"realm\", paramValue := \"\\\"ericsson.se\\\"\" }, { id := \"username\", paramValue := \"\\\"10014002006@ericsson.se\\\"\" }, { id := \"uri\", paramValue := \"\\\"sip:ericsson.se\\\"\" }, { id := \"nonce\", paramValue := \"\\\"\\\"\" }, { id := \"response\", paramValue := \"\\\"\\\"\" } } } }, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_4_1575518397039837327\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"8cf72980-08e3-4819-943d-f7260f67318d\" }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.telephony\", paramValue := \"\\\"cs\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit }, { id := \"sip.ice\", paramValue := \"true\" }, { id := \"q\", paramValue := \"0.5\" } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := { fieldName := EXPIRES_E (24), deltaSec := \"600000\" }, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494sa-5\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := { fieldName := REQUIRE_E (80), optionsTags := { \"pref\" } }, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := { fieldName := ROUTE_E (84), routeBody := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"lr\", paramValue := omit }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } }, rrParam := omit } } }, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f94d7cead7c7a3435784500c2ba6fc176b\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } }} id 2" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.894973", component: "849", peer_component: "BaseSipClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "345", function_name: "function:generalReceiveSip", message: " Message with id 2 was extracted from the queue of sipClientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.895006", component: "849", peer_component: "BaseSipClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "346", function_name: "function:generalReceiveSip", message: " Stop timer timerWaitForSipMessage: 15 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:28.896146", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on sipInternalPort to mtc @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspRequest := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, request := { requestLine := { method := REGISTER_E (11), requestUri := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := { fieldName := AUTHORIZATION_E (11), body := { digestResponse := { { id := \"realm\", paramValue := \"\\\"ericsson.se\\\"\" }, { id := \"username\", paramValue := \"\\\"10014002006@ericsson.se\\\"\" }, { id := \"uri\", paramValue := \"\\\"sip:ericsson.se\\\"\" }, { id := \"nonce\", paramValue := \"\\\"\\\"\" }, { id := \"response\", paramValue := \"\\\"\\\"\" } } } }, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_4_1575518397039837327\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"8cf72980-08e3-4819-943d-f7260f67318d\" }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.telephony\", paramValue := \"\\\"cs\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit }, { id := \"sip.ice\", paramValue := \"true\" }, { id := \"q\", paramValue := \"0.5\" } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := { fieldName := EXPIRES_E (24), deltaSec := \"600000\" }, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494sa-5\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := { fieldName := REQUIRE_E (80), optionsTags := { \"pref\" } }, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := { fieldName := ROUTE_E (84), routeBody := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"lr\", paramValue := omit }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } }, rrParam := omit } } }, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f94d7cead7c7a3435784500c2ba6fc176b\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.896457", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "74", function_name: "function:sipRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:28.896698", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on sipInternalPort[0] from 849 @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspRequest := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, request := { requestLine := { method := REGISTER_E (11), requestUri := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := { fieldName := AUTHORIZATION_E (11), body := { digestResponse := { { id := \"realm\", paramValue := \"\\\"ericsson.se\\\"\" }, { id := \"username\", paramValue := \"\\\"10014002006@ericsson.se\\\"\" }, { id := \"uri\", paramValue := \"\\\"sip:ericsson.se\\\"\" }, { id := \"nonce\", paramValue := \"\\\"\\\"\" }, { id := \"response\", paramValue := \"\\\"\\\"\" } } } }, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_4_1575518397039837327\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"8cf72980-08e3-4819-943d-f7260f67318d\" }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.telephony\", paramValue := \"\\\"cs\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit }, { id := \"sip.ice\", paramValue := \"true\" }, { id := \"q\", paramValue := \"0.5\" } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := { fieldName := EXPIRES_E (24), deltaSec := \"600000\" }, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494sa-5\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := { fieldName := REQUIRE_E (80), optionsTags := { \"pref\" } }, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := { fieldName := ROUTE_E (84), routeBody := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"lr\", paramValue := omit }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } }, rrParam := omit } } }, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f94d7cead7c7a3435784500c2ba6fc176b\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 3" }
Structured  DataFrame { time: "2014/Oct/24 18:34:28.896990", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port sipInternalPort[0] succeeded, message from 849: @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspRequest := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, request := { requestLine := { method := REGISTER_E (11), requestUri := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := { fieldName := AUTHORIZATION_E (11), body := { digestResponse := { { id := \"realm\", paramValue := \"\\\"ericsson.se\\\"\" }, { id := \"username\", paramValue := \"\\\"10014002006@ericsson.se\\\"\" }, { id := \"uri\", paramValue := \"\\\"sip:ericsson.se\\\"\" }, { id := \"nonce\", paramValue := \"\\\"\\\"\" }, { id := \"response\", paramValue := \"\\\"\\\"\" } } } }, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_4_1575518397039837327\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"8cf72980-08e3-4819-943d-f7260f67318d\" }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.telephony\", paramValue := \"\\\"cs\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit }, { id := \"sip.ice\", paramValue := \"true\" }, { id := \"q\", paramValue := \"0.5\" } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := { fieldName := EXPIRES_E (24), deltaSec := \"600000\" }, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494sa-5\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := { fieldName := REQUIRE_E (80), optionsTags := { \"pref\" } }, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := { fieldName := ROUTE_E (84), routeBody := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"lr\", paramValue := omit }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } }, rrParam := omit } } }, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f94d7cead7c7a3435784500c2ba6fc176b\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 3" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.897077", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Message with id 3 was extracted from the queue of sipInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.897108", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "255", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.900870", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.910996", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "286", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:28.911356", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on sipInternalPort[0] to 849 @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMMAND_SIP_SEND_SIP_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"1\" }, { parameterName := \"SUBSCRIBER\", parameterValue := \"11\" } } }, aspsSip := { { aspResponse := { addr := { remote_host := \"142.133.142.3\", remote_port := 5060, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 401, reasonPhrase := \"Unauthorized\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_4_1575518397039837327\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494sa-5\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"93068738936275990859113464440233379922\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f94d7cead7c7a3435784500c2ba6fc176b\" } } } } }, warning := omit, wwwAuthenticate := { fieldName := WWW_AUTHENTICATE_E (104), challenge := { { digestCln := { { id := \"nonce\", paramValue := \"\\\"68802944664224158604006517243880\\\"\" }, { id := \"realm\", paramValue := \"\\\"ericsson.se\\\"\" }, { id := \"stale\", paramValue := \"false\" }, { id := \"algorithm\", paramValue := \"MD5\" }, { id := \"qop\", paramValue := \"\\\"auth\\\"\" } } } } }, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.911612", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:28.911673", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on sipInternalPort from mtc @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMMAND_SIP_SEND_SIP_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"1\" }, { parameterName := \"SUBSCRIBER\", parameterValue := \"11\" } } }, aspsSip := { { aspResponse := { addr := { remote_host := \"142.133.142.3\", remote_port := 5060, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 401, reasonPhrase := \"Unauthorized\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_4_1575518397039837327\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494sa-5\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"93068738936275990859113464440233379922\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f94d7cead7c7a3435784500c2ba6fc176b\" } } } } }, warning := omit, wwwAuthenticate := { fieldName := WWW_AUTHENTICATE_E (104), challenge := { { digestCln := { { id := \"nonce\", paramValue := \"\\\"68802944664224158604006517243880\\\"\" }, { id := \"realm\", paramValue := \"\\\"ericsson.se\\\"\" }, { id := \"stale\", paramValue := \"false\" }, { id := \"algorithm\", paramValue := \"MD5\" }, { id := \"qop\", paramValue := \"\\\"auth\\\"\" } } } } }, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 3" }
Structured  DataFrame { time: "2014/Oct/24 18:34:28.911846", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port sipInternalPort succeeded, message from mtc: @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMMAND_SIP_SEND_SIP_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"1\" }, { parameterName := \"SUBSCRIBER\", parameterValue := \"11\" } } }, aspsSip := { { aspResponse := { addr := { remote_host := \"142.133.142.3\", remote_port := 5060, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 401, reasonPhrase := \"Unauthorized\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_4_1575518397039837327\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494sa-5\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"93068738936275990859113464440233379922\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f94d7cead7c7a3435784500c2ba6fc176b\" } } } } }, warning := omit, wwwAuthenticate := { fieldName := WWW_AUTHENTICATE_E (104), challenge := { { digestCln := { { id := \"nonce\", paramValue := \"\\\"68802944664224158604006517243880\\\"\" }, { id := \"realm\", paramValue := \"\\\"ericsson.se\\\"\" }, { id := \"stale\", paramValue := \"false\" }, { id := \"algorithm\", paramValue := \"MD5\" }, { id := \"qop\", paramValue := \"\\\"auth\\\"\" } } } } }, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 3" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.911917", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Message with id 3 was extracted from the queue of sipInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.911943", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "80", function_name: "function:sipRun", message: " Stop timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:28.912373", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on sipClientPort to system @IPL4_demo_types.SIP_SendTo : { connId := 3, remName := \"142.133.142.3\", remPort := 5060, proto := { tcp := { } }, msg := { raw := \"SIP/2.0 401 Unauthorized\\r\\nCall-ID:142.133.142.3_4_1575518397039837327\\r\\nContent-Length:0\\r\\nCSeq:1 REGISTER\\r\\nFrom:<sip:10014002006@ericsson.se>;tag=i1o494sa-5\\r\\nTo:<sip:10014002006@ericsson.se>;tag=93068738936275990859113464440233379922\\r\\nVia:SIP/2.0/TCP 142.133.142.3:5060;branch=z9hG4bKf1f94d7cead7c7a3435784500c2ba6fc176b\\r\\nWWW-Authenticate:Digest nonce=\\\"68802944664224158604006517243880\\\", realm=\\\"ericsson.se\\\", stale=false, algorithm=MD5, qop=\\\"auth\\\"\\r\\n\\r\\n\" }}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:28.912452", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Outgoing message was mapped to @IPL4asp_Types.ASP_SendTo : { connId := 3, remName := \"142.133.142.3\", remPort := 5060, proto := { tcp := { } }, msgnauthorized\\r\\nCall-ID:142.133.142.3_4_1575518397039837327\\r\\nContent-Length:0\\r\\nCSeq:1 REGISTER\\r\\nFrom:<sip:10014002006@ericsson.se>;tag=i1o494sa-5\\r\\nTo:<sip:10014002006@ericsson.se>;tag=93068738936275990859113464440233379922\\r\\nVia:SIP/2.0/TCP 142.133.142.3:5060;branch=z9hG4bKf1f94d7cead7c7a3435784500c2ba6fc176b\\r\\nWWW-Authenticate:Digest nonce=\\\"68802944664224158604006517243880\\\", realm=\\\"ericsson.se\\\", stale=false, algorithm=MD5, qop=\\\"auth\\\"\\r\\n\\r\\n\")}" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.912574", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "388", function_name: "function:processCommand", message: " Sent on sipInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.912633", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "74", function_name: "function:sipRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.912676", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "253", function_name: "function:receiveInternalMessage", message: " Message enqueued on sipInternalPort[0] from 849 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.912747", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Receive operation on port sipInternalPort[0] succeeded, message from 849: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.912772", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Message with id 4 was extracted from the queue of sipInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.912804", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "255", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.913372", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.926994", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "286", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.927072", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "202", function_name: "function:sendInternalMessage", message: " Sent on sipInternalPort[0] to 849 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.927198", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "78", function_name: "function:sipRun", message: " Message enqueued on sipInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.927258", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.927274", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Receive operation on port sipInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.927299", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Message with id 4 was extracted from the queue of sipInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.927314", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "80", function_name: "function:sipRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.927408", component: "849", peer_component: "BaseSipClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "320", function_name: "function:generalReceiveSip", message: " Start timer timerWaitForSipMessage: 15 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:28.949260", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on sipClientPort from system @IPL4asp_Types.ASP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msgsip:ericsson.se SIP/2.0\\r\\nMax-Forwards: 69\\r\\nAuthorization: Digest realm=\\\"ericsson.se\\\",username=\\\"10014002006@ericsson.se\\\",uri=\\\"sip:ericsson.se\\\",nonce=\\\"68802944664224158604006517243880\\\",nc=00000001,cnonce=\\\"a2cf7676bda40995134c471c88c57112\\\",qop=auth,response=\\\"54b302deb6b02ae75c946cf2edc27653\\\",algorithm=MD5\\r\\nRequire: pref\\r\\nContent-Length: 0\\r\\nTo: <sip:10014002006@ericsson.se>\\r\\nContact: <sip:10014002006@142.133.142.3:5060;csid=8cf72980-08e3-4819-943d-f7260f67318d;transport=TCP>;+g.gsma.rcs.ipcall;+g.3gpp.icsi-ref=\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\";+g.oma.sip-im;+g.gsma.rcs.telephony=\\\"cs\\\";+g.3gpp.cs-voice;+g.3gpp.iari-ref=\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\";video;sip.ice=true;q=0.5\\r\\nExpires: 600000\\r\\nCseq: 2 REGISTER\\r\\nVia: SIP/2.0/TCP 142.133.142.3:5060;branch=z9hG4bKf1f906bb85d71c1540e48fd894134428920b\\r\\nUser-Agent: H2S\\r\\nRoute: <sip:142.133.150.169:26720;lr;transport=TCP>\\r\\nFrom: <sip:10014002006@ericsson.se>;tag=i1o494sa-5\\r\\nCall-Id: 142.133.142.3_4_1575518397039837327\\r\\n\\r\\n\")} id 3" }
Structured  DataFrame { time: "2014/Oct/24 18:34:28.949779", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Incoming message was mapped to @IPL4_demo_types.SIP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msg := { request := { requestLine := { method := REGISTER_E (11), requestUri := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := { fieldName := AUTHORIZATION_E (11), body := { digestResponse := { { id := \"realm\", paramValue := \"\\\"ericsson.se\\\"\" }, { id := \"username\", paramValue := \"\\\"10014002006@ericsson.se\\\"\" }, { id := \"uri\", paramValue := \"\\\"sip:ericsson.se\\\"\" }, { id := \"nonce\", paramValue := \"\\\"68802944664224158604006517243880\\\"\" }, { id := \"nc\", paramValue := \"00000001\" }, { id := \"cnonce\", paramValue := \"\\\"a2cf7676bda40995134c471c88c57112\\\"\" }, { id := \"qop\", paramValue := \"auth\" }, { id := \"response\", paramValue := \"\\\"54b302deb6b02ae75c946cf2edc27653\\\"\" }, { id := \"algorithm\", paramValue := \"MD5\" } } } }, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_4_1575518397039837327\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"8cf72980-08e3-4819-943d-f7260f67318d\" }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.telephony\", paramValue := \"\\\"cs\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit }, { id := \"sip.ice\", paramValue := \"true\" }, { id := \"q\", paramValue := \"0.5\" } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 2, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := { fieldName := EXPIRES_E (24), deltaSec := \"600000\" }, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494sa-5\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := { fieldName := REQUIRE_E (80), optionsTags := { \"pref\" } }, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := { fieldName := ROUTE_E (84), routeBody := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"lr\", paramValue := omit }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } }, rrParam := omit } } }, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f906bb85d71c1540e48fd894134428920b\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } }} id 3" }
Structured  DataFrame { time: "2014/Oct/24 18:34:28.950045", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port sipClientPort succeeded, message from system(): @IPL4_demo_types.SIP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msg := { request := { requestLine := { method := REGISTER_E (11), requestUri := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := { fieldName := AUTHORIZATION_E (11), body := { digestResponse := { { id := \"realm\", paramValue := \"\\\"ericsson.se\\\"\" }, { id := \"username\", paramValue := \"\\\"10014002006@ericsson.se\\\"\" }, { id := \"uri\", paramValue := \"\\\"sip:ericsson.se\\\"\" }, { id := \"nonce\", paramValue := \"\\\"68802944664224158604006517243880\\\"\" }, { id := \"nc\", paramValue := \"00000001\" }, { id := \"cnonce\", paramValue := \"\\\"a2cf7676bda40995134c471c88c57112\\\"\" }, { id := \"qop\", paramValue := \"auth\" }, { id := \"response\", paramValue := \"\\\"54b302deb6b02ae75c946cf2edc27653\\\"\" }, { id := \"algorithm\", paramValue := \"MD5\" } } } }, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_4_1575518397039837327\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"8cf72980-08e3-4819-943d-f7260f67318d\" }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.telephony\", paramValue := \"\\\"cs\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit }, { id := \"sip.ice\", paramValue := \"true\" }, { id := \"q\", paramValue := \"0.5\" } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 2, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := { fieldName := EXPIRES_E (24), deltaSec := \"600000\" }, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494sa-5\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := { fieldName := REQUIRE_E (80), optionsTags := { \"pref\" } }, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := { fieldName := ROUTE_E (84), routeBody := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"lr\", paramValue := omit }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } }, rrParam := omit } } }, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f906bb85d71c1540e48fd894134428920b\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } }} id 3" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.950133", component: "849", peer_component: "BaseSipClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "345", function_name: "function:generalReceiveSip", message: " Message with id 3 was extracted from the queue of sipClientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.950155", component: "849", peer_component: "BaseSipClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "346", function_name: "function:generalReceiveSip", message: " Stop timer timerWaitForSipMessage: 15 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:28.950857", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on sipInternalPort to mtc @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspRequest := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, request := { requestLine := { method := REGISTER_E (11), requestUri := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := { fieldName := AUTHORIZATION_E (11), body := { digestResponse := { { id := \"realm\", paramValue := \"\\\"ericsson.se\\\"\" }, { id := \"username\", paramValue := \"\\\"10014002006@ericsson.se\\\"\" }, { id := \"uri\", paramValue := \"\\\"sip:ericsson.se\\\"\" }, { id := \"nonce\", paramValue := \"\\\"68802944664224158604006517243880\\\"\" }, { id := \"nc\", paramValue := \"00000001\" }, { id := \"cnonce\", paramValue := \"\\\"a2cf7676bda40995134c471c88c57112\\\"\" }, { id := \"qop\", paramValue := \"auth\" }, { id := \"response\", paramValue := \"\\\"54b302deb6b02ae75c946cf2edc27653\\\"\" }, { id := \"algorithm\", paramValue := \"MD5\" } } } }, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_4_1575518397039837327\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"8cf72980-08e3-4819-943d-f7260f67318d\" }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.telephony\", paramValue := \"\\\"cs\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit }, { id := \"sip.ice\", paramValue := \"true\" }, { id := \"q\", paramValue := \"0.5\" } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 2, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := { fieldName := EXPIRES_E (24), deltaSec := \"600000\" }, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494sa-5\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := { fieldName := REQUIRE_E (80), optionsTags := { \"pref\" } }, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := { fieldName := ROUTE_E (84), routeBody := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"lr\", paramValue := omit }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } }, rrParam := omit } } }, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f906bb85d71c1540e48fd894134428920b\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.951040", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "74", function_name: "function:sipRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:28.951215", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on sipInternalPort[0] from 849 @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspRequest := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, request := { requestLine := { method := REGISTER_E (11), requestUri := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := { fieldName := AUTHORIZATION_E (11), body := { digestResponse := { { id := \"realm\", paramValue := \"\\\"ericsson.se\\\"\" }, { id := \"username\", paramValue := \"\\\"10014002006@ericsson.se\\\"\" }, { id := \"uri\", paramValue := \"\\\"sip:ericsson.se\\\"\" }, { id := \"nonce\", paramValue := \"\\\"68802944664224158604006517243880\\\"\" }, { id := \"nc\", paramValue := \"00000001\" }, { id := \"cnonce\", paramValue := \"\\\"a2cf7676bda40995134c471c88c57112\\\"\" }, { id := \"qop\", paramValue := \"auth\" }, { id := \"response\", paramValue := \"\\\"54b302deb6b02ae75c946cf2edc27653\\\"\" }, { id := \"algorithm\", paramValue := \"MD5\" } } } }, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_4_1575518397039837327\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"8cf72980-08e3-4819-943d-f7260f67318d\" }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.telephony\", paramValue := \"\\\"cs\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit }, { id := \"sip.ice\", paramValue := \"true\" }, { id := \"q\", paramValue := \"0.5\" } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 2, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := { fieldName := EXPIRES_E (24), deltaSec := \"600000\" }, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494sa-5\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := { fieldName := REQUIRE_E (80), optionsTags := { \"pref\" } }, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := { fieldName := ROUTE_E (84), routeBody := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"lr\", paramValue := omit }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } }, rrParam := omit } } }, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f906bb85d71c1540e48fd894134428920b\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 5" }
Structured  DataFrame { time: "2014/Oct/24 18:34:28.951443", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port sipInternalPort[0] succeeded, message from 849: @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspRequest := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, request := { requestLine := { method := REGISTER_E (11), requestUri := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := { fieldName := AUTHORIZATION_E (11), body := { digestResponse := { { id := \"realm\", paramValue := \"\\\"ericsson.se\\\"\" }, { id := \"username\", paramValue := \"\\\"10014002006@ericsson.se\\\"\" }, { id := \"uri\", paramValue := \"\\\"sip:ericsson.se\\\"\" }, { id := \"nonce\", paramValue := \"\\\"68802944664224158604006517243880\\\"\" }, { id := \"nc\", paramValue := \"00000001\" }, { id := \"cnonce\", paramValue := \"\\\"a2cf7676bda40995134c471c88c57112\\\"\" }, { id := \"qop\", paramValue := \"auth\" }, { id := \"response\", paramValue := \"\\\"54b302deb6b02ae75c946cf2edc27653\\\"\" }, { id := \"algorithm\", paramValue := \"MD5\" } } } }, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_4_1575518397039837327\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"8cf72980-08e3-4819-943d-f7260f67318d\" }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.telephony\", paramValue := \"\\\"cs\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit }, { id := \"sip.ice\", paramValue := \"true\" }, { id := \"q\", paramValue := \"0.5\" } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 2, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := { fieldName := EXPIRES_E (24), deltaSec := \"600000\" }, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494sa-5\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := { fieldName := REQUIRE_E (80), optionsTags := { \"pref\" } }, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := { fieldName := ROUTE_E (84), routeBody := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"lr\", paramValue := omit }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } }, rrParam := omit } } }, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f906bb85d71c1540e48fd894134428920b\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 5" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.951532", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Message with id 5 was extracted from the queue of sipInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.951553", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "255", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.955188", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.966980", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "286", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:28.967378", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on sipInternalPort[0] to 849 @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMMAND_SIP_SEND_SIP_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"1\" }, { parameterName := \"SUBSCRIBER\", parameterValue := \"11\" } } }, aspsSip := { { aspResponse := { addr := { remote_host := \"142.133.142.3\", remote_port := 5060, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 200, reasonPhrase := \"OK\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := { fieldName := AUTHENTICATION_INFO_E (10), ainfo := { { id := \"qop\", paramValue := \"\\\"auth\\\"\" }, { id := \"rspauth\", paramValue := \"\\\"4e0afd3006175776f901e66eaea9c15a\\\"\" }, { id := \"cnonce\", paramValue := \"\\\"68802944664224158604006517243880\\\"\" }, { id := \"nc\", paramValue := \"\\\"1\\\"\" } } }, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_4_1575518397039837327\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"8cf72980-08e3-4819-943d-f7260f67318d\" }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.telephony\", paramValue := \"\\\"cs\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit }, { id := \"sip.ice\", paramValue := \"true\" }, { id := \"q\", paramValue := \"0.5\" }, { id := \"expires\", paramValue := \"600000\" } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 2, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494sa-5\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := { fieldName := P_ASSOCIATED_URI (44), p_assoc_uris := { { p_asso_uri := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } }, ai_params := omit }, { p_asso_uri := { displayName := omit, addrSpec := { scheme := \"tel\", userInfo := { userOrTelephoneSubscriber := \"+10014002006\", password := omit }, hostPort := { host := omit, portField := omit }, urlParameters := omit, headers := omit } }, ai_params := omit } } }, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"08671160745834373805448460311457742797\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f906bb85d71c1540e48fd894134428920b\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.967634", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:28.967842", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on sipInternalPort from mtc @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMMAND_SIP_SEND_SIP_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"1\" }, { parameterName := \"SUBSCRIBER\", parameterValue := \"11\" } } }, aspsSip := { { aspResponse := { addr := { remote_host := \"142.133.142.3\", remote_port := 5060, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 200, reasonPhrase := \"OK\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := { fieldName := AUTHENTICATION_INFO_E (10), ainfo := { { id := \"qop\", paramValue := \"\\\"auth\\\"\" }, { id := \"rspauth\", paramValue := \"\\\"4e0afd3006175776f901e66eaea9c15a\\\"\" }, { id := \"cnonce\", paramValue := \"\\\"68802944664224158604006517243880\\\"\" }, { id := \"nc\", paramValue := \"\\\"1\\\"\" } } }, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_4_1575518397039837327\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"8cf72980-08e3-4819-943d-f7260f67318d\" }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.telephony\", paramValue := \"\\\"cs\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit }, { id := \"sip.ice\", paramValue := \"true\" }, { id := \"q\", paramValue := \"0.5\" }, { id := \"expires\", paramValue := \"600000\" } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 2, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494sa-5\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := { fieldName := P_ASSOCIATED_URI (44), p_assoc_uris := { { p_asso_uri := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } }, ai_params := omit }, { p_asso_uri := { displayName := omit, addrSpec := { scheme := \"tel\", userInfo := { userOrTelephoneSubscriber := \"+10014002006\", password := omit }, hostPort := { host := omit, portField := omit }, urlParameters := omit, headers := omit } }, ai_params := omit } } }, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"08671160745834373805448460311457742797\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f906bb85d71c1540e48fd894134428920b\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 5" }
Structured  DataFrame { time: "2014/Oct/24 18:34:28.968150", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port sipInternalPort succeeded, message from mtc: @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMMAND_SIP_SEND_SIP_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"1\" }, { parameterName := \"SUBSCRIBER\", parameterValue := \"11\" } } }, aspsSip := { { aspResponse := { addr := { remote_host := \"142.133.142.3\", remote_port := 5060, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 200, reasonPhrase := \"OK\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := { fieldName := AUTHENTICATION_INFO_E (10), ainfo := { { id := \"qop\", paramValue := \"\\\"auth\\\"\" }, { id := \"rspauth\", paramValue := \"\\\"4e0afd3006175776f901e66eaea9c15a\\\"\" }, { id := \"cnonce\", paramValue := \"\\\"68802944664224158604006517243880\\\"\" }, { id := \"nc\", paramValue := \"\\\"1\\\"\" } } }, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_4_1575518397039837327\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"8cf72980-08e3-4819-943d-f7260f67318d\" }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.telephony\", paramValue := \"\\\"cs\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit }, { id := \"sip.ice\", paramValue := \"true\" }, { id := \"q\", paramValue := \"0.5\" }, { id := \"expires\", paramValue := \"600000\" } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 2, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494sa-5\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := { fieldName := P_ASSOCIATED_URI (44), p_assoc_uris := { { p_asso_uri := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } }, ai_params := omit }, { p_asso_uri := { displayName := omit, addrSpec := { scheme := \"tel\", userInfo := { userOrTelephoneSubscriber := \"+10014002006\", password := omit }, hostPort := { host := omit, portField := omit }, urlParameters := omit, headers := omit } }, ai_params := omit } } }, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"08671160745834373805448460311457742797\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f906bb85d71c1540e48fd894134428920b\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 5" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.968254", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Message with id 5 was extracted from the queue of sipInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.968276", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "80", function_name: "function:sipRun", message: " Stop timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:28.968957", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on sipClientPort to system @IPL4_demo_types.SIP_SendTo : { connId := 3, remName := \"142.133.142.3\", remPort := 5060, proto := { tcp := { } }, msg := { raw := \"SIP/2.0 200 OK\\r\\nAuthentication-Info:qop=\\\"auth\\\", rspauth=\\\"4e0afd3006175776f901e66eaea9c15a\\\", cnonce=\\\"68802944664224158604006517243880\\\", nc=\\\"1\\\"\\r\\nCall-ID:142.133.142.3_4_1575518397039837327\\r\\nContact:<sip:10014002006@142.133.142.3:5060;csid=8cf72980-08e3-4819-943d-f7260f67318d;transport=TCP>;+g.gsma.rcs.ipcall;+g.3gpp.icsi-ref=\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\";+g.oma.sip-im;+g.gsma.rcs.telephony=\\\"cs\\\";+g.3gpp.cs-voice;+g.3gpp.iari-ref=\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\";video;sip.ice=true;q=0.5;expires=600000\\r\\nContent-Length:0\\r\\nCSeq:2 REGISTER\\r\\nFrom:<sip:10014002006@ericsson.se>;tag=i1o494sa-5\\r\\nP-Associated-URI:<sip:10014002006@ericsson.se>\\r\\nP-Associated-URI:<tel:+10014002006>\\r\\nTo:<sip:10014002006@ericsson.se>;tag=08671160745834373805448460311457742797\\r\\nVia:SIP/2.0/TCP 142.133.142.3:5060;branch=z9hG4bKf1f906bb85d71c1540e48fd894134428920b\\r\\n\\r\\n\" }}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:28.969129", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Outgoing message was mapped to @IPL4asp_Types.ASP_SendTo : { connId := 3, remName := \"142.133.142.3\", remPort := 5060, proto := { tcp := { } }, msgr\\nAuthentication-Info:qop=\\\"auth\\\", rspauth=\\\"4e0afd3006175776f901e66eaea9c15a\\\", cnonce=\\\"68802944664224158604006517243880\\\", nc=\\\"1\\\"\\r\\nCall-ID:142.133.142.3_4_1575518397039837327\\r\\nContact:<sip:10014002006@142.133.142.3:5060;csid=8cf72980-08e3-4819-943d-f7260f67318d;transport=TCP>;+g.gsma.rcs.ipcall;+g.3gpp.icsi-ref=\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\";+g.oma.sip-im;+g.gsma.rcs.telephony=\\\"cs\\\";+g.3gpp.cs-voice;+g.3gpp.iari-ref=\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\";video;sip.ice=true;q=0.5;expires=600000\\r\\nContent-Length:0\\r\\nCSeq:2 REGISTER\\r\\nFrom:<sip:10014002006@ericsson.se>;tag=i1o494sa-5\\r\\nP-Associated-URI:<sip:10014002006@ericsson.se>\\r\\nP-Associated-URI:<tel:+10014002006>\\r\\nTo:<sip:10014002006@ericsson.se>;tag=08671160745834373805448460311457742797\\r\\nVia:SIP/2.0/TCP 142.133.142.3:5060;branch=z9hG4bKf1f906bb85d71c1540e48fd894134428920b\\r\\n\\r\\n\")}" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.969325", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "388", function_name: "function:processCommand", message: " Sent on sipInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.969399", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "74", function_name: "function:sipRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.969439", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "253", function_name: "function:receiveInternalMessage", message: " Message enqueued on sipInternalPort[0] from 849 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.969489", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Receive operation on port sipInternalPort[0] succeeded, message from 849: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.969512", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Message with id 6 was extracted from the queue of sipInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.969530", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "255", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.969841", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.006870", component: "853", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on clientPort from system @HTTPmsg_Types.HTTPMessage : { response := { client_id := 9, version_major := 1, version_minor := 1, statuscode := 201, statustext := \"Created\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Location\", header_value := \"http://142.133.142.3:8080/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:28 GMT\" } }, body := \"{\\n \\\"resourceURL\\\": \\\"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d\\\",\\n \\\"serviceCapability\\\": [ {\\n \\\"capabilityId\\\": \\\"ip_voice_call\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"ip_video_call\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"im_chat\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"video_share\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"+custom-valid-feature\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"im_standalone\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"ab\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"file_transfer\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"cs\\\"\\n } ]\\n}\" }} id 2" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.007083", component: "853", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port clientPort succeeded, message from system(): @HTTPmsg_Types.HTTPMessage : { response := { client_id := 9, version_major := 1, version_minor := 1, statuscode := 201, statustext := \"Created\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Location\", header_value := \"http://142.133.142.3:8080/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:28 GMT\" } }, body := \"{\\n \\\"resourceURL\\\": \\\"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d\\\",\\n \\\"serviceCapability\\\": [ {\\n \\\"capabilityId\\\": \\\"ip_voice_call\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"ip_video_call\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"im_chat\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"video_share\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"+custom-valid-feature\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"im_standalone\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"ab\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"file_transfer\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"cs\\\"\\n } ]\\n}\" }} id 2" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.007125", component: "853", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "193", function_name: "function:receiveAnyHTTPClientResponse", message: " Message with id 2 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.007148", component: "853", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "194", function_name: "function:receiveAnyHTTPClientResponse", message: " Stop timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.007403", component: "853", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort to mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\n \\\"resourceURL\\\": \\\"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d\\\",\\n \\\"serviceCapability\\\": [ {\\n \\\"capabilityId\\\": \\\"ip_voice_call\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"ip_video_call\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"im_chat\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"video_share\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"+custom-valid-feature\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"im_standalone\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"ab\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"file_transfer\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"cs\\\"\\n } ]\\n}\", contentType := \"\", statusCode := \"201\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Location\", header_value := \"http://142.133.142.3:8080/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:28 GMT\" } } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.007531", component: "853", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "62", function_name: "function:httpNodeRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.007661", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort[2] from 853 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\n \\\"resourceURL\\\": \\\"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d\\\",\\n \\\"serviceCapability\\\": [ {\\n \\\"capabilityId\\\": \\\"ip_voice_call\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"ip_video_call\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"im_chat\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"video_share\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"+custom-valid-feature\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"im_standalone\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"ab\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"file_transfer\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"cs\\\"\\n } ]\\n}\", contentType := \"\", statusCode := \"201\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Location\", header_value := \"http://142.133.142.3:8080/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:28 GMT\" } } } } }} id 2" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.007800", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort[2] succeeded, message from 853: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\n \\\"resourceURL\\\": \\\"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d\\\",\\n \\\"serviceCapability\\\": [ {\\n \\\"capabilityId\\\": \\\"ip_voice_call\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"ip_video_call\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"im_chat\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"video_share\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"+custom-valid-feature\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"im_standalone\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"ab\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"file_transfer\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"cs\\\"\\n } ]\\n}\", contentType := \"\", statusCode := \"201\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Location\", header_value := \"http://142.133.142.3:8080/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:28 GMT\" } } } } }} id 2" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.007846", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Message with id 2 was extracted from the queue of httpNodeInternalPort[2]" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.007866", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "241", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.010814", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 10 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.010872", component: "854", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port clientPort was started." }
Simple DataFrame { time: "2014/Oct/24 18:34:29.010930", component: "854", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port serverPort was started." }
Simple DataFrame { time: "2014/Oct/24 18:34:29.010957", component: "854", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port httpNodeInternalPort was started." }
Simple DataFrame { time: "2014/Oct/24 18:34:29.012581", component: "854", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "130", function_name: "function:httpNodeInitialize", message: " Port clientPort was mapped to system:clientPort[3]" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.012999", component: "854", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "133", function_name: "function:httpNodeInitialize", message: " Port serverPort was mapped to system:serverPort[3]" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.013402", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port httpNodeInternalPort[3] is waiting for connection from 854:httpNodeInternalPort on UNIX pathname /tmp/ttcn3-portconn-2c0b9a2a." }
Simple DataFrame { time: "2014/Oct/24 18:34:29.013537", component: "854", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "136", function_name: "function:httpNodeInitialize", message: " Port httpNodeInternalPort has established the connection with mtc:httpNodeInternalPort[3] using transport type UNIX" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.013593", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "239", function_name: "function:receiveInternalMessage", message: " Port httpNodeInternalPort[3] has accepted the connection from 854:httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.013886", component: "854", peer_component: "BaseHttpServerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "55", function_name: "function:openServerForListening", message: " Sent on serverPort to system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.014076", component: "854", peer_component: "BaseHttpServerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "55", function_name: "function:openServerForListening", message: " Message enqueued on serverPort from system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.014120", component: "854", peer_component: "BaseHttpServerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "73", function_name: "function:receiveHTTPServerListenResult", message: " Start timer timerWaitForHTTPRequest: 5 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.014168", component: "854", peer_component: "BaseHttpServerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "77", function_name: "function:receiveHTTPServerListenResult", message: " Receive operation on port serverPort succeeded, message from system(" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.014226", component: "854", peer_component: "BaseHttpServerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "77", function_name: "function:receiveHTTPServerListenResult", message: " Message with id 1 was extracted from the queue of serverPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.014249", component: "854", peer_component: "BaseHttpServerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "78", function_name: "function:receiveHTTPServerListenResult", message: " Stop timer timerWaitForHTTPRequest: 5 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.014345", component: "854", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "141", function_name: "function:httpNodeInitialize", message: " Sent on httpNodeInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.014444", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "239", function_name: "function:receiveInternalMessage", message: " Message enqueued on httpNodeInternalPort[3] from 854 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.014461", component: "854", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "62", function_name: "function:httpNodeRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.014491", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Receive operation on port httpNodeInternalPort[3] succeeded, message from 854: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.014516", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Message with id 1 was extracted from the queue of httpNodeInternalPort[3]" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.014534", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "241", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 10 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.014669", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.026976", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "267", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.027217", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort[3] to 854 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"1\" } } }, aspHttp := { { httpMessage := { method := \"POST\", url := \"/14A/v3/register\", body := \"{ \\\"username\\\": \\\"10014002007@ericsson.se\\\", \\\"password\\\": \\\"10014002007\\\", \\\"mediaType\\\": \\\"rtp\\\", \\\"services\\\": [ \\\"im_chat\\\", \\\"file_transfer\\\", \\\"video_share\\\", \\\"ip_voice_call\\\", \\\"ip_video_call\\\", \\\"im_standalone\\\", \\\"cs\\\", \\\"ab\\\", \\\"+custom-valid-feature\\\", \\\"custom-invalid-feature\\\"] } \", contentType := \"application/json\", statusCode := \"\", header := { } } } }}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.027403", component: "854", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort from mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"1\" } } }, aspHttp := { { httpMessage := { method := \"POST\", url := \"/14A/v3/register\", body := \"{ \\\"username\\\": \\\"10014002007@ericsson.se\\\", \\\"password\\\": \\\"10014002007\\\", \\\"mediaType\\\": \\\"rtp\\\", \\\"services\\\": [ \\\"im_chat\\\", \\\"file_transfer\\\", \\\"video_share\\\", \\\"ip_voice_call\\\", \\\"ip_video_call\\\", \\\"im_standalone\\\", \\\"cs\\\", \\\"ab\\\", \\\"+custom-valid-feature\\\", \\\"custom-invalid-feature\\\"] } \", contentType := \"application/json\", statusCode := \"\", header := { } } } }} id 1" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.027506", component: "854", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort succeeded, message from mtc: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"1\" } } }, aspHttp := { { httpMessage := { method := \"POST\", url := \"/14A/v3/register\", body := \"{ \\\"username\\\": \\\"10014002007@ericsson.se\\\", \\\"password\\\": \\\"10014002007\\\", \\\"mediaType\\\": \\\"rtp\\\", \\\"services\\\": [ \\\"im_chat\\\", \\\"file_transfer\\\", \\\"video_share\\\", \\\"ip_voice_call\\\", \\\"ip_video_call\\\", \\\"im_standalone\\\", \\\"cs\\\", \\\"ab\\\", \\\"+custom-valid-feature\\\", \\\"custom-invalid-feature\\\"] } \", contentType := \"application/json\", statusCode := \"\", header := { } } } }} id 1" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.027562", component: "854", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "67", function_name: "function:httpNodeRun", message: " Message with id 1 was extracted from the queue of httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.027585", component: "854", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "68", function_name: "function:httpNodeRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.027851", component: "854", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "307", function_name: "function:clearHTTPClientPort", message: " Start timer timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.027896", component: "854", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "313", function_name: "function:clearHTTPClientPort", message: " Timeout timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.027992", component: "854", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Sent on clientPort to system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.028030", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.028842", component: "854", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Message enqueued on clientPort from system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.028904", component: "854", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "243", function_name: "function:sendHTTPClientRequest", message: " Start timer timerWaitForHTTPOpenConnection: 2 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.028959", component: "854", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Receive operation on port clientPort succeeded, message from system(" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.028997", component: "854", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Message with id 1 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.029059", component: "854", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "246", function_name: "function:sendHTTPClientRequest", message: " Stop timer timerWaitForHTTPOpenConnection: 2 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.029219", component: "854", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on clientPort to system @HTTPmsg_Types.HTTPMessage : { request := { client_id := 9, method := \"POST\", uri := \"/14A/v3/register\", version_major := 1, version_minor := 1, header := { { header_name := \"Host\", header_value := \"142.133.142.3\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Content-Length\", header_value := \"261\" } }, body := \"{ \\\"username\\\": \\\"10014002007@ericsson.se\\\", \\\"password\\\": \\\"10014002007\\\", \\\"mediaType\\\": \\\"rtp\\\", \\\"services\\\": [ \\\"im_chat\\\", \\\"file_transfer\\\", \\\"video_share\\\", \\\"ip_voice_call\\\", \\\"ip_video_call\\\", \\\"im_standalone\\\", \\\"cs\\\", \\\"ab\\\", \\\"+custom-valid-feature\\\", \\\"custom-invalid-feature\\\"] } \" }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.029417", component: "854", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "189", function_name: "function:receiveAnyHTTPClientResponse", message: " Start timer timerWaitForHTTPResponse: 60 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.038994", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "286", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.039075", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "202", function_name: "function:sendInternalMessage", message: " Sent on sipInternalPort[0] to 849 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.039221", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "78", function_name: "function:sipRun", message: " Message enqueued on sipInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.039274", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.039339", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Receive operation on port sipInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.039371", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Message with id 6 was extracted from the queue of sipInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.039391", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "80", function_name: "function:sipRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.039535", component: "849", peer_component: "BaseSipClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "320", function_name: "function:generalReceiveSip", message: " Start timer timerWaitForSipMessage: 15 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.096594", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on sipClientPort from system @IPL4asp_Types.ASP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msg := '5245474953544552207369703A6572696373736F6E2E7365205349502F322E300D0A4D61782D466F7277617264733A2036390D0A417574686F72697A6174696F6E3A20446967657374207265616C6D3D226572696373736F6E2E7365222C757365726E616D653D223130303134303032303037406572696373736F6E2E7365222C7572693D227369703A6572696373736F6E2E7365222C6E6F6E63653D22222C726573706F6E73653D22220D0A526571756972653A20707265660D0A436F6E74656E742D4C656E6774683A20300D0A546F3A203C7369703A3130303134303032303037406572696373736F6E2E73653E0D0A457870697265733A203630303030300D0A436F6E746163743A203C7369703A3130303134303032303037403134322E3133332E3134322E333A353036303B637369643D32383338616235612D653139342D343932332D383161662D6339663061353434663636373B7472616E73706F72743D5443503E3B2B672E67736D612E7263732E697063616C6C3B2B672E336770702E696373692D7265663D2275726E25334175726E2D37253341336770702D736572766963652E696D732E696373692E6F6D612E63706D2E6D73672C75726E25334175726E2D37253341336770702D736572766963652E696D732E696373692E6D6D74656C223B2B672E6F6D612E7369702D696D3B2B672E67736D612E7263732E74656C6570686F6E793D226373223B2B672E336770702E63732D766F6963653B2B672E336770702E696172692D7265663D2275726E25334175726E2D37253341336770702D6170706C69636174696F6E2E696D732E696172692E67736D612D7673223B766964656F3B7369702E6963653D747275653B713D302E350D0A437365713A20312052454749535445520D0A5669613A205349502F322E302F544350203134322E3133332E3134322E333A353036303B6272616E63683D7A39684734624B6631663964643538666237363761343834623734386366343337623330396334656137370D0A557365722D4167656E743A204832530D0A526F7574653A203C7369703A3134322E3133332E3135302E3136393A32363732303B6C723B7472616E73706F72743D5443503E0D0A43616C6C2D49643A203134322E3133332E3134322E335F355F383430373831343835393030383832363032370D0A46726F6D3A203C7369703A3130303134303032303037406572696373736F6E2E73653E3B7461673D69316F34393479382D360D0A0D0A'O (\"REGISTER sip:ericsson.se SIP/2.0\\r\\nMax-Forwards: 69\\r\\nAuthorization: Digest realm=\\\"ericsson.se\\\",username=\\\"10014002007@ericsson.se\\\",uri=\\\"sip:ericsson.se\\\",nonce=\\\"\\\",response=\\\"\\\"\\r\\nRequire: pref\\r\\nContent-Length: 0\\r\\nTo: <sip:10014002007@ericsson.se>\\r\\nExpires: 600000\\r\\nContact: <sip:10014002007@142.133.142.3:5060;csid=2838ab5a-e194-4923-81af-c9f0a544f667;transport=TCP>;+g.gsma.rcs.ipcall;+g.3gpp.icsi-ref=\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\";+g.oma.sip-im;+g.gsma.rcs.telephony=\\\"cs\\\";+g.3gpp.cs-voice;+g.3gpp.iari-ref=\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\";video;sip.ice=true;q=0.5\\r\\nCseq: 1 REGISTER\\r\\nVia: SIP/2.0/TCP 142.133.142.3:5060;branch=z9hG4bKf1f9dd58fb767a484b748cf437b309c4ea77\\r\\nUser-Agent: H2S\\r\\nRoute: <sip:142.133.150.169:26720;lr;transport=TCP>\\r\\nCall-Id: 142.133.142.3_5_8407814859008826027\\r\\nFrom: <sip:10014002007@ericsson.se>;tag=i1o494y8-6\\r\\n\\r\\n\")} id 4" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.097417", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Incoming message was mapped to @IPL4_demo_types.SIP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msg := { request := { requestLine := { method := REGISTER_E (11), requestUri := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := { fieldName := AUTHORIZATION_E (11), body := { digestResponse := { { id := \"realm\", paramValue := \"\\\"ericsson.se\\\"\" }, { id := \"username\", paramValue := \"\\\"10014002007@ericsson.se\\\"\" }, { id := \"uri\", paramValue := \"\\\"sip:ericsson.se\\\"\" }, { id := \"nonce\", paramValue := \"\\\"\\\"\" }, { id := \"response\", paramValue := \"\\\"\\\"\" } } } }, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_5_8407814859008826027\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.telephony\", paramValue := \"\\\"cs\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit }, { id := \"sip.ice\", paramValue := \"true\" }, { id := \"q\", paramValue := \"0.5\" } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := { fieldName := EXPIRES_E (24), deltaSec := \"600000\" }, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494y8-6\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := { fieldName := REQUIRE_E (80), optionsTags := { \"pref\" } }, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := { fieldName := ROUTE_E (84), routeBody := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"lr\", paramValue := omit }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } }, rrParam := omit } } }, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f9dd58fb767a484b748cf437b309c4ea77\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } }} id 4" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.097770", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port sipClientPort succeeded, message from system(): @IPL4_demo_types.SIP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msg := { request := { requestLine := { method := REGISTER_E (11), requestUri := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := { fieldName := AUTHORIZATION_E (11), body := { digestResponse := { { id := \"realm\", paramValue := \"\\\"ericsson.se\\\"\" }, { id := \"username\", paramValue := \"\\\"10014002007@ericsson.se\\\"\" }, { id := \"uri\", paramValue := \"\\\"sip:ericsson.se\\\"\" }, { id := \"nonce\", paramValue := \"\\\"\\\"\" }, { id := \"response\", paramValue := \"\\\"\\\"\" } } } }, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_5_8407814859008826027\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.telephony\", paramValue := \"\\\"cs\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit }, { id := \"sip.ice\", paramValue := \"true\" }, { id := \"q\", paramValue := \"0.5\" } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := { fieldName := EXPIRES_E (24), deltaSec := \"600000\" }, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494y8-6\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := { fieldName := REQUIRE_E (80), optionsTags := { \"pref\" } }, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := { fieldName := ROUTE_E (84), routeBody := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"lr\", paramValue := omit }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } }, rrParam := omit } } }, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f9dd58fb767a484b748cf437b309c4ea77\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } }} id 4" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.097898", component: "849", peer_component: "BaseSipClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "345", function_name: "function:generalReceiveSip", message: " Message with id 4 was extracted from the queue of sipClientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.097973", component: "849", peer_component: "BaseSipClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "346", function_name: "function:generalReceiveSip", message: " Stop timer timerWaitForSipMessage: 15 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.099071", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on sipInternalPort to mtc @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspRequest := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, request := { requestLine := { method := REGISTER_E (11), requestUri := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := { fieldName := AUTHORIZATION_E (11), body := { digestResponse := { { id := \"realm\", paramValue := \"\\\"ericsson.se\\\"\" }, { id := \"username\", paramValue := \"\\\"10014002007@ericsson.se\\\"\" }, { id := \"uri\", paramValue := \"\\\"sip:ericsson.se\\\"\" }, { id := \"nonce\", paramValue := \"\\\"\\\"\" }, { id := \"response\", paramValue := \"\\\"\\\"\" } } } }, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_5_8407814859008826027\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.telephony\", paramValue := \"\\\"cs\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit }, { id := \"sip.ice\", paramValue := \"true\" }, { id := \"q\", paramValue := \"0.5\" } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := { fieldName := EXPIRES_E (24), deltaSec := \"600000\" }, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494y8-6\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := { fieldName := REQUIRE_E (80), optionsTags := { \"pref\" } }, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := { fieldName := ROUTE_E (84), routeBody := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"lr\", paramValue := omit }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } }, rrParam := omit } } }, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f9dd58fb767a484b748cf437b309c4ea77\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.099368", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "74", function_name: "function:sipRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.099602", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on sipInternalPort[0] from 849 @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspRequest := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, request := { requestLine := { method := REGISTER_E (11), requestUri := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := { fieldName := AUTHORIZATION_E (11), body := { digestResponse := { { id := \"realm\", paramValue := \"\\\"ericsson.se\\\"\" }, { id := \"username\", paramValue := \"\\\"10014002007@ericsson.se\\\"\" }, { id := \"uri\", paramValue := \"\\\"sip:ericsson.se\\\"\" }, { id := \"nonce\", paramValue := \"\\\"\\\"\" }, { id := \"response\", paramValue := \"\\\"\\\"\" } } } }, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_5_8407814859008826027\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.telephony\", paramValue := \"\\\"cs\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit }, { id := \"sip.ice\", paramValue := \"true\" }, { id := \"q\", paramValue := \"0.5\" } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := { fieldName := EXPIRES_E (24), deltaSec := \"600000\" }, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494y8-6\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := { fieldName := REQUIRE_E (80), optionsTags := { \"pref\" } }, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := { fieldName := ROUTE_E (84), routeBody := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"lr\", paramValue := omit }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } }, rrParam := omit } } }, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f9dd58fb767a484b748cf437b309c4ea77\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 7" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.099888", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port sipInternalPort[0] succeeded, message from 849: @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspRequest := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, request := { requestLine := { method := REGISTER_E (11), requestUri := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := { fieldName := AUTHORIZATION_E (11), body := { digestResponse := { { id := \"realm\", paramValue := \"\\\"ericsson.se\\\"\" }, { id := \"username\", paramValue := \"\\\"10014002007@ericsson.se\\\"\" }, { id := \"uri\", paramValue := \"\\\"sip:ericsson.se\\\"\" }, { id := \"nonce\", paramValue := \"\\\"\\\"\" }, { id := \"response\", paramValue := \"\\\"\\\"\" } } } }, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_5_8407814859008826027\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.telephony\", paramValue := \"\\\"cs\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit }, { id := \"sip.ice\", paramValue := \"true\" }, { id := \"q\", paramValue := \"0.5\" } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := { fieldName := EXPIRES_E (24), deltaSec := \"600000\" }, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494y8-6\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := { fieldName := REQUIRE_E (80), optionsTags := { \"pref\" } }, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := { fieldName := ROUTE_E (84), routeBody := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"lr\", paramValue := omit }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } }, rrParam := omit } } }, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f9dd58fb767a484b748cf437b309c4ea77\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 7" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.099991", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Message with id 7 was extracted from the queue of sipInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.100014", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "255", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.103663", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.114984", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "286", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.115397", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on sipInternalPort[0] to 849 @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMMAND_SIP_SEND_SIP_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"1\" }, { parameterName := \"SUBSCRIBER\", parameterValue := \"11\" } } }, aspsSip := { { aspResponse := { addr := { remote_host := \"142.133.142.3\", remote_port := 5060, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 401, reasonPhrase := \"Unauthorized\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_5_8407814859008826027\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494y8-6\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"95895930974090965564099965574965732662\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f9dd58fb767a484b748cf437b309c4ea77\" } } } } }, warning := omit, wwwAuthenticate := { fieldName := WWW_AUTHENTICATE_E (104), challenge := { { digestCln := { { id := \"nonce\", paramValue := \"\\\"86738058454623966345207209727360\\\"\" }, { id := \"realm\", paramValue := \"\\\"ericsson.se\\\"\" }, { id := \"stale\", paramValue := \"false\" }, { id := \"algorithm\", paramValue := \"MD5\" }, { id := \"qop\", paramValue := \"\\\"auth\\\"\" } } } } }, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.115667", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.115864", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on sipInternalPort from mtc @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMMAND_SIP_SEND_SIP_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"1\" }, { parameterName := \"SUBSCRIBER\", parameterValue := \"11\" } } }, aspsSip := { { aspResponse := { addr := { remote_host := \"142.133.142.3\", remote_port := 5060, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 401, reasonPhrase := \"Unauthorized\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_5_8407814859008826027\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494y8-6\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"95895930974090965564099965574965732662\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f9dd58fb767a484b748cf437b309c4ea77\" } } } } }, warning := omit, wwwAuthenticate := { fieldName := WWW_AUTHENTICATE_E (104), challenge := { { digestCln := { { id := \"nonce\", paramValue := \"\\\"86738058454623966345207209727360\\\"\" }, { id := \"realm\", paramValue := \"\\\"ericsson.se\\\"\" }, { id := \"stale\", paramValue := \"false\" }, { id := \"algorithm\", paramValue := \"MD5\" }, { id := \"qop\", paramValue := \"\\\"auth\\\"\" } } } } }, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 7" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.116097", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port sipInternalPort succeeded, message from mtc: @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMMAND_SIP_SEND_SIP_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"1\" }, { parameterName := \"SUBSCRIBER\", parameterValue := \"11\" } } }, aspsSip := { { aspResponse := { addr := { remote_host := \"142.133.142.3\", remote_port := 5060, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 401, reasonPhrase := \"Unauthorized\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_5_8407814859008826027\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494y8-6\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"95895930974090965564099965574965732662\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f9dd58fb767a484b748cf437b309c4ea77\" } } } } }, warning := omit, wwwAuthenticate := { fieldName := WWW_AUTHENTICATE_E (104), challenge := { { digestCln := { { id := \"nonce\", paramValue := \"\\\"86738058454623966345207209727360\\\"\" }, { id := \"realm\", paramValue := \"\\\"ericsson.se\\\"\" }, { id := \"stale\", paramValue := \"false\" }, { id := \"algorithm\", paramValue := \"MD5\" }, { id := \"qop\", paramValue := \"\\\"auth\\\"\" } } } } }, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 7" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.116204", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Message with id 7 was extracted from the queue of sipInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.116229", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "80", function_name: "function:sipRun", message: " Stop timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.116788", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on sipClientPort to system @IPL4_demo_types.SIP_SendTo : { connId := 3, remName := \"142.133.142.3\", remPort := 5060, proto := { tcp := { } }, msg := { raw := \"SIP/2.0 401 Unauthorized\\r\\nCall-ID:142.133.142.3_5_8407814859008826027\\r\\nContent-Length:0\\r\\nCSeq:1 REGISTER\\r\\nFrom:<sip:10014002007@ericsson.se>;tag=i1o494y8-6\\r\\nTo:<sip:10014002007@ericsson.se>;tag=95895930974090965564099965574965732662\\r\\nVia:SIP/2.0/TCP 142.133.142.3:5060;branch=z9hG4bKf1f9dd58fb767a484b748cf437b309c4ea77\\r\\nWWW-Authenticate:Digest nonce=\\\"86738058454623966345207209727360\\\", realm=\\\"ericsson.se\\\", stale=false, algorithm=MD5, qop=\\\"auth\\\"\\r\\n\\r\\n\" }}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.116916", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Outgoing message was mapped to @IPL4asp_Types.ASP_SendTo : { connId := 3, remName := \"142.133.142.3\", remPort := 5060, proto := { tcp := { } }, msgnauthorized\\r\\nCall-ID:142.133.142.3_5_8407814859008826027\\r\\nContent-Length:0\\r\\nCSeq:1 REGISTER\\r\\nFrom:<sip:10014002007@ericsson.se>;tag=i1o494y8-6\\r\\nTo:<sip:10014002007@ericsson.se>;tag=95895930974090965564099965574965732662\\r\\nVia:SIP/2.0/TCP 142.133.142.3:5060;branch=z9hG4bKf1f9dd58fb767a484b748cf437b309c4ea77\\r\\nWWW-Authenticate:Digest nonce=\\\"86738058454623966345207209727360\\\", realm=\\\"ericsson.se\\\", stale=false, algorithm=MD5, qop=\\\"auth\\\"\\r\\n\\r\\n\")}" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.117136", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "388", function_name: "function:processCommand", message: " Sent on sipInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.117222", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "74", function_name: "function:sipRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.117261", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "253", function_name: "function:receiveInternalMessage", message: " Message enqueued on sipInternalPort[0] from 849 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.117313", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Receive operation on port sipInternalPort[0] succeeded, message from 849: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.117338", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Message with id 8 was extracted from the queue of sipInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.117356", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "255", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.117945", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.129497", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "286", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.129577", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "202", function_name: "function:sendInternalMessage", message: " Sent on sipInternalPort[0] to 849 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.129712", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "78", function_name: "function:sipRun", message: " Message enqueued on sipInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.129751", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.129800", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Receive operation on port sipInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.129836", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Message with id 8 was extracted from the queue of sipInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.129859", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "80", function_name: "function:sipRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.130079", component: "849", peer_component: "BaseSipClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "320", function_name: "function:generalReceiveSip", message: " Start timer timerWaitForSipMessage: 15 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.150712", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on sipClientPort from system @IPL4asp_Types.ASP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msgsip:ericsson.se SIP/2.0\\r\\nMax-Forwards: 69\\r\\nAuthorization: Digest realm=\\\"ericsson.se\\\",username=\\\"10014002007@ericsson.se\\\",uri=\\\"sip:ericsson.se\\\",nonce=\\\"86738058454623966345207209727360\\\",nc=00000001,cnonce=\\\"1763f64a4f74d63c1e0984ab8147f39a\\\",qop=auth,response=\\\"f32b093f54cfcb329eb52f1a3b56e892\\\",algorithm=MD5\\r\\nRequire: pref\\r\\nContent-Length: 0\\r\\nTo: <sip:10014002007@ericsson.se>\\r\\nContact: <sip:10014002007@142.133.142.3:5060;csid=2838ab5a-e194-4923-81af-c9f0a544f667;transport=TCP>;+g.gsma.rcs.ipcall;+g.3gpp.icsi-ref=\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\";+g.oma.sip-im;+g.gsma.rcs.telephony=\\\"cs\\\";+g.3gpp.cs-voice;+g.3gpp.iari-ref=\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\";video;sip.ice=true;q=0.5\\r\\nExpires: 600000\\r\\nCseq: 2 REGISTER\\r\\nVia: SIP/2.0/TCP 142.133.142.3:5060;branch=z9hG4bKf1f96c6abec538b847368f21a7750c87fd12\\r\\nUser-Agent: H2S\\r\\nRoute: <sip:142.133.150.169:26720;lr;transport=TCP>\\r\\nFrom: <sip:10014002007@ericsson.se>;tag=i1o494y8-6\\r\\nCall-Id: 142.133.142.3_5_8407814859008826027\\r\\n\\r\\n\")} id 5" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.151412", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Incoming message was mapped to @IPL4_demo_types.SIP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msg := { request := { requestLine := { method := REGISTER_E (11), requestUri := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := { fieldName := AUTHORIZATION_E (11), body := { digestResponse := { { id := \"realm\", paramValue := \"\\\"ericsson.se\\\"\" }, { id := \"username\", paramValue := \"\\\"10014002007@ericsson.se\\\"\" }, { id := \"uri\", paramValue := \"\\\"sip:ericsson.se\\\"\" }, { id := \"nonce\", paramValue := \"\\\"86738058454623966345207209727360\\\"\" }, { id := \"nc\", paramValue := \"00000001\" }, { id := \"cnonce\", paramValue := \"\\\"1763f64a4f74d63c1e0984ab8147f39a\\\"\" }, { id := \"qop\", paramValue := \"auth\" }, { id := \"response\", paramValue := \"\\\"f32b093f54cfcb329eb52f1a3b56e892\\\"\" }, { id := \"algorithm\", paramValue := \"MD5\" } } } }, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_5_8407814859008826027\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.telephony\", paramValue := \"\\\"cs\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit }, { id := \"sip.ice\", paramValue := \"true\" }, { id := \"q\", paramValue := \"0.5\" } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 2, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := { fieldName := EXPIRES_E (24), deltaSec := \"600000\" }, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494y8-6\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := { fieldName := REQUIRE_E (80), optionsTags := { \"pref\" } }, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := { fieldName := ROUTE_E (84), routeBody := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"lr\", paramValue := omit }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } }, rrParam := omit } } }, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f96c6abec538b847368f21a7750c87fd12\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } }} id 5" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.151830", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port sipClientPort succeeded, message from system(): @IPL4_demo_types.SIP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msg := { request := { requestLine := { method := REGISTER_E (11), requestUri := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := { fieldName := AUTHORIZATION_E (11), body := { digestResponse := { { id := \"realm\", paramValue := \"\\\"ericsson.se\\\"\" }, { id := \"username\", paramValue := \"\\\"10014002007@ericsson.se\\\"\" }, { id := \"uri\", paramValue := \"\\\"sip:ericsson.se\\\"\" }, { id := \"nonce\", paramValue := \"\\\"86738058454623966345207209727360\\\"\" }, { id := \"nc\", paramValue := \"00000001\" }, { id := \"cnonce\", paramValue := \"\\\"1763f64a4f74d63c1e0984ab8147f39a\\\"\" }, { id := \"qop\", paramValue := \"auth\" }, { id := \"response\", paramValue := \"\\\"f32b093f54cfcb329eb52f1a3b56e892\\\"\" }, { id := \"algorithm\", paramValue := \"MD5\" } } } }, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_5_8407814859008826027\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.telephony\", paramValue := \"\\\"cs\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit }, { id := \"sip.ice\", paramValue := \"true\" }, { id := \"q\", paramValue := \"0.5\" } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 2, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := { fieldName := EXPIRES_E (24), deltaSec := \"600000\" }, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494y8-6\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := { fieldName := REQUIRE_E (80), optionsTags := { \"pref\" } }, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := { fieldName := ROUTE_E (84), routeBody := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"lr\", paramValue := omit }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } }, rrParam := omit } } }, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f96c6abec538b847368f21a7750c87fd12\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } }} id 5" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.151967", component: "849", peer_component: "BaseSipClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "345", function_name: "function:generalReceiveSip", message: " Message with id 5 was extracted from the queue of sipClientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.152000", component: "849", peer_component: "BaseSipClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "346", function_name: "function:generalReceiveSip", message: " Stop timer timerWaitForSipMessage: 15 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.153138", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on sipInternalPort to mtc @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspRequest := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, request := { requestLine := { method := REGISTER_E (11), requestUri := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := { fieldName := AUTHORIZATION_E (11), body := { digestResponse := { { id := \"realm\", paramValue := \"\\\"ericsson.se\\\"\" }, { id := \"username\", paramValue := \"\\\"10014002007@ericsson.se\\\"\" }, { id := \"uri\", paramValue := \"\\\"sip:ericsson.se\\\"\" }, { id := \"nonce\", paramValue := \"\\\"86738058454623966345207209727360\\\"\" }, { id := \"nc\", paramValue := \"00000001\" }, { id := \"cnonce\", paramValue := \"\\\"1763f64a4f74d63c1e0984ab8147f39a\\\"\" }, { id := \"qop\", paramValue := \"auth\" }, { id := \"response\", paramValue := \"\\\"f32b093f54cfcb329eb52f1a3b56e892\\\"\" }, { id := \"algorithm\", paramValue := \"MD5\" } } } }, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_5_8407814859008826027\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.telephony\", paramValue := \"\\\"cs\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit }, { id := \"sip.ice\", paramValue := \"true\" }, { id := \"q\", paramValue := \"0.5\" } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 2, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := { fieldName := EXPIRES_E (24), deltaSec := \"600000\" }, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494y8-6\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := { fieldName := REQUIRE_E (80), optionsTags := { \"pref\" } }, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := { fieldName := ROUTE_E (84), routeBody := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"lr\", paramValue := omit }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } }, rrParam := omit } } }, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f96c6abec538b847368f21a7750c87fd12\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.153475", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "74", function_name: "function:sipRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.153668", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on sipInternalPort[0] from 849 @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspRequest := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, request := { requestLine := { method := REGISTER_E (11), requestUri := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := { fieldName := AUTHORIZATION_E (11), body := { digestResponse := { { id := \"realm\", paramValue := \"\\\"ericsson.se\\\"\" }, { id := \"username\", paramValue := \"\\\"10014002007@ericsson.se\\\"\" }, { id := \"uri\", paramValue := \"\\\"sip:ericsson.se\\\"\" }, { id := \"nonce\", paramValue := \"\\\"86738058454623966345207209727360\\\"\" }, { id := \"nc\", paramValue := \"00000001\" }, { id := \"cnonce\", paramValue := \"\\\"1763f64a4f74d63c1e0984ab8147f39a\\\"\" }, { id := \"qop\", paramValue := \"auth\" }, { id := \"response\", paramValue := \"\\\"f32b093f54cfcb329eb52f1a3b56e892\\\"\" }, { id := \"algorithm\", paramValue := \"MD5\" } } } }, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_5_8407814859008826027\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.telephony\", paramValue := \"\\\"cs\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit }, { id := \"sip.ice\", paramValue := \"true\" }, { id := \"q\", paramValue := \"0.5\" } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 2, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := { fieldName := EXPIRES_E (24), deltaSec := \"600000\" }, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494y8-6\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := { fieldName := REQUIRE_E (80), optionsTags := { \"pref\" } }, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := { fieldName := ROUTE_E (84), routeBody := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"lr\", paramValue := omit }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } }, rrParam := omit } } }, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f96c6abec538b847368f21a7750c87fd12\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 9" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.153919", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port sipInternalPort[0] succeeded, message from 849: @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspRequest := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, request := { requestLine := { method := REGISTER_E (11), requestUri := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := { fieldName := AUTHORIZATION_E (11), body := { digestResponse := { { id := \"realm\", paramValue := \"\\\"ericsson.se\\\"\" }, { id := \"username\", paramValue := \"\\\"10014002007@ericsson.se\\\"\" }, { id := \"uri\", paramValue := \"\\\"sip:ericsson.se\\\"\" }, { id := \"nonce\", paramValue := \"\\\"86738058454623966345207209727360\\\"\" }, { id := \"nc\", paramValue := \"00000001\" }, { id := \"cnonce\", paramValue := \"\\\"1763f64a4f74d63c1e0984ab8147f39a\\\"\" }, { id := \"qop\", paramValue := \"auth\" }, { id := \"response\", paramValue := \"\\\"f32b093f54cfcb329eb52f1a3b56e892\\\"\" }, { id := \"algorithm\", paramValue := \"MD5\" } } } }, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_5_8407814859008826027\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.telephony\", paramValue := \"\\\"cs\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit }, { id := \"sip.ice\", paramValue := \"true\" }, { id := \"q\", paramValue := \"0.5\" } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 2, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := { fieldName := EXPIRES_E (24), deltaSec := \"600000\" }, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494y8-6\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := { fieldName := REQUIRE_E (80), optionsTags := { \"pref\" } }, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := { fieldName := ROUTE_E (84), routeBody := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"lr\", paramValue := omit }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } }, rrParam := omit } } }, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f96c6abec538b847368f21a7750c87fd12\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 9" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.154005", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Message with id 9 was extracted from the queue of sipInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.154026", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "255", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.158027", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.170986", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "286", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.171430", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on sipInternalPort[0] to 849 @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMMAND_SIP_SEND_SIP_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"1\" }, { parameterName := \"SUBSCRIBER\", parameterValue := \"11\" } } }, aspsSip := { { aspResponse := { addr := { remote_host := \"142.133.142.3\", remote_port := 5060, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 200, reasonPhrase := \"OK\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := { fieldName := AUTHENTICATION_INFO_E (10), ainfo := { { id := \"qop\", paramValue := \"\\\"auth\\\"\" }, { id := \"rspauth\", paramValue := \"\\\"4e0afd3006175776f901e66eaea9c15a\\\"\" }, { id := \"cnonce\", paramValue := \"\\\"86738058454623966345207209727360\\\"\" }, { id := \"nc\", paramValue := \"\\\"1\\\"\" } } }, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_5_8407814859008826027\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.telephony\", paramValue := \"\\\"cs\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit }, { id := \"sip.ice\", paramValue := \"true\" }, { id := \"q\", paramValue := \"0.5\" }, { id := \"expires\", paramValue := \"600000\" } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 2, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494y8-6\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := { fieldName := P_ASSOCIATED_URI (44), p_assoc_uris := { { p_asso_uri := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } }, ai_params := omit }, { p_asso_uri := { displayName := omit, addrSpec := { scheme := \"tel\", userInfo := { userOrTelephoneSubscriber := \"+10014002007\", password := omit }, hostPort := { host := omit, portField := omit }, urlParameters := omit, headers := omit } }, ai_params := omit } } }, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"79500579005513328619011707540441825501\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f96c6abec538b847368f21a7750c87fd12\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.171720", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.171975", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on sipInternalPort from mtc @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMMAND_SIP_SEND_SIP_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"1\" }, { parameterName := \"SUBSCRIBER\", parameterValue := \"11\" } } }, aspsSip := { { aspResponse := { addr := { remote_host := \"142.133.142.3\", remote_port := 5060, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 200, reasonPhrase := \"OK\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := { fieldName := AUTHENTICATION_INFO_E (10), ainfo := { { id := \"qop\", paramValue := \"\\\"auth\\\"\" }, { id := \"rspauth\", paramValue := \"\\\"4e0afd3006175776f901e66eaea9c15a\\\"\" }, { id := \"cnonce\", paramValue := \"\\\"86738058454623966345207209727360\\\"\" }, { id := \"nc\", paramValue := \"\\\"1\\\"\" } } }, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_5_8407814859008826027\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.telephony\", paramValue := \"\\\"cs\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit }, { id := \"sip.ice\", paramValue := \"true\" }, { id := \"q\", paramValue := \"0.5\" }, { id := \"expires\", paramValue := \"600000\" } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 2, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494y8-6\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := { fieldName := P_ASSOCIATED_URI (44), p_assoc_uris := { { p_asso_uri := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } }, ai_params := omit }, { p_asso_uri := { displayName := omit, addrSpec := { scheme := \"tel\", userInfo := { userOrTelephoneSubscriber := \"+10014002007\", password := omit }, hostPort := { host := omit, portField := omit }, urlParameters := omit, headers := omit } }, ai_params := omit } } }, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"79500579005513328619011707540441825501\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f96c6abec538b847368f21a7750c87fd12\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 9" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.172293", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port sipInternalPort succeeded, message from mtc: @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMMAND_SIP_SEND_SIP_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"1\" }, { parameterName := \"SUBSCRIBER\", parameterValue := \"11\" } } }, aspsSip := { { aspResponse := { addr := { remote_host := \"142.133.142.3\", remote_port := 5060, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 200, reasonPhrase := \"OK\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := { fieldName := AUTHENTICATION_INFO_E (10), ainfo := { { id := \"qop\", paramValue := \"\\\"auth\\\"\" }, { id := \"rspauth\", paramValue := \"\\\"4e0afd3006175776f901e66eaea9c15a\\\"\" }, { id := \"cnonce\", paramValue := \"\\\"86738058454623966345207209727360\\\"\" }, { id := \"nc\", paramValue := \"\\\"1\\\"\" } } }, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_5_8407814859008826027\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.telephony\", paramValue := \"\\\"cs\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit }, { id := \"sip.ice\", paramValue := \"true\" }, { id := \"q\", paramValue := \"0.5\" }, { id := \"expires\", paramValue := \"600000\" } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 2, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494y8-6\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := { fieldName := P_ASSOCIATED_URI (44), p_assoc_uris := { { p_asso_uri := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } }, ai_params := omit }, { p_asso_uri := { displayName := omit, addrSpec := { scheme := \"tel\", userInfo := { userOrTelephoneSubscriber := \"+10014002007\", password := omit }, hostPort := { host := omit, portField := omit }, urlParameters := omit, headers := omit } }, ai_params := omit } } }, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"79500579005513328619011707540441825501\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f96c6abec538b847368f21a7750c87fd12\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 9" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.172448", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Message with id 9 was extracted from the queue of sipInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.172494", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "80", function_name: "function:sipRun", message: " Stop timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.173173", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on sipClientPort to system @IPL4_demo_types.SIP_SendTo : { connId := 3, remName := \"142.133.142.3\", remPort := 5060, proto := { tcp := { } }, msg := { raw := \"SIP/2.0 200 OK\\r\\nAuthentication-Info:qop=\\\"auth\\\", rspauth=\\\"4e0afd3006175776f901e66eaea9c15a\\\", cnonce=\\\"86738058454623966345207209727360\\\", nc=\\\"1\\\"\\r\\nCall-ID:142.133.142.3_5_8407814859008826027\\r\\nContact:<sip:10014002007@142.133.142.3:5060;csid=2838ab5a-e194-4923-81af-c9f0a544f667;transport=TCP>;+g.gsma.rcs.ipcall;+g.3gpp.icsi-ref=\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\";+g.oma.sip-im;+g.gsma.rcs.telephony=\\\"cs\\\";+g.3gpp.cs-voice;+g.3gpp.iari-ref=\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\";video;sip.ice=true;q=0.5;expires=600000\\r\\nContent-Length:0\\r\\nCSeq:2 REGISTER\\r\\nFrom:<sip:10014002007@ericsson.se>;tag=i1o494y8-6\\r\\nP-Associated-URI:<sip:10014002007@ericsson.se>\\r\\nP-Associated-URI:<tel:+10014002007>\\r\\nTo:<sip:10014002007@ericsson.se>;tag=79500579005513328619011707540441825501\\r\\nVia:SIP/2.0/TCP 142.133.142.3:5060;branch=z9hG4bKf1f96c6abec538b847368f21a7750c87fd12\\r\\n\\r\\n\" }}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.173449", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Outgoing message was mapped to @IPL4asp_Types.ASP_SendTo : { connId := 3, remName := \"142.133.142.3\", remPort := 5060, proto := { tcp := { } }, msgr\\nAuthentication-Info:qop=\\\"auth\\\", rspauth=\\\"4e0afd3006175776f901e66eaea9c15a\\\", cnonce=\\\"86738058454623966345207209727360\\\", nc=\\\"1\\\"\\r\\nCall-ID:142.133.142.3_5_8407814859008826027\\r\\nContact:<sip:10014002007@142.133.142.3:5060;csid=2838ab5a-e194-4923-81af-c9f0a544f667;transport=TCP>;+g.gsma.rcs.ipcall;+g.3gpp.icsi-ref=\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\";+g.oma.sip-im;+g.gsma.rcs.telephony=\\\"cs\\\";+g.3gpp.cs-voice;+g.3gpp.iari-ref=\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\";video;sip.ice=true;q=0.5;expires=600000\\r\\nContent-Length:0\\r\\nCSeq:2 REGISTER\\r\\nFrom:<sip:10014002007@ericsson.se>;tag=i1o494y8-6\\r\\nP-Associated-URI:<sip:10014002007@ericsson.se>\\r\\nP-Associated-URI:<tel:+10014002007>\\r\\nTo:<sip:10014002007@ericsson.se>;tag=79500579005513328619011707540441825501\\r\\nVia:SIP/2.0/TCP 142.133.142.3:5060;branch=z9hG4bKf1f96c6abec538b847368f21a7750c87fd12\\r\\n\\r\\n\")}" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.173755", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "388", function_name: "function:processCommand", message: " Sent on sipInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.173856", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "74", function_name: "function:sipRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.173897", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "253", function_name: "function:receiveInternalMessage", message: " Message enqueued on sipInternalPort[0] from 849 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.173961", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Receive operation on port sipInternalPort[0] succeeded, message from 849: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.173987", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Message with id 10 was extracted from the queue of sipInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.174006", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "255", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.174311", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.235520", component: "854", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on clientPort from system @HTTPmsg_Types.HTTPMessage : { response := { client_id := 9, version_major := 1, version_minor := 1, statuscode := 201, statustext := \"Created\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Location\", header_value := \"http://142.133.142.3:8080/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:28 GMT\" } }, body := \"{\\n \\\"resourceURL\\\": \\\"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667\\\",\\n \\\"serviceCapability\\\": [ {\\n \\\"capabilityId\\\": \\\"ip_voice_call\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"ip_video_call\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"im_chat\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"video_share\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"+custom-valid-feature\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"im_standalone\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"ab\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"file_transfer\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"cs\\\"\\n } ]\\n}\" }} id 2" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.235716", component: "854", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port clientPort succeeded, message from system(): @HTTPmsg_Types.HTTPMessage : { response := { client_id := 9, version_major := 1, version_minor := 1, statuscode := 201, statustext := \"Created\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Location\", header_value := \"http://142.133.142.3:8080/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:28 GMT\" } }, body := \"{\\n \\\"resourceURL\\\": \\\"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667\\\",\\n \\\"serviceCapability\\\": [ {\\n \\\"capabilityId\\\": \\\"ip_voice_call\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"ip_video_call\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"im_chat\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"video_share\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"+custom-valid-feature\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"im_standalone\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"ab\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"file_transfer\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"cs\\\"\\n } ]\\n}\" }} id 2" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.235768", component: "854", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "193", function_name: "function:receiveAnyHTTPClientResponse", message: " Message with id 2 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.235803", component: "854", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "194", function_name: "function:receiveAnyHTTPClientResponse", message: " Stop timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.235966", component: "854", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort to mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\n \\\"resourceURL\\\": \\\"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667\\\",\\n \\\"serviceCapability\\\": [ {\\n \\\"capabilityId\\\": \\\"ip_voice_call\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"ip_video_call\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"im_chat\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"video_share\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"+custom-valid-feature\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"im_standalone\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"ab\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"file_transfer\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"cs\\\"\\n } ]\\n}\", contentType := \"\", statusCode := \"201\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Location\", header_value := \"http://142.133.142.3:8080/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:28 GMT\" } } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.236067", component: "854", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "62", function_name: "function:httpNodeRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.236280", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort[3] from 854 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\n \\\"resourceURL\\\": \\\"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667\\\",\\n \\\"serviceCapability\\\": [ {\\n \\\"capabilityId\\\": \\\"ip_voice_call\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"ip_video_call\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"im_chat\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"video_share\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"+custom-valid-feature\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"im_standalone\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"ab\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"file_transfer\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"cs\\\"\\n } ]\\n}\", contentType := \"\", statusCode := \"201\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Location\", header_value := \"http://142.133.142.3:8080/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:28 GMT\" } } } } }} id 2" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.236480", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort[3] succeeded, message from 854: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\n \\\"resourceURL\\\": \\\"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667\\\",\\n \\\"serviceCapability\\\": [ {\\n \\\"capabilityId\\\": \\\"ip_voice_call\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"ip_video_call\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"im_chat\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"video_share\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"+custom-valid-feature\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"im_standalone\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"ab\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"file_transfer\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"cs\\\"\\n } ]\\n}\", contentType := \"\", statusCode := \"201\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Location\", header_value := \"http://142.133.142.3:8080/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:28 GMT\" } } } } }} id 2" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.236521", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Message with id 2 was extracted from the queue of httpNodeInternalPort[3]" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.236541", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "241", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.237771", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.249513", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "267", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.249645", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort[2] to 853 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"2\" } } }, aspHttp := { { httpMessage := { method := \"POST\", url := \"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/message/send\", body := \"{ \\\"to\\\": \\\"sip:10014002007@ericsson.se\\\", \\\"body\\\": \\\"Body message 10014002006 to 10014002007\\\", \\\"contentType\\\": \\\"text/plain\\\"} \", contentType := \"application/json\", statusCode := \"\", header := { } } } }}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.249822", component: "853", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort from mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"2\" } } }, aspHttp := { { httpMessage := { method := \"POST\", url := \"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/message/send\", body := \"{ \\\"to\\\": \\\"sip:10014002007@ericsson.se\\\", \\\"body\\\": \\\"Body message 10014002006 to 10014002007\\\", \\\"contentType\\\": \\\"text/plain\\\"} \", contentType := \"application/json\", statusCode := \"\", header := { } } } }} id 2" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.249833", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.249918", component: "853", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort succeeded, message from mtc: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"2\" } } }, aspHttp := { { httpMessage := { method := \"POST\", url := \"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/message/send\", body := \"{ \\\"to\\\": \\\"sip:10014002007@ericsson.se\\\", \\\"body\\\": \\\"Body message 10014002006 to 10014002007\\\", \\\"contentType\\\": \\\"text/plain\\\"} \", contentType := \"application/json\", statusCode := \"\", header := { } } } }} id 2" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.249981", component: "853", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "67", function_name: "function:httpNodeRun", message: " Message with id 2 was extracted from the queue of httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.250000", component: "853", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "68", function_name: "function:httpNodeRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.250148", component: "853", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "307", function_name: "function:clearHTTPClientPort", message: " Start timer timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.250165", component: "853", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "313", function_name: "function:clearHTTPClientPort", message: " Timeout timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.250243", component: "853", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Sent on clientPort to system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.250946", component: "853", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Message enqueued on clientPort from system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.250990", component: "853", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "243", function_name: "function:sendHTTPClientRequest", message: " Start timer timerWaitForHTTPOpenConnection: 2 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.251038", component: "853", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Receive operation on port clientPort succeeded, message from system(" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.251056", component: "853", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Message with id 3 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.251070", component: "853", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "246", function_name: "function:sendHTTPClientRequest", message: " Stop timer timerWaitForHTTPOpenConnection: 2 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.251118", component: "853", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on clientPort to system @HTTPmsg_Types.HTTPMessage : { request := { client_id := 10, method := \"POST\", uri := \"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/message/send\", version_major := 1, version_minor := 1, header := { { header_name := \"Host\", header_value := \"142.133.142.3\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Content-Length\", header_value := \"119\" } }, body := \"{ \\\"to\\\": \\\"sip:10014002007@ericsson.se\\\", \\\"body\\\": \\\"Body message 10014002006 to 10014002007\\\", \\\"contentType\\\": \\\"text/plain\\\"} \" }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.251229", component: "853", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "189", function_name: "function:receiveAnyHTTPClientResponse", message: " Start timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.288098", component: "853", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on clientPort from system @HTTPmsg_Types.HTTPMessage : { response := { client_id := 10, version_major := 1, version_minor := 1, statuscode := 200, statustext := \"OK\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:28 GMT\" } }, body := \"{\\n \\\"msgId\\\": \\\"XKDf1g9a\\\"\\n}\" }} id 4" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.288177", component: "853", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port clientPort succeeded, message from system(): @HTTPmsg_Types.HTTPMessage : { response := { client_id := 10, version_major := 1, version_minor := 1, statuscode := 200, statustext := \"OK\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:28 GMT\" } }, body := \"{\\n \\\"msgId\\\": \\\"XKDf1g9a\\\"\\n}\" }} id 4" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.288203", component: "853", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "193", function_name: "function:receiveAnyHTTPClientResponse", message: " Message with id 4 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.288219", component: "853", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "194", function_name: "function:receiveAnyHTTPClientResponse", message: " Stop timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.288300", component: "853", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort to mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\n \\\"msgId\\\": \\\"XKDf1g9a\\\"\\n}\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:28 GMT\" } } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.288378", component: "853", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "62", function_name: "function:httpNodeRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.288473", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort[2] from 853 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\n \\\"msgId\\\": \\\"XKDf1g9a\\\"\\n}\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:28 GMT\" } } } } }} id 3" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.288570", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort[2] succeeded, message from 853: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\n \\\"msgId\\\": \\\"XKDf1g9a\\\"\\n}\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:28 GMT\" } } } } }} id 3" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.288601", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Message with id 3 was extracted from the queue of httpNodeInternalPort[2]" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.288633", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "241", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.289833", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.301489", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "286", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.301576", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "202", function_name: "function:sendInternalMessage", message: " Sent on sipInternalPort[0] to 849 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.301721", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "78", function_name: "function:sipRun", message: " Message enqueued on sipInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.301722", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.301826", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Receive operation on port sipInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.301856", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Message with id 10 was extracted from the queue of sipInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.301871", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "80", function_name: "function:sipRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.302020", component: "849", peer_component: "BaseSipClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "320", function_name: "function:generalReceiveSip", message: " Start timer timerWaitForSipMessage: 15 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.350075", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on sipClientPort from system @IPL4asp_Types.ASP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msgsip:10014002007@ericsson.se SIP/2.0\\r\\nMin-Se: 90\\r\\nSubject: Body message 10014002006 to 10014002007\\r\\nContent-Length: 732\\r\\nTo: <sip:10014002007@ericsson.se>\\r\\nContact: <sip:10014002006@142.133.142.3:5060;csid=8cf72980-08e3-4819-943d-f7260f67318d;transport=TCP;fid=wcg-ft3_1>;+g.oma.sip-im;+g.gsma.rcs.ipcall;+g.3gpp.icsi-ref=\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\";+g.3gpp.cs-voice;+g.3gpp.iari-ref=\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\";video\\r\\nSupported: timer\\r\\nCseq: 1 INVITE\\r\\nUser-Agent: H2S\\r\\nSession-Expires: 3600;refresher=uac\\r\\nContribution-Id: CHAT:10014002007@ericsson.se\\r\\nAccept-Contact: *;+g.oma.sip-im\\r\\nMax-Forwards: 69\\r\\nAllow: INVITE\\r\\nAllow: BYE\\r\\nAllow: ACK\\r\\nAllow: CANCEL\\r\\nAllow: UPDATE\\r\\nVia: SIP/2.0/TCP 142.133.142.3:5060;branch=z9hG4bKf1f965ce3efd3a62494f8cec71bc2c0d199a\\r\\nRoute: <sip:142.133.150.169:26720;lr;transport=TCP>\\r\\nContent-Type: multipart/mixed; boundary=\\\"--=Part_jlJ94hBw16CErXnvMxJd2vfs90jDEP\\\"\\r\\nFrom: <sip:10014002006@ericsson.se>;tag=i1o4954c-7\\r\\nCall-Id: 142.133.142.3_6_1805558430567465450\\r\\nP-Preferred-Identity: sip:10014002006@ericsson.se\\r\\n\\r\\n----=Part_jlJ94hBw16CErXnvMxJd2vfs90jDEP\\r\\nContent-Type: message/cpim\\r\\n\\r\\nTo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:29+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: XKDf1g9a\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002006 to 10014002007\\r\\n----=Part_jlJ94hBw16CErXnvMxJd2vfs90jDEP\\r\\nContent-Type: application/sdp\\r\\n\\r\\nv=0\\r\\no=10014002006 3623178869 3623178869 IN IP4 142.133.142.3\\r\\ns=-\\r\\nc=IN IP4 142.133.142.3\\r\\nt=0 0\\r\\nm=message 6060 TCP/MSRP *\\r\\na=accept-types:*\\r\\na=connection:new\\r\\na=sendrecv\\r\\na=setup:active\\r\\na=path:msrp://142.133.142.3:6060/j9EMds9SLZdZ;tcp\\r\\n\\r\\n----=Part_jlJ94hBw16CErXnvMxJd2vfs90jDEP--\\r\\n\")} id 6" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.351229", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Incoming message was mapped to @IPL4_demo_types.SIP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msg := { request := { requestLine := { method := INVITE_E (4), requestUri := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := { fieldName := ACCEPT_CONTACT_E (1), ac_values := { { { id := \"+g.oma.sip-im\", paramValue := omit } } } }, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := { fieldName := ALLOW_E (7), methods := { \"INVITE\", \"BYE\", \"ACK\", \"CANCEL\", \"UPDATE\" } }, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_6_1805558430567465450\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"8cf72980-08e3-4819-943d-f7260f67318d\" }, { id := \"transport\", paramValue := \"TCP\" }, { id := \"fid\", paramValue := \"wcg-ft3_1\" } }, headers := omit } } }, contactParams := { { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 732 }, contentType := { fieldName := CONTENT_TYPE_E (19), mediaType := \"multipart/mixed; boundary=\\\"--=Part_jlJ94hBw16CErXnvMxJd2vfs90jDEP\\\"\" }, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"INVITE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o4954c-7\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := { fieldName := MIN_SE_E (38), deltaSec := \"90\", params := omit }, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := { fieldName := P_PREFERRED_ID_E (55), ids := { { addrSpecUnion := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } } }, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := { fieldName := ROUTE_E (84), routeBody := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"lr\", paramValue := omit }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } }, rrParam := omit } } }, security_client := omit, security_server := omit, security_verify := omit, session_expires := { fieldName := SESSION_EXPIRES_E (88), deltaSec := \"3600\", se_params := { { id := \"refresher\", paramValue := \"uac\" } } }, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := { fieldName := SUBJECT_E (94), summary := \"Body message 10014002006 to 10014002007\" }, subscription_state := omit, supported := { fieldName := SUPPORTED_E (96), optionsTags := { \"timer\" } }, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f965ce3efd3a62494f8cec71bc2c0d199a\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := { { headerName := \"Contribution-Id\", headerValue := \"CHAT:10014002007@ericsson.se\" } }, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := \"----=Part_jlJ94hBw16CErXnvMxJd2vfs90jDEP\\r\\nContent-Type: message/cpim\\r\\n\\r\\nTo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:29+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: XKDf1g9a\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002006 to 10014002007\\r\\n----=Part_jlJ94hBw16CErXnvMxJd2vfs90jDEP\\r\\nContent-Type: application/sdp\\r\\n\\r\\nv=0\\r\\no=10014002006 3623178869 3623178869 IN IP4 142.133.142.3\\r\\ns=-\\r\\nc=IN IP4 142.133.142.3\\r\\nt=0 0\\r\\nm=message 6060 TCP/MSRP *\\r\\na=accept-types:*\\r\\na=connection:new\\r\\na=sendrecv\\r\\na=setup:active\\r\\na=path:msrp://142.133.142.3:6060/j9EMds9SLZdZ;tcp\\r\\n\\r\\n----=Part_jlJ94hBw16CErXnvMxJd2vfs90jDEP--\\r\\n\", payload := omit } }} id 6" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.351795", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port sipClientPort succeeded, message from system(): @IPL4_demo_types.SIP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msg := { request := { requestLine := { method := INVITE_E (4), requestUri := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := { fieldName := ACCEPT_CONTACT_E (1), ac_values := { { { id := \"+g.oma.sip-im\", paramValue := omit } } } }, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := { fieldName := ALLOW_E (7), methods := { \"INVITE\", \"BYE\", \"ACK\", \"CANCEL\", \"UPDATE\" } }, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_6_1805558430567465450\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"8cf72980-08e3-4819-943d-f7260f67318d\" }, { id := \"transport\", paramValue := \"TCP\" }, { id := \"fid\", paramValue := \"wcg-ft3_1\" } }, headers := omit } } }, contactParams := { { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 732 }, contentType := { fieldName := CONTENT_TYPE_E (19), mediaType := \"multipart/mixed; boundary=\\\"--=Part_jlJ94hBw16CErXnvMxJd2vfs90jDEP\\\"\" }, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"INVITE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o4954c-7\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := { fieldName := MIN_SE_E (38), deltaSec := \"90\", params := omit }, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := { fieldName := P_PREFERRED_ID_E (55), ids := { { addrSpecUnion := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } } }, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := { fieldName := ROUTE_E (84), routeBody := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"lr\", paramValue := omit }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } }, rrParam := omit } } }, security_client := omit, security_server := omit, security_verify := omit, session_expires := { fieldName := SESSION_EXPIRES_E (88), deltaSec := \"3600\", se_params := { { id := \"refresher\", paramValue := \"uac\" } } }, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := { fieldName := SUBJECT_E (94), summary := \"Body message 10014002006 to 10014002007\" }, subscription_state := omit, supported := { fieldName := SUPPORTED_E (96), optionsTags := { \"timer\" } }, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f965ce3efd3a62494f8cec71bc2c0d199a\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := { { headerName := \"Contribution-Id\", headerValue := \"CHAT:10014002007@ericsson.se\" } }, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := \"----=Part_jlJ94hBw16CErXnvMxJd2vfs90jDEP\\r\\nContent-Type: message/cpim\\r\\n\\r\\nTo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:29+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: XKDf1g9a\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002006 to 10014002007\\r\\n----=Part_jlJ94hBw16CErXnvMxJd2vfs90jDEP\\r\\nContent-Type: application/sdp\\r\\n\\r\\nv=0\\r\\no=10014002006 3623178869 3623178869 IN IP4 142.133.142.3\\r\\ns=-\\r\\nc=IN IP4 142.133.142.3\\r\\nt=0 0\\r\\nm=message 6060 TCP/MSRP *\\r\\na=accept-types:*\\r\\na=connection:new\\r\\na=sendrecv\\r\\na=setup:active\\r\\na=path:msrp://142.133.142.3:6060/j9EMds9SLZdZ;tcp\\r\\n\\r\\n----=Part_jlJ94hBw16CErXnvMxJd2vfs90jDEP--\\r\\n\", payload := omit } }} id 6" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.351984", component: "849", peer_component: "BaseSipClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "345", function_name: "function:generalReceiveSip", message: " Message with id 6 was extracted from the queue of sipClientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.352026", component: "849", peer_component: "BaseSipClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "346", function_name: "function:generalReceiveSip", message: " Stop timer timerWaitForSipMessage: 15 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.356341", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on sipInternalPort to mtc @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspRequest := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, request := { requestLine := { method := INVITE_E (4), requestUri := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := { fieldName := ACCEPT_CONTACT_E (1), ac_values := { { { id := \"+g.oma.sip-im\", paramValue := omit } } } }, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := { fieldName := ALLOW_E (7), methods := { \"INVITE\", \"BYE\", \"ACK\", \"CANCEL\", \"UPDATE\" } }, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_6_1805558430567465450\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"8cf72980-08e3-4819-943d-f7260f67318d\" }, { id := \"transport\", paramValue := \"TCP\" }, { id := \"fid\", paramValue := \"wcg-ft3_1\" } }, headers := omit } } }, contactParams := { { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 732 }, contentType := { fieldName := CONTENT_TYPE_E (19), mediaType := \"multipart/mixed; boundary=\\\"--=Part_jlJ94hBw16CErXnvMxJd2vfs90jDEP\\\"\" }, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"INVITE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o4954c-7\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := { fieldName := MIN_SE_E (38), deltaSec := \"90\", params := omit }, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := { fieldName := P_PREFERRED_ID_E (55), ids := { { addrSpecUnion := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } } }, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := { fieldName := ROUTE_E (84), routeBody := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"lr\", paramValue := omit }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } }, rrParam := omit } } }, security_client := omit, security_server := omit, security_verify := omit, session_expires := { fieldName := SESSION_EXPIRES_E (88), deltaSec := \"3600\", se_params := { { id := \"refresher\", paramValue := \"uac\" } } }, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := { fieldName := SUBJECT_E (94), summary := \"Body message 10014002006 to 10014002007\" }, subscription_state := omit, supported := { fieldName := SUPPORTED_E (96), optionsTags := { \"timer\" } }, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f965ce3efd3a62494f8cec71bc2c0d199a\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := { { headerName := \"Contribution-Id\", headerValue := \"CHAT:10014002007@ericsson.se\" } }, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := { fieldName := CONTRIBUTION_ID_E (117), name_value := \"CHAT:10014002007@ericsson.se\" }, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := \"----=Part_jlJ94hBw16CErXnvMxJd2vfs90jDEP\\r\\nContent-Type: message/cpim\\r\\n\\r\\nTo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:29+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: XKDf1g9a\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002006 to 10014002007\\r\\n----=Part_jlJ94hBw16CErXnvMxJd2vfs90jDEP\\r\\nContent-Type: application/sdp\\r\\n\\r\\nv=0\\r\\no=10014002006 3623178869 3623178869 IN IP4 142.133.142.3\\r\\ns=-\\r\\nc=IN IP4 142.133.142.3\\r\\nt=0 0\\r\\nm=message 6060 TCP/MSRP *\\r\\na=accept-types:*\\r\\na=connection:new\\r\\na=sendrecv\\r\\na=setup:active\\r\\na=path:msrp://142.133.142.3:6060/j9EMds9SLZdZ;tcp\\r\\n\\r\\n----=Part_jlJ94hBw16CErXnvMxJd2vfs90jDEP--\\r\\n\", payload := omit } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.356671", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "74", function_name: "function:sipRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.357094", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on sipInternalPort[0] from 849 @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspRequest := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, request := { requestLine := { method := INVITE_E (4), requestUri := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := { fieldName := ACCEPT_CONTACT_E (1), ac_values := { { { id := \"+g.oma.sip-im\", paramValue := omit } } } }, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := { fieldName := ALLOW_E (7), methods := { \"INVITE\", \"BYE\", \"ACK\", \"CANCEL\", \"UPDATE\" } }, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_6_1805558430567465450\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"8cf72980-08e3-4819-943d-f7260f67318d\" }, { id := \"transport\", paramValue := \"TCP\" }, { id := \"fid\", paramValue := \"wcg-ft3_1\" } }, headers := omit } } }, contactParams := { { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 732 }, contentType := { fieldName := CONTENT_TYPE_E (19), mediaType := \"multipart/mixed; boundary=\\\"--=Part_jlJ94hBw16CErXnvMxJd2vfs90jDEP\\\"\" }, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"INVITE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o4954c-7\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := { fieldName := MIN_SE_E (38), deltaSec := \"90\", params := omit }, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := { fieldName := P_PREFERRED_ID_E (55), ids := { { addrSpecUnion := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } } }, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := { fieldName := ROUTE_E (84), routeBody := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"lr\", paramValue := omit }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } }, rrParam := omit } } }, security_client := omit, security_server := omit, security_verify := omit, session_expires := { fieldName := SESSION_EXPIRES_E (88), deltaSec := \"3600\", se_params := { { id := \"refresher\", paramValue := \"uac\" } } }, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := { fieldName := SUBJECT_E (94), summary := \"Body message 10014002006 to 10014002007\" }, subscription_state := omit, supported := { fieldName := SUPPORTED_E (96), optionsTags := { \"timer\" } }, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f965ce3efd3a62494f8cec71bc2c0d199a\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := { { headerName := \"Contribution-Id\", headerValue := \"CHAT:10014002007@ericsson.se\" } }, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := { fieldName := CONTRIBUTION_ID_E (117), name_value := \"CHAT:10014002007@ericsson.se\" }, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := \"----=Part_jlJ94hBw16CErXnvMxJd2vfs90jDEP\\r\\nContent-Type: message/cpim\\r\\n\\r\\nTo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:29+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: XKDf1g9a\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002006 to 10014002007\\r\\n----=Part_jlJ94hBw16CErXnvMxJd2vfs90jDEP\\r\\nContent-Type: application/sdp\\r\\n\\r\\nv=0\\r\\no=10014002006 3623178869 3623178869 IN IP4 142.133.142.3\\r\\ns=-\\r\\nc=IN IP4 142.133.142.3\\r\\nt=0 0\\r\\nm=message 6060 TCP/MSRP *\\r\\na=accept-types:*\\r\\na=connection:new\\r\\na=sendrecv\\r\\na=setup:active\\r\\na=path:msrp://142.133.142.3:6060/j9EMds9SLZdZ;tcp\\r\\n\\r\\n----=Part_jlJ94hBw16CErXnvMxJd2vfs90jDEP--\\r\\n\", payload := omit } } } }} id 11" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.357492", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port sipInternalPort[0] succeeded, message from 849: @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspRequest := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, request := { requestLine := { method := INVITE_E (4), requestUri := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := { fieldName := ACCEPT_CONTACT_E (1), ac_values := { { { id := \"+g.oma.sip-im\", paramValue := omit } } } }, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := { fieldName := ALLOW_E (7), methods := { \"INVITE\", \"BYE\", \"ACK\", \"CANCEL\", \"UPDATE\" } }, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_6_1805558430567465450\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"8cf72980-08e3-4819-943d-f7260f67318d\" }, { id := \"transport\", paramValue := \"TCP\" }, { id := \"fid\", paramValue := \"wcg-ft3_1\" } }, headers := omit } } }, contactParams := { { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 732 }, contentType := { fieldName := CONTENT_TYPE_E (19), mediaType := \"multipart/mixed; boundary=\\\"--=Part_jlJ94hBw16CErXnvMxJd2vfs90jDEP\\\"\" }, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"INVITE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o4954c-7\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := { fieldName := MIN_SE_E (38), deltaSec := \"90\", params := omit }, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := { fieldName := P_PREFERRED_ID_E (55), ids := { { addrSpecUnion := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } } }, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := { fieldName := ROUTE_E (84), routeBody := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"lr\", paramValue := omit }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } }, rrParam := omit } } }, security_client := omit, security_server := omit, security_verify := omit, session_expires := { fieldName := SESSION_EXPIRES_E (88), deltaSec := \"3600\", se_params := { { id := \"refresher\", paramValue := \"uac\" } } }, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := { fieldName := SUBJECT_E (94), summary := \"Body message 10014002006 to 10014002007\" }, subscription_state := omit, supported := { fieldName := SUPPORTED_E (96), optionsTags := { \"timer\" } }, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f965ce3efd3a62494f8cec71bc2c0d199a\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := { { headerName := \"Contribution-Id\", headerValue := \"CHAT:10014002007@ericsson.se\" } }, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := { fieldName := CONTRIBUTION_ID_E (117), name_value := \"CHAT:10014002007@ericsson.se\" }, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := \"----=Part_jlJ94hBw16CErXnvMxJd2vfs90jDEP\\r\\nContent-Type: message/cpim\\r\\n\\r\\nTo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:29+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: XKDf1g9a\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002006 to 10014002007\\r\\n----=Part_jlJ94hBw16CErXnvMxJd2vfs90jDEP\\r\\nContent-Type: application/sdp\\r\\n\\r\\nv=0\\r\\no=10014002006 3623178869 3623178869 IN IP4 142.133.142.3\\r\\ns=-\\r\\nc=IN IP4 142.133.142.3\\r\\nt=0 0\\r\\nm=message 6060 TCP/MSRP *\\r\\na=accept-types:*\\r\\na=connection:new\\r\\na=sendrecv\\r\\na=setup:active\\r\\na=path:msrp://142.133.142.3:6060/j9EMds9SLZdZ;tcp\\r\\n\\r\\n----=Part_jlJ94hBw16CErXnvMxJd2vfs90jDEP--\\r\\n\", payload := omit } } } }} id 11" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.357641", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Message with id 11 was extracted from the queue of sipInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.357691", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "255", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.378474", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.389762", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "286", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.390320", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on sipInternalPort[0] to 849 @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMMAND_SIP_SEND_SIP_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"2\" }, { parameterName := \"SUBSCRIBER\", parameterValue := \"11\" } } }, aspsSip := { { aspResponse := { addr := { remote_host := \"142.133.142.3\", remote_port := 5060, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 100, reasonPhrase := \"Trying\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_6_1805558430567465450\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"INVITE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o4954c-7\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f965ce3efd3a62494f8cec71bc2c0d199a\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.390690", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.390783", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on sipInternalPort from mtc @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMMAND_SIP_SEND_SIP_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"2\" }, { parameterName := \"SUBSCRIBER\", parameterValue := \"11\" } } }, aspsSip := { { aspResponse := { addr := { remote_host := \"142.133.142.3\", remote_port := 5060, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 100, reasonPhrase := \"Trying\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_6_1805558430567465450\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"INVITE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o4954c-7\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f965ce3efd3a62494f8cec71bc2c0d199a\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 11" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.390995", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port sipInternalPort succeeded, message from mtc: @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMMAND_SIP_SEND_SIP_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"2\" }, { parameterName := \"SUBSCRIBER\", parameterValue := \"11\" } } }, aspsSip := { { aspResponse := { addr := { remote_host := \"142.133.142.3\", remote_port := 5060, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 100, reasonPhrase := \"Trying\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_6_1805558430567465450\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"INVITE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o4954c-7\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f965ce3efd3a62494f8cec71bc2c0d199a\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 11" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.391087", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Message with id 11 was extracted from the queue of sipInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.391113", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "80", function_name: "function:sipRun", message: " Stop timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.391720", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on sipClientPort to system @IPL4_demo_types.SIP_SendTo : { connId := 3, remName := \"142.133.142.3\", remPort := 5060, proto := { tcp := { } }, msg := { raw := \"SIP/2.0 100 Trying\\r\\nCall-ID:142.133.142.3_6_1805558430567465450\\r\\nContent-Length:0\\r\\nCSeq:1 INVITE\\r\\nFrom:<sip:10014002006@ericsson.se>;tag=i1o4954c-7\\r\\nTo:<sip:10014002007@ericsson.se>\\r\\nVia:SIP/2.0/TCP 142.133.142.3:5060;branch=z9hG4bKf1f965ce3efd3a62494f8cec71bc2c0d199a\\r\\n\\r\\n\" }}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.391830", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Outgoing message was mapped to @IPL4asp_Types.ASP_SendTo : { connId := 3, remName := \"142.133.142.3\", remPort := 5060, proto := { tcp := { } }, msg := '5349502F322E302031303020547279696E670D0A43616C6C2D49443A3134322E3133332E3134322E335F365F313830353535383433303536373436353435300D0A436F6E74656E742D4C656E6774683A300D0A435365713A3120494E564954450D0A46726F6D3A3C7369703A3130303134303032303036406572696373736F6E2E73653E3B7461673D69316F34393534632D370D0A546F3A3C7369703A3130303134303032303037406572696373736F6E2E73653E0D0A5669613A5349502F322E302F544350203134322E3133332E3134322E333A353036303B6272616E63683D7A39684734624B6631663936356365336566643361363234393466386365633731626332633064313939610D0A0D0A'O (\"SIP/2.0 100 Trying\\r\\nCall-ID:142.133.142.3_6_1805558430567465450\\r\\nContent-Length:0\\r\\nCSeq:1 INVITE\\r\\nFrom:<sip:10014002006@ericsson.se>;tag=i1o4954c-7\\r\\nTo:<sip:10014002007@ericsson.se>\\r\\nVia:SIP/2.0/TCP 142.133.142.3:5060;branch=z9hG4bKf1f965ce3efd3a62494f8cec71bc2c0d199a\\r\\n\\r\\n\")}" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.392096", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "388", function_name: "function:processCommand", message: " Sent on sipInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.392212", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "74", function_name: "function:sipRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.392256", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "253", function_name: "function:receiveInternalMessage", message: " Message enqueued on sipInternalPort[0] from 849 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.392329", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Receive operation on port sipInternalPort[0] succeeded, message from 849: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.392365", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Message with id 12 was extracted from the queue of sipInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.392393", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "255", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.396146", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.406191", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "286", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.406987", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on sipInternalPort[0] to 849 @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMMAND_SIP_SEND_SIP_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"2\" }, { parameterName := \"SUBSCRIBER\", parameterValue := \"11\" } } }, aspsSip := { { aspRequest := { addr := omit, request := { requestLine := { method := INVITE_E (4), requestUri := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" } }, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := { fieldName := ACCEPT_CONTACT_E (1), ac_values := { { { id := \"+g.oma.sip-im\", paramValue := omit } } } }, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := { fieldName := ALLOW_E (7), methods := { \"INVITE\", \"BYE\", \"ACK\", \"CANCEL\", \"UPDATE\" } }, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"VAT_callId_79564\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"8cf72980-08e3-4819-943d-f7260f67318d\" }, { id := \"transport\", paramValue := \"TCP\" }, { id := \"fid\", paramValue := \"wcg-ft3_1\" } }, headers := omit } } }, contactParams := { { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := { fieldName := CONTENT_TYPE_E (19), mediaType := \"multipart/mixed; boundary=\\\"--=Part_jlJ94hBw16CErXnvMxJd2vfs90jDEP\\\"\" }, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"INVITE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"from_50592\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := { fieldName := MIN_SE_E (38), deltaSec := \"90\", params := omit }, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := { fieldName := P_ASSERTED_ID_E (43), ids := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, { nameAddr := { displayName := omit, addrSpec := { scheme := \"tel\", userInfo := { userOrTelephoneSubscriber := \"+10014002006\", password := omit }, hostPort := { host := omit, portField := omit }, urlParameters := omit, headers := omit } } } } }, p_associated_uri := omit, p_called_party_id := { fieldName := P_CALLED_PARTY_ID (45), called_pty_id := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } }, cpid_param := omit }, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := { fieldName := REQUIRE_E (80), optionsTags := { \"timer\" } }, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := { fieldName := SESSION_EXPIRES_E (88), deltaSec := \"3600\", se_params := { { id := \"refresher\", paramValue := \"uac\" } } }, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := { fieldName := SUBJECT_E (94), summary := \"Body message 10014002006 to 10014002007\" }, subscription_state := omit, supported := { fieldName := SUPPORTED_E (96), optionsTags := { \"timer\" } }, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := omit, portField := omit }, viaParams := { { id := \"branch\", paramValue := \"via_13102\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := { fieldName := CONTRIBUTION_ID_E (117), name_value := \"CHAT:10014002007@ericsson.se\" }, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := \"----=Part_jlJ94hBw16CErXnvMxJd2vfs90jDEP\\r\\nContent-Type: message/cpim\\r\\n\\r\\nTo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:29+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: XKDf1g9a\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002006 to 10014002007\\r\\n----=Part_jlJ94hBw16CErXnvMxJd2vfs90jDEP\\r\\nContent-Type: application/sdp\\r\\n\\r\\nv=0\\r\\no=10014002006 3590934420 3590934420 IN IP4 142.133.150.169\\r\\ns=-\\r\\nc=IN IP4 142.133.150.169\\r\\nt=0 0\\r\\nm=message 17077 TCP/MSRP *\\r\\na=accept-types:*\\r\\na=connection:new\\r\\na=sendrecv\\r\\na=setup:active\\r\\na=path:msrp://142.133.150.169:17077/SessionId18VAT;tcp\\r\\n----=Part_jlJ94hBw16CErXnvMxJd2vfs90jDEP--\\r\\n\", payload := omit } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.407394", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.407575", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on sipInternalPort from mtc @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMMAND_SIP_SEND_SIP_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"2\" }, { parameterName := \"SUBSCRIBER\", parameterValue := \"11\" } } }, aspsSip := { { aspRequest := { addr := omit, request := { requestLine := { method := INVITE_E (4), requestUri := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" } }, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := { fieldName := ACCEPT_CONTACT_E (1), ac_values := { { { id := \"+g.oma.sip-im\", paramValue := omit } } } }, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := { fieldName := ALLOW_E (7), methods := { \"INVITE\", \"BYE\", \"ACK\", \"CANCEL\", \"UPDATE\" } }, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"VAT_callId_79564\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"8cf72980-08e3-4819-943d-f7260f67318d\" }, { id := \"transport\", paramValue := \"TCP\" }, { id := \"fid\", paramValue := \"wcg-ft3_1\" } }, headers := omit } } }, contactParams := { { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := { fieldName := CONTENT_TYPE_E (19), mediaType := \"multipart/mixed; boundary=\\\"--=Part_jlJ94hBw16CErXnvMxJd2vfs90jDEP\\\"\" }, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"INVITE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"from_50592\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := { fieldName := MIN_SE_E (38), deltaSec := \"90\", params := omit }, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := { fieldName := P_ASSERTED_ID_E (43), ids := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, { nameAddr := { displayName := omit, addrSpec := { scheme := \"tel\", userInfo := { userOrTelephoneSubscriber := \"+10014002006\", password := omit }, hostPort := { host := omit, portField := omit }, urlParameters := omit, headers := omit } } } } }, p_associated_uri := omit, p_called_party_id := { fieldName := P_CALLED_PARTY_ID (45), called_pty_id := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } }, cpid_param := omit }, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := { fieldName := REQUIRE_E (80), optionsTags := { \"timer\" } }, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := { fieldName := SESSION_EXPIRES_E (88), deltaSec := \"3600\", se_params := { { id := \"refresher\", paramValue := \"uac\" } } }, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := { fieldName := SUBJECT_E (94), summary := \"Body message 10014002006 to 10014002007\" }, subscription_state := omit, supported := { fieldName := SUPPORTED_E (96), optionsTags := { \"timer\" } }, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := omit, portField := omit }, viaParams := { { id := \"branch\", paramValue := \"via_13102\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := { fieldName := CONTRIBUTION_ID_E (117), name_value := \"CHAT:10014002007@ericsson.se\" }, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := \"----=Part_jlJ94hBw16CErXnvMxJd2vfs90jDEP\\r\\nContent-Type: message/cpim\\r\\n\\r\\nTo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:29+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: XKDf1g9a\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002006 to 10014002007\\r\\n----=Part_jlJ94hBw16CErXnvMxJd2vfs90jDEP\\r\\nContent-Type: application/sdp\\r\\n\\r\\nv=0\\r\\no=10014002006 3590934420 3590934420 IN IP4 142.133.150.169\\r\\ns=-\\r\\nc=IN IP4 142.133.150.169\\r\\nt=0 0\\r\\nm=message 17077 TCP/MSRP *\\r\\na=accept-types:*\\r\\na=connection:new\\r\\na=sendrecv\\r\\na=setup:active\\r\\na=path:msrp://142.133.150.169:17077/SessionId18VAT;tcp\\r\\n----=Part_jlJ94hBw16CErXnvMxJd2vfs90jDEP--\\r\\n\", payload := omit } } } }} id 12" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.408075", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port sipInternalPort succeeded, message from mtc: @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMMAND_SIP_SEND_SIP_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"2\" }, { parameterName := \"SUBSCRIBER\", parameterValue := \"11\" } } }, aspsSip := { { aspRequest := { addr := omit, request := { requestLine := { method := INVITE_E (4), requestUri := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" } }, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := { fieldName := ACCEPT_CONTACT_E (1), ac_values := { { { id := \"+g.oma.sip-im\", paramValue := omit } } } }, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := { fieldName := ALLOW_E (7), methods := { \"INVITE\", \"BYE\", \"ACK\", \"CANCEL\", \"UPDATE\" } }, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"VAT_callId_79564\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"8cf72980-08e3-4819-943d-f7260f67318d\" }, { id := \"transport\", paramValue := \"TCP\" }, { id := \"fid\", paramValue := \"wcg-ft3_1\" } }, headers := omit } } }, contactParams := { { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := { fieldName := CONTENT_TYPE_E (19), mediaType := \"multipart/mixed; boundary=\\\"--=Part_jlJ94hBw16CErXnvMxJd2vfs90jDEP\\\"\" }, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"INVITE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"from_50592\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := { fieldName := MIN_SE_E (38), deltaSec := \"90\", params := omit }, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := { fieldName := P_ASSERTED_ID_E (43), ids := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, { nameAddr := { displayName := omit, addrSpec := { scheme := \"tel\", userInfo := { userOrTelephoneSubscriber := \"+10014002006\", password := omit }, hostPort := { host := omit, portField := omit }, urlParameters := omit, headers := omit } } } } }, p_associated_uri := omit, p_called_party_id := { fieldName := P_CALLED_PARTY_ID (45), called_pty_id := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } }, cpid_param := omit }, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := { fieldName := REQUIRE_E (80), optionsTags := { \"timer\" } }, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := { fieldName := SESSION_EXPIRES_E (88), deltaSec := \"3600\", se_params := { { id := \"refresher\", paramValue := \"uac\" } } }, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := { fieldName := SUBJECT_E (94), summary := \"Body message 10014002006 to 10014002007\" }, subscription_state := omit, supported := { fieldName := SUPPORTED_E (96), optionsTags := { \"timer\" } }, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := omit, portField := omit }, viaParams := { { id := \"branch\", paramValue := \"via_13102\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := { fieldName := CONTRIBUTION_ID_E (117), name_value := \"CHAT:10014002007@ericsson.se\" }, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := \"----=Part_jlJ94hBw16CErXnvMxJd2vfs90jDEP\\r\\nContent-Type: message/cpim\\r\\n\\r\\nTo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:29+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: XKDf1g9a\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002006 to 10014002007\\r\\n----=Part_jlJ94hBw16CErXnvMxJd2vfs90jDEP\\r\\nContent-Type: application/sdp\\r\\n\\r\\nv=0\\r\\no=10014002006 3590934420 3590934420 IN IP4 142.133.150.169\\r\\ns=-\\r\\nc=IN IP4 142.133.150.169\\r\\nt=0 0\\r\\nm=message 17077 TCP/MSRP *\\r\\na=accept-types:*\\r\\na=connection:new\\r\\na=sendrecv\\r\\na=setup:active\\r\\na=path:msrp://142.133.150.169:17077/SessionId18VAT;tcp\\r\\n----=Part_jlJ94hBw16CErXnvMxJd2vfs90jDEP--\\r\\n\", payload := omit } } } }} id 12" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.408237", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Message with id 12 was extracted from the queue of sipInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.408283", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "80", function_name: "function:sipRun", message: " Stop timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.409270", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on sipClientPort to system @IPL4_demo_types.SIP_SendTo : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, proto := { tcp := { } }, msg := { raw := \"INVITE sip:10014002007@ericsson.se;csid=2838ab5a-e194-4923-81af-c9f0a544f667 SIP/2.0\\r\\nAccept-Contact:*;+g.oma.sip-im\\r\\nAllow:INVITE\\r\\nAllow:BYE\\r\\nAllow:ACK\\r\\nAllow:CANCEL\\r\\nAllow:UPDATE\\r\\nCall-ID:VAT_callId_79564\\r\\nContact:<sip:10014002006@142.133.150.169:26720;csid=8cf72980-08e3-4819-943d-f7260f67318d;transport=TCP;fid=wcg-ft3_1>;+g.oma.sip-im;+g.gsma.rcs.ipcall;+g.3gpp.icsi-ref=\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\";+g.3gpp.cs-voice;+g.3gpp.iari-ref=\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\";video\\r\\nContent-Length:740\\r\\nContent-Type:multipart/mixed; boundary=\\\"--=Part_jlJ94hBw16CErXnvMxJd2vfs90jDEP\\\"\\r\\nCSeq:1 INVITE\\r\\nFrom:<sip:10014002006@ericsson.se>;tag=from_50592\\r\\nMax-Forwards:69\\r\\nContribution-Id:CHAT:10014002007@ericsson.se\\r\\nMin-SE:90\\r\\nP-Asserted-Identity:<sip:10014002006@ericsson.se>\\r\\nP-Asserted-Identity:<tel:+10014002006>\\r\\nP-Called-Party-ID:<sip:10014002006@ericsson.se>\\r\\nRequire:timer\\r\\nSession-Expires:3600;refresher=uac\\r\\nSubject:Body message 10014002006 to 10014002007\\r\\nSupported:timer\\r\\nTo:<sip:10014002007@ericsson.se>\\r\\nVia:SIP/2.0/TCP 142.133.150.169:26720;branch=via_13102\\r\\n\\r\\n----=Part_jlJ94hBw16CErXnvMxJd2vfs90jDEP\\r\\nContent-Type: message/cpim\\r\\n\\r\\nTo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:29+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: XKDf1g9a\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002006 to 10014002007\\r\\n----=Part_jlJ94hBw16CErXnvMxJd2vfs90jDEP\\r\\nContent-Type: application/sdp\\r\\n\\r\\nv=0\\r\\no=10014002006 3590934420 3590934420 IN IP4 142.133.150.169\\r\\ns=-\\r\\nc=IN IP4 142.133.150.169\\r\\nt=0 0\\r\\nm=message 17077 TCP/MSRP *\\r\\na=accept-types:*\\r\\na=connection:new\\r\\na=sendrecv\\r\\na=setup:active\\r\\na=path:msrp://142.133.150.169:17077/SessionId18VAT;tcp\\r\\n----=Part_jlJ94hBw16CErXnvMxJd2vfs90jDEP--\\r\\n\" }}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.409589", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Outgoing message was mapped to @IPL4asp_Types.ASP_SendTo : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, proto := { tcp := { } }, msg := '494E56495445207369703A3130303134303032303037406572696373736F6E2E73653B637369643D32383338616235612D653139342D343932332D383161662D633966306135343466363637205349502F322E300D0A4163636570742D436F6E746163743A2A3B2B672E6F6D612E7369702D696D0D0A416C6C6F773A494E564954450D0A416C6C6F773A4259450D0A416C6C6F773A41434B0D0A416C6C6F773A43414E43454C0D0A416C6C6F773A5550444154450D0A43616C6C2D49443A5641545F63616C6C49645F37393536340D0A436F6E746163743A3C7369703A3130303134303032303036403134322E3133332E3135302E3136393A32363732303B637369643D38636637323938302D303865332D343831392D393433642D6637323630663637333138643B7472616E73706F72743D5443503B6669643D7763672D6674335F313E3B2B672E6F6D612E7369702D696D3B2B672E67736D612E7263732E697063616C6C3B2B672E336770702E696373692D7265663D2275726E25334175726E2D37253341336770702D736572766963652E696D732E696373692E6F6D612E63706D2E6D73672C75726E25334175726E2D37253341336770702D736572766963652E696D732E696373692E6D6D74656C223B2B672E336770702E63732D766F6963653B2B672E336770702E696172692D7265663D2275726E25334175726E2D37253341336770702D6170706C69636174696F6E2E696D732E696172692E67736D612D7673223B766964656F0D0A436F6E74656E742D4C656E6774683A3734300D0A436F6E74656E742D547970653A6D756C7469706172742F6D697865643B20626F756E646172793D222D2D3D506172745F6A6C4A39346842773136434572586E764D784A643276667339306A444550220D0A435365713A3120494E564954450D0A46726F6D3A3C7369703A3130303134303032303036406572696373736F6E2E73653E3B7461673D66726F6D5F35303539320D0A4D61782D466F7277617264733A36390D0A436F6E747269627574696F6E2D49643A434841543A3130303134303032303037406572696373736F6E2E73650D0A4D696E2D53453A39300D0A502D41737365727465642D4964656E746974793A3C7369703A3130303134303032303036406572696373736F6E2E73653E0D0A502D41737365727465642D4964656E746974793A3C74656C3A2B31303031343030323030363E0D0A502D43616C6C65642D50617274792D49443A3C7369703A3130303134303032303036406572696373736F6E2E73653E0D0A526571756972653A74696D65720D0A53657373696F6E2D457870697265733A333630303B7265667265736865723D7561630D0A5375626A6563743A426F6479206D65737361676520313030313430303230303620746F2031303031343030323030370D0A537570706F727465643A74696D65720D0A546F3A3C7369703A3130303134303032303037406572696373736F6E2E73653E0D0A5669613A5349502F322E302F544350203134322E3133332E3135302E3136393A32363732303B6272616E63683D7669615F31333130320D0A0D0A2D2D2D2D3D506172745F6A6C4A39346842773136434572586E764D784A643276667339306A4445500D0A436F6E74656E742D547970653A206D6573736167652F6370696D0D0A0D0A546F3A203C7369703A616E6F6E796D6F757340616E6F6E796D6F75732E696E76616C69643E0D0A46726F6D3A203C7369703A616E6F6E796D6F757340616E6F6E796D6F75732E696E76616C69643E0D0A4461746554696D653A20323031342D31302D32345432323A33343A32392B30303A30300D0A4E533A20696D646E203C75726E3A696574663A706172616D733A696D646E3E0D0A696D646E2E446973706F736974696F6E2D4E6F74696669636174696F6E3A20706F7369746976652D64656C69766572790D0A696D646E2E4D6573736167652D49443A20584B4466316739610D0A0D0A436F6E74656E742D547970653A20746578742F706C61696E0D0A0D0A426F6479206D65737361676520313030313430303230303620746F2031303031343030323030370D0A2D2D2D2D3D506172745F6A6C4A39346842773136434572586E764D784A643276667339306A4445500D0A436F6E74656E742D547970653A206170706C69636174696F6E2F7364700D0A0D0A763D300D0A6F3D31303031343030323030362033353930393334343230203335393039333434323020494E20495034203134322E3133332E3135302E3136390D0A733D2D0D0A633D494E20495034203134322E3133332E3135302E3136390D0A743D3020300D0A6D3D6D657373616765203137303737205443502F4D535250202A0D0A613D6163636570742D74797065733A2A0D0A613D636F6E6E656374696F6E3A6E65770D0A613D73656E64726563760D0A613D73657475703A6163746976650D0A613D706174683A6D7372703A2F2F3134322E3133332E3135302E3136393A31373037372F53657373696F6E496431385641543B7463700D0A2D2D2D2D3D506172745F6A6C4A39346842773136434572586E764D784A643276667339306A4445502D2D0D0A'O (\"INVITE sip:10014002007@ericsson.se;csid=2838ab5a-e194-4923-81af-c9f0a544f667 SIP/2.0\\r\\nAccept-Contact:*;+g.oma.sip-im\\r\\nAllow:INVITE\\r\\nAllow:BYE\\r\\nAllow:ACK\\r\\nAllow:CANCEL\\r\\nAllow:UPDATE\\r\\nCall-ID:VAT_callId_79564\\r\\nContact:<sip:10014002006@142.133.150.169:26720;csid=8cf72980-08e3-4819-943d-f7260f67318d;transport=TCP;fid=wcg-ft3_1>;+g.oma.sip-im;+g.gsma.rcs.ipcall;+g.3gpp.icsi-ref=\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\";+g.3gpp.cs-voice;+g.3gpp.iari-ref=\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\";video\\r\\nContent-Length:740\\r\\nContent-Type:multipart/mixed; boundary=\\\"--=Part_jlJ94hBw16CErXnvMxJd2vfs90jDEP\\\"\\r\\nCSeq:1 INVITE\\r\\nFrom:<sip:10014002006@ericsson.se>;tag=from_50592\\r\\nMax-Forwards:69\\r\\nContribution-Id:CHAT:10014002007@ericsson.se\\r\\nMin-SE:90\\r\\nP-Asserted-Identity:<sip:10014002006@ericsson.se>\\r\\nP-Asserted-Identity:<tel:+10014002006>\\r\\nP-Called-Party-ID:<sip:10014002006@ericsson.se>\\r\\nRequire:timer\\r\\nSession-Expires:3600;refresher=uac\\r\\nSubject:Body message 10014002006 to 10014002007\\r\\nSupported:timer\\r\\nTo:<sip:10014002007@ericsson.se>\\r\\nVia:SIP/2.0/TCP 142.133.150.169:26720;branch=via_13102\\r\\n\\r\\n----=Part_jlJ94hBw16CErXnvMxJd2vfs90jDEP\\r\\nContent-Type: message/cpim\\r\\n\\r\\nTo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:29+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: XKDf1g9a\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002006 to 10014002007\\r\\n----=Part_jlJ94hBw16CErXnvMxJd2vfs90jDEP\\r\\nContent-Type: application/sdp\\r\\n\\r\\nv=0\\r\\no=10014002006 3590934420 3590934420 IN IP4 142.133.150.169\\r\\ns=-\\r\\nc=IN IP4 142.133.150.169\\r\\nt=0 0\\r\\nm=message 17077 TCP/MSRP *\\r\\na=accept-types:*\\r\\na=connection:new\\r\\na=sendrecv\\r\\na=setup:active\\r\\na=path:msrp://142.133.150.169:17077/SessionId18VAT;tcp\\r\\n----=Part_jlJ94hBw16CErXnvMxJd2vfs90jDEP--\\r\\n\")}" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.409881", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "388", function_name: "function:processCommand", message: " Sent on sipInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.409989", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "74", function_name: "function:sipRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.410008", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "253", function_name: "function:receiveInternalMessage", message: " Message enqueued on sipInternalPort[0] from 849 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.410083", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Receive operation on port sipInternalPort[0] succeeded, message from 849: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.410120", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Message with id 13 was extracted from the queue of sipInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.410149", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "255", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.410732", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.421753", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "286", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.421875", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "202", function_name: "function:sendInternalMessage", message: " Sent on sipInternalPort[0] to 849 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.422029", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "78", function_name: "function:sipRun", message: " Message enqueued on sipInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.422104", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.422112", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Receive operation on port sipInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.422147", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Message with id 13 was extracted from the queue of sipInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.422170", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "80", function_name: "function:sipRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.422356", component: "849", peer_component: "BaseSipClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "320", function_name: "function:generalReceiveSip", message: " Start timer timerWaitForSipMessage: 15 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.442291", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on sipClientPort from system @IPL4asp_Types.ASP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msgrying\\r\\nContent-Length: 0\\r\\nTo: <sip:10014002007@ericsson.se>\\r\\nCseq: 1 INVITE\\r\\nVia: SIP/2.0/TCP 142.133.150.169:26720;branch=via_13102\\r\\nServer: SipBoss-1.0\\r\\nFrom: <sip:10014002006@ericsson.se>;tag=from_50592\\r\\nCall-Id: VAT_callId_79564\\r\\n\\r\\n\")} id 7" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.442860", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Incoming message was mapped to @IPL4_demo_types.SIP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msg := { response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 100, reasonPhrase := \"Trying\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"VAT_callId_79564\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"INVITE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"from_50592\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := { fieldName := SERVER_E (90), serverBody := { \"SipBoss-1.0\" } }, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.150.169\", portField := 26720 }, viaParams := { { id := \"branch\", paramValue := \"via_13102\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } }} id 7" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.443175", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port sipClientPort succeeded, message from system(): @IPL4_demo_types.SIP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msg := { response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 100, reasonPhrase := \"Trying\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"VAT_callId_79564\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"INVITE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"from_50592\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := { fieldName := SERVER_E (90), serverBody := { \"SipBoss-1.0\" } }, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.150.169\", portField := 26720 }, viaParams := { { id := \"branch\", paramValue := \"via_13102\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } }} id 7" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.443286", component: "849", peer_component: "BaseSipClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "325", function_name: "function:generalReceiveSip", message: " Message with id 7 was extracted from the queue of sipClientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.443318", component: "849", peer_component: "BaseSipClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "326", function_name: "function:generalReceiveSip", message: " Stop timer timerWaitForSipMessage: 15 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.444307", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on sipInternalPort to mtc @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspResponse := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 100, reasonPhrase := \"Trying\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"VAT_callId_79564\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"INVITE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"from_50592\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := { fieldName := SERVER_E (90), serverBody := { \"SipBoss-1.0\" } }, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.150.169\", portField := 26720 }, viaParams := { { id := \"branch\", paramValue := \"via_13102\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.444543", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "74", function_name: "function:sipRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.444990", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on sipInternalPort[0] from 849 @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspResponse := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 100, reasonPhrase := \"Trying\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"VAT_callId_79564\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"INVITE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"from_50592\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := { fieldName := SERVER_E (90), serverBody := { \"SipBoss-1.0\" } }, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.150.169\", portField := 26720 }, viaParams := { { id := \"branch\", paramValue := \"via_13102\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 14" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.445262", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port sipInternalPort[0] succeeded, message from 849: @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspResponse := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 100, reasonPhrase := \"Trying\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"VAT_callId_79564\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"INVITE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"from_50592\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := { fieldName := SERVER_E (90), serverBody := { \"SipBoss-1.0\" } }, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.150.169\", portField := 26720 }, viaParams := { { id := \"branch\", paramValue := \"via_13102\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 14" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.445374", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Message with id 14 was extracted from the queue of sipInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.445407", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "255", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.448224", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.458272", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "286", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.458383", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "202", function_name: "function:sendInternalMessage", message: " Sent on sipInternalPort[0] to 849 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.458520", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "78", function_name: "function:sipRun", message: " Message enqueued on sipInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.458592", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Receive operation on port sipInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.458594", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.458623", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Message with id 14 was extracted from the queue of sipInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.458646", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "80", function_name: "function:sipRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.458812", component: "849", peer_component: "BaseSipClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "320", function_name: "function:generalReceiveSip", message: " Start timer timerWaitForSipMessage: 15 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.600217", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on sipClientPort from system @IPL4asp_Types.ASP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msginging\\r\\nContent-Length: 0\\r\\nTo: <sip:10014002007@ericsson.se>;tag=i1o495cq-8\\r\\nContact: <sip:10014002007@142.133.142.3:5060;csid=2838ab5a-e194-4923-81af-c9f0a544f667;transport=TCP;fid=wcg-ft3_1>;+g.gsma.rcs.ipcall;+g.3gpp.icsi-ref=\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\";+g.3gpp.cs-voice;+g.3gpp.iari-ref=\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\";+g.oma.sip-im;video\\r\\nCseq: 1 INVITE\\r\\nVia: SIP/2.0/TCP 142.133.150.169:26720;branch=via_13102\\r\\nCall-Id: VAT_callId_79564\\r\\nFrom: <sip:10014002006@ericsson.se>;tag=from_50592\\r\\nServer: H2S\\r\\n\\r\\n\")} id 8" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.600829", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Incoming message was mapped to @IPL4_demo_types.SIP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msg := { response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 180, reasonPhrase := \"Ringing\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"VAT_callId_79564\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" }, { id := \"fid\", paramValue := \"wcg-ft3_1\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"video\", paramValue := omit } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"INVITE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"from_50592\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := { fieldName := SERVER_E (90), serverBody := { \"H2S\" } }, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"i1o495cq-8\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.150.169\", portField := 26720 }, viaParams := { { id := \"branch\", paramValue := \"via_13102\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } }} id 8" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.601117", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port sipClientPort succeeded, message from system(): @IPL4_demo_types.SIP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msg := { response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 180, reasonPhrase := \"Ringing\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"VAT_callId_79564\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" }, { id := \"fid\", paramValue := \"wcg-ft3_1\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"video\", paramValue := omit } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"INVITE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"from_50592\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := { fieldName := SERVER_E (90), serverBody := { \"H2S\" } }, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"i1o495cq-8\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.150.169\", portField := 26720 }, viaParams := { { id := \"branch\", paramValue := \"via_13102\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } }} id 8" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.601236", component: "849", peer_component: "BaseSipClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "325", function_name: "function:generalReceiveSip", message: " Message with id 8 was extracted from the queue of sipClientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.601264", component: "849", peer_component: "BaseSipClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "326", function_name: "function:generalReceiveSip", message: " Stop timer timerWaitForSipMessage: 15 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.602111", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on sipInternalPort to mtc @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspResponse := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 180, reasonPhrase := \"Ringing\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"VAT_callId_79564\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" }, { id := \"fid\", paramValue := \"wcg-ft3_1\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"video\", paramValue := omit } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"INVITE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"from_50592\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := { fieldName := SERVER_E (90), serverBody := { \"H2S\" } }, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"i1o495cq-8\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.150.169\", portField := 26720 }, viaParams := { { id := \"branch\", paramValue := \"via_13102\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.602312", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "74", function_name: "function:sipRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.602502", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on sipInternalPort[0] from 849 @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspResponse := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 180, reasonPhrase := \"Ringing\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"VAT_callId_79564\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" }, { id := \"fid\", paramValue := \"wcg-ft3_1\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"video\", paramValue := omit } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"INVITE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"from_50592\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := { fieldName := SERVER_E (90), serverBody := { \"H2S\" } }, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"i1o495cq-8\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.150.169\", portField := 26720 }, viaParams := { { id := \"branch\", paramValue := \"via_13102\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 15" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.602811", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port sipInternalPort[0] succeeded, message from 849: @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspResponse := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 180, reasonPhrase := \"Ringing\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"VAT_callId_79564\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" }, { id := \"fid\", paramValue := \"wcg-ft3_1\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"video\", paramValue := omit } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"INVITE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"from_50592\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := { fieldName := SERVER_E (90), serverBody := { \"H2S\" } }, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"i1o495cq-8\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.150.169\", portField := 26720 }, viaParams := { { id := \"branch\", paramValue := \"via_13102\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 15" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.602926", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Message with id 15 was extracted from the queue of sipInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.602972", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "255", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.613318", component: "855", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port clientPort was started." }
Simple DataFrame { time: "2014/Oct/24 18:34:29.613367", component: "855", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port serverPort was started." }
Simple DataFrame { time: "2014/Oct/24 18:34:29.613392", component: "855", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port httpNodeInternalPort was started." }
Simple DataFrame { time: "2014/Oct/24 18:34:29.613411", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 10 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.615576", component: "855", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "130", function_name: "function:httpNodeInitialize", message: " Port clientPort was mapped to system:clientPort[4]" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.616029", component: "855", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "133", function_name: "function:httpNodeInitialize", message: " Port serverPort was mapped to system:serverPort[4]" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.616530", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port httpNodeInternalPort[4] is waiting for connection from 855:httpNodeInternalPort on UNIX pathname /tmp/ttcn3-portconn-2d0b9d2a." }
Simple DataFrame { time: "2014/Oct/24 18:34:29.616741", component: "855", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "136", function_name: "function:httpNodeInitialize", message: " Port httpNodeInternalPort has established the connection with mtc:httpNodeInternalPort[4] using transport type UNIX" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.616812", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "239", function_name: "function:receiveInternalMessage", message: " Port httpNodeInternalPort[4] has accepted the connection from 855:httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.617120", component: "855", peer_component: "BaseHttpServerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "55", function_name: "function:openServerForListening", message: " Sent on serverPort to system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.617245", component: "855", peer_component: "BaseHttpServerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "55", function_name: "function:openServerForListening", message: " Message enqueued on serverPort from system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.617280", component: "855", peer_component: "BaseHttpServerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "73", function_name: "function:receiveHTTPServerListenResult", message: " Start timer timerWaitForHTTPRequest: 5 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.617321", component: "855", peer_component: "BaseHttpServerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "77", function_name: "function:receiveHTTPServerListenResult", message: " Receive operation on port serverPort succeeded, message from system(" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.617345", component: "855", peer_component: "BaseHttpServerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "77", function_name: "function:receiveHTTPServerListenResult", message: " Message with id 1 was extracted from the queue of serverPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.617363", component: "855", peer_component: "BaseHttpServerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "78", function_name: "function:receiveHTTPServerListenResult", message: " Stop timer timerWaitForHTTPRequest: 5 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.617446", component: "855", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "141", function_name: "function:httpNodeInitialize", message: " Sent on httpNodeInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.617533", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "239", function_name: "function:receiveInternalMessage", message: " Message enqueued on httpNodeInternalPort[4] from 855 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.617545", component: "855", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "62", function_name: "function:httpNodeRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.617587", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Receive operation on port httpNodeInternalPort[4] succeeded, message from 855: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.617616", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Message with id 1 was extracted from the queue of httpNodeInternalPort[4]" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.617639", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "241", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 10 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.617887", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.629735", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "267", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.629893", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort[4] to 855 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"3\" } } }, aspHttp := { { httpMessage := { method := \"GET\", url := \"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/channels\", body := \"\", contentType := \"\", statusCode := \"\", header := { } } } }}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.630025", component: "855", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort from mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"3\" } } }, aspHttp := { { httpMessage := { method := \"GET\", url := \"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/channels\", body := \"\", contentType := \"\", statusCode := \"\", header := { } } } }} id 1" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.630090", component: "855", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort succeeded, message from mtc: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"3\" } } }, aspHttp := { { httpMessage := { method := \"GET\", url := \"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/channels\", body := \"\", contentType := \"\", statusCode := \"\", header := { } } } }} id 1" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.630127", component: "855", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "67", function_name: "function:httpNodeRun", message: " Message with id 1 was extracted from the queue of httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.630138", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.630161", component: "855", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "68", function_name: "function:httpNodeRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.630389", component: "855", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "307", function_name: "function:clearHTTPClientPort", message: " Start timer timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.630414", component: "855", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "313", function_name: "function:clearHTTPClientPort", message: " Timeout timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.630479", component: "855", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Sent on clientPort to system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.631187", component: "855", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Message enqueued on clientPort from system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.631226", component: "855", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "243", function_name: "function:sendHTTPClientRequest", message: " Start timer timerWaitForHTTPOpenConnection: 2 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.631256", component: "855", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Receive operation on port clientPort succeeded, message from system(" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.631275", component: "855", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Message with id 1 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.631293", component: "855", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "246", function_name: "function:sendHTTPClientRequest", message: " Stop timer timerWaitForHTTPOpenConnection: 2 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.631387", component: "855", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on clientPort to system @HTTPmsg_Types.HTTPMessage : { request := { client_id := 9, method := \"GET\", uri := \"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/channels\", version_major := 1, version_minor := 1, header := { { header_name := \"Host\", header_value := \"142.133.142.3\" }, { header_name := \"Content-Length\", header_value := \"0\" } }, body := \"\" }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.631519", component: "855", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "189", function_name: "function:receiveAnyHTTPClientResponse", message: " Start timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.653797", component: "855", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on clientPort from system @HTTPmsg_Types.HTTPMessage : { response := { client_id := 9, version_major := 1, version_minor := 1, statuscode := 200, statustext := \"OK\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:28 GMT\" } }, body := \"{\\n \\\"events\\\": {\\n \\\"list\\\": [ {\\n \\\"eventObject\\\": {\\n \\\"@type\\\": \\\"message\\\",\\n \\\"from\\\": \\\"sip:10014002006@ericsson.se\\\",\\n \\\"contentType\\\": \\\"text/plain\\\",\\n \\\"reportRequest\\\": [ \\\"Delivered\\\" ],\\n \\\"msgId\\\": \\\"XKDf1g9a\\\",\\n \\\"dateTime\\\": \\\"2014-10-24T22:34:29+00:00\\\",\\n \\\"body\\\": \\\"Body message 10014002006 to 10014002007\\\",\\n \\\"type\\\": \\\"session-message\\\"\\n }\\n } ]\\n }\\n}\" }} id 2" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.653939", component: "855", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port clientPort succeeded, message from system(): @HTTPmsg_Types.HTTPMessage : { response := { client_id := 9, version_major := 1, version_minor := 1, statuscode := 200, statustext := \"OK\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:28 GMT\" } }, body := \"{\\n \\\"events\\\": {\\n \\\"list\\\": [ {\\n \\\"eventObject\\\": {\\n \\\"@type\\\": \\\"message\\\",\\n \\\"from\\\": \\\"sip:10014002006@ericsson.se\\\",\\n \\\"contentType\\\": \\\"text/plain\\\",\\n \\\"reportRequest\\\": [ \\\"Delivered\\\" ],\\n \\\"msgId\\\": \\\"XKDf1g9a\\\",\\n \\\"dateTime\\\": \\\"2014-10-24T22:34:29+00:00\\\",\\n \\\"body\\\": \\\"Body message 10014002006 to 10014002007\\\",\\n \\\"type\\\": \\\"session-message\\\"\\n }\\n } ]\\n }\\n}\" }} id 2" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.653974", component: "855", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "193", function_name: "function:receiveAnyHTTPClientResponse", message: " Message with id 2 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.653995", component: "855", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "194", function_name: "function:receiveAnyHTTPClientResponse", message: " Stop timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.654233", component: "855", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort to mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\n \\\"events\\\": {\\n \\\"list\\\": [ {\\n \\\"eventObject\\\": {\\n \\\"@type\\\": \\\"message\\\",\\n \\\"from\\\": \\\"sip:10014002006@ericsson.se\\\",\\n \\\"contentType\\\": \\\"text/plain\\\",\\n \\\"reportRequest\\\": [ \\\"Delivered\\\" ],\\n \\\"msgId\\\": \\\"XKDf1g9a\\\",\\n \\\"dateTime\\\": \\\"2014-10-24T22:34:29+00:00\\\",\\n \\\"body\\\": \\\"Body message 10014002006 to 10014002007\\\",\\n \\\"type\\\": \\\"session-message\\\"\\n }\\n } ]\\n }\\n}\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:28 GMT\" } } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.654311", component: "855", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "62", function_name: "function:httpNodeRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.654448", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort[4] from 855 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\n \\\"events\\\": {\\n \\\"list\\\": [ {\\n \\\"eventObject\\\": {\\n \\\"@type\\\": \\\"message\\\",\\n \\\"from\\\": \\\"sip:10014002006@ericsson.se\\\",\\n \\\"contentType\\\": \\\"text/plain\\\",\\n \\\"reportRequest\\\": [ \\\"Delivered\\\" ],\\n \\\"msgId\\\": \\\"XKDf1g9a\\\",\\n \\\"dateTime\\\": \\\"2014-10-24T22:34:29+00:00\\\",\\n \\\"body\\\": \\\"Body message 10014002006 to 10014002007\\\",\\n \\\"type\\\": \\\"session-message\\\"\\n }\\n } ]\\n }\\n}\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:28 GMT\" } } } } }} id 2" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.654585", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort[4] succeeded, message from 855: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\n \\\"events\\\": {\\n \\\"list\\\": [ {\\n \\\"eventObject\\\": {\\n \\\"@type\\\": \\\"message\\\",\\n \\\"from\\\": \\\"sip:10014002006@ericsson.se\\\",\\n \\\"contentType\\\": \\\"text/plain\\\",\\n \\\"reportRequest\\\": [ \\\"Delivered\\\" ],\\n \\\"msgId\\\": \\\"XKDf1g9a\\\",\\n \\\"dateTime\\\": \\\"2014-10-24T22:34:29+00:00\\\",\\n \\\"body\\\": \\\"Body message 10014002006 to 10014002007\\\",\\n \\\"type\\\": \\\"session-message\\\"\\n }\\n } ]\\n }\\n}\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:28 GMT\" } } } } }} id 2" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.654623", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Message with id 2 was extracted from the queue of httpNodeInternalPort[4]" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.654645", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "241", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.659691", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.669761", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "286", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.669985", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "202", function_name: "function:sendInternalMessage", message: " Sent on sipInternalPort[0] to 849 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.670201", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "78", function_name: "function:sipRun", message: " Message enqueued on sipInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.670317", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Receive operation on port sipInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.670328", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.670352", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Message with id 15 was extracted from the queue of sipInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.670371", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "80", function_name: "function:sipRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.670548", component: "849", peer_component: "BaseSipClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "320", function_name: "function:generalReceiveSip", message: " Start timer timerWaitForSipMessage: 15 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.708424", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on sipClientPort from system @IPL4asp_Types.ASP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msgsip:10014002006@ericsson.se SIP/2.0\\r\\nContent-Length: 570\\r\\nTo: <sip:10014002006@ericsson.se>\\r\\nCseq: 1 MESSAGE\\r\\nUser-Agent: H2S\\r\\nContribution-Id: CHAT:10014002007@ericsson.se\\r\\nAccept-Contact: *;+g.3gpp.icsi-ref=\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg\\\"\\r\\nMax-Forwards: 69\\r\\nP-Preferred-Service: urn:urn-7:3gpp-service.ims.icsi.oma.cpm.msg\\r\\nVia: SIP/2.0/TCP 142.133.142.3:5060;branch=z9hG4bKf1f97b1c0440d6054a7bb68defdbfae1d5c1\\r\\nContent-Type: message/cpim\\r\\nRoute: <sip:142.133.150.169:26720;lr;transport=TCP>\\r\\nFrom: <sip:10014002007@ericsson.se>;tag=i1o495fd-9\\r\\nCall-Id: 142.133.142.3_7_369017631180147225\\r\\nP-Preferred-Identity: sip:10014002007@ericsson.se\\r\\n\\r\\nTo: <sip:10014002006@ericsson.se>\\r\\nFrom: <sip:10014002007@ericsson.se>\\r\\nDateTime: 2014-10-24T22:34:29+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: imdn-T5m55e1i\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>XKDf1g9a</message-id><datetime>2014-10-24T22:34:29+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\")} id 9" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.709258", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Incoming message was mapped to @IPL4_demo_types.SIP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msg := { request := { requestLine := { method := MESSAGE_E (6), requestUri := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := { fieldName := ACCEPT_CONTACT_E (1), ac_values := { { { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg\\\"\" } } } }, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_7_369017631180147225\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 570 }, contentType := { fieldName := CONTENT_TYPE_E (19), mediaType := \"message/cpim\" }, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"MESSAGE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o495fd-9\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := { fieldName := P_PREFERRED_ID_E (55), ids := { { addrSpecUnion := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } } }, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := { fieldName := ROUTE_E (84), routeBody := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"lr\", paramValue := omit }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } }, rrParam := omit } } }, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f97b1c0440d6054a7bb68defdbfae1d5c1\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := { { headerName := \"Contribution-Id\", headerValue := \"CHAT:10014002007@ericsson.se\" }, { headerName := \"P-Preferred-Service\", headerValue := \"urn:urn-7:3gpp-service.ims.icsi.oma.cpm.msg\" } }, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := \"To: <sip:10014002006@ericsson.se>\\r\\nFrom: <sip:10014002007@ericsson.se>\\r\\nDateTime: 2014-10-24T22:34:29+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: imdn-T5m55e1i\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>XKDf1g9a</message-id><datetime>2014-10-24T22:34:29+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\", payload := omit } }} id 9" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.709648", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port sipClientPort succeeded, message from system(): @IPL4_demo_types.SIP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msg := { request := { requestLine := { method := MESSAGE_E (6), requestUri := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := { fieldName := ACCEPT_CONTACT_E (1), ac_values := { { { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg\\\"\" } } } }, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_7_369017631180147225\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 570 }, contentType := { fieldName := CONTENT_TYPE_E (19), mediaType := \"message/cpim\" }, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"MESSAGE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o495fd-9\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := { fieldName := P_PREFERRED_ID_E (55), ids := { { addrSpecUnion := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } } }, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := { fieldName := ROUTE_E (84), routeBody := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"lr\", paramValue := omit }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } }, rrParam := omit } } }, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f97b1c0440d6054a7bb68defdbfae1d5c1\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := { { headerName := \"Contribution-Id\", headerValue := \"CHAT:10014002007@ericsson.se\" }, { headerName := \"P-Preferred-Service\", headerValue := \"urn:urn-7:3gpp-service.ims.icsi.oma.cpm.msg\" } }, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := \"To: <sip:10014002006@ericsson.se>\\r\\nFrom: <sip:10014002007@ericsson.se>\\r\\nDateTime: 2014-10-24T22:34:29+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: imdn-T5m55e1i\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>XKDf1g9a</message-id><datetime>2014-10-24T22:34:29+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\", payload := omit } }} id 9" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.709802", component: "849", peer_component: "BaseSipClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "345", function_name: "function:generalReceiveSip", message: " Message with id 9 was extracted from the queue of sipClientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.709834", component: "849", peer_component: "BaseSipClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "346", function_name: "function:generalReceiveSip", message: " Stop timer timerWaitForSipMessage: 15 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.717354", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on sipInternalPort to mtc @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspRequest := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, request := { requestLine := { method := MESSAGE_E (6), requestUri := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := { fieldName := ACCEPT_CONTACT_E (1), ac_values := { { { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg\\\"\" } } } }, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_7_369017631180147225\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 570 }, contentType := { fieldName := CONTENT_TYPE_E (19), mediaType := \"message/cpim\" }, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"MESSAGE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o495fd-9\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := { fieldName := P_PREFERRED_ID_E (55), ids := { { addrSpecUnion := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } } }, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := { fieldName := ROUTE_E (84), routeBody := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"lr\", paramValue := omit }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } }, rrParam := omit } } }, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f97b1c0440d6054a7bb68defdbfae1d5c1\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := { { headerName := \"Contribution-Id\", headerValue := \"CHAT:10014002007@ericsson.se\" }, { headerName := \"P-Preferred-Service\", headerValue := \"urn:urn-7:3gpp-service.ims.icsi.oma.cpm.msg\" } }, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := { fieldName := CONTRIBUTION_ID_E (117), name_value := \"CHAT:10014002007@ericsson.se\" }, conversation_id := omit, x_correlation_id := omit, p_preferred_service := { fieldName := P_PREFERRED_SERVICE_E (126), name_value := \"urn:urn-7:3gpp-service.ims.icsi.oma.cpm.msg\" }, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := \"To: <sip:10014002006@ericsson.se>\\r\\nFrom: <sip:10014002007@ericsson.se>\\r\\nDateTime: 2014-10-24T22:34:29+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: imdn-T5m55e1i\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>XKDf1g9a</message-id><datetime>2014-10-24T22:34:29+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\", payload := omit } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.717665", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "74", function_name: "function:sipRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.717965", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on sipInternalPort[0] from 849 @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspRequest := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, request := { requestLine := { method := MESSAGE_E (6), requestUri := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := { fieldName := ACCEPT_CONTACT_E (1), ac_values := { { { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg\\\"\" } } } }, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_7_369017631180147225\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 570 }, contentType := { fieldName := CONTENT_TYPE_E (19), mediaType := \"message/cpim\" }, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"MESSAGE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o495fd-9\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := { fieldName := P_PREFERRED_ID_E (55), ids := { { addrSpecUnion := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } } }, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := { fieldName := ROUTE_E (84), routeBody := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"lr\", paramValue := omit }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } }, rrParam := omit } } }, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f97b1c0440d6054a7bb68defdbfae1d5c1\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := { { headerName := \"Contribution-Id\", headerValue := \"CHAT:10014002007@ericsson.se\" }, { headerName := \"P-Preferred-Service\", headerValue := \"urn:urn-7:3gpp-service.ims.icsi.oma.cpm.msg\" } }, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := { fieldName := CONTRIBUTION_ID_E (117), name_value := \"CHAT:10014002007@ericsson.se\" }, conversation_id := omit, x_correlation_id := omit, p_preferred_service := { fieldName := P_PREFERRED_SERVICE_E (126), name_value := \"urn:urn-7:3gpp-service.ims.icsi.oma.cpm.msg\" }, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := \"To: <sip:10014002006@ericsson.se>\\r\\nFrom: <sip:10014002007@ericsson.se>\\r\\nDateTime: 2014-10-24T22:34:29+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: imdn-T5m55e1i\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>XKDf1g9a</message-id><datetime>2014-10-24T22:34:29+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\", payload := omit } } } }} id 16" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.718238", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port sipInternalPort[0] succeeded, message from 849: @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspRequest := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, request := { requestLine := { method := MESSAGE_E (6), requestUri := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := { fieldName := ACCEPT_CONTACT_E (1), ac_values := { { { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg\\\"\" } } } }, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_7_369017631180147225\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 570 }, contentType := { fieldName := CONTENT_TYPE_E (19), mediaType := \"message/cpim\" }, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"MESSAGE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o495fd-9\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := { fieldName := P_PREFERRED_ID_E (55), ids := { { addrSpecUnion := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } } }, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := { fieldName := ROUTE_E (84), routeBody := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"lr\", paramValue := omit }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } }, rrParam := omit } } }, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f97b1c0440d6054a7bb68defdbfae1d5c1\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := { { headerName := \"Contribution-Id\", headerValue := \"CHAT:10014002007@ericsson.se\" }, { headerName := \"P-Preferred-Service\", headerValue := \"urn:urn-7:3gpp-service.ims.icsi.oma.cpm.msg\" } }, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := { fieldName := CONTRIBUTION_ID_E (117), name_value := \"CHAT:10014002007@ericsson.se\" }, conversation_id := omit, x_correlation_id := omit, p_preferred_service := { fieldName := P_PREFERRED_SERVICE_E (126), name_value := \"urn:urn-7:3gpp-service.ims.icsi.oma.cpm.msg\" }, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := \"To: <sip:10014002006@ericsson.se>\\r\\nFrom: <sip:10014002007@ericsson.se>\\r\\nDateTime: 2014-10-24T22:34:29+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: imdn-T5m55e1i\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>XKDf1g9a</message-id><datetime>2014-10-24T22:34:29+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\", payload := omit } } } }} id 16" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.718340", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Message with id 16 was extracted from the queue of sipInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.718364", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "255", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.722887", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.733534", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "286", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.734354", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on sipInternalPort[0] to 849 @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMMAND_SIP_SEND_SIP_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"4\" }, { parameterName := \"SUBSCRIBER\", parameterValue := \"11\" } } }, aspsSip := { { aspRequest := { addr := omit, request := { requestLine := { method := MESSAGE_E (6), requestUri := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := { { id := \"csid\", paramValue := \"8cf72980-08e3-4819-943d-f7260f67318d\" } }, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := { fieldName := ACCEPT_CONTACT_E (1), ac_values := { { { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg\\\"\" } } } }, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"callId_33061\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := { fieldName := CONTENT_TYPE_E (19), mediaType := \"message/cpim\" }, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"MESSAGE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"from_40451\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := { fieldName := P_ASSERTED_ID_E (43), ids := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } } } }, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := omit, portField := omit }, viaParams := { { id := \"branch\", paramValue := \"via_69094\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := { fieldName := CONTRIBUTION_ID_E (117), name_value := \"CHAT:10014002007@ericsson.se\" }, conversation_id := omit, x_correlation_id := omit, p_preferred_service := { fieldName := P_PREFERRED_SERVICE_E (126), name_value := \"urn:urn-7:3gpp-service.ims.icsi.oma.cpm.msg\" }, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := \"To: <sip:10014002006@ericsson.se>\\r\\nFrom: <sip:10014002007@ericsson.se>\\r\\nDateTime: 2014-10-24T22:34:29+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: imdn-T5m55e1i\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>XKDf1g9a</message-id><datetime>2014-10-24T22:34:29+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\", payload := omit } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.734663", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.734865", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on sipInternalPort from mtc @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMMAND_SIP_SEND_SIP_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"4\" }, { parameterName := \"SUBSCRIBER\", parameterValue := \"11\" } } }, aspsSip := { { aspRequest := { addr := omit, request := { requestLine := { method := MESSAGE_E (6), requestUri := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := { { id := \"csid\", paramValue := \"8cf72980-08e3-4819-943d-f7260f67318d\" } }, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := { fieldName := ACCEPT_CONTACT_E (1), ac_values := { { { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg\\\"\" } } } }, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"callId_33061\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := { fieldName := CONTENT_TYPE_E (19), mediaType := \"message/cpim\" }, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"MESSAGE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"from_40451\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := { fieldName := P_ASSERTED_ID_E (43), ids := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } } } }, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := omit, portField := omit }, viaParams := { { id := \"branch\", paramValue := \"via_69094\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := { fieldName := CONTRIBUTION_ID_E (117), name_value := \"CHAT:10014002007@ericsson.se\" }, conversation_id := omit, x_correlation_id := omit, p_preferred_service := { fieldName := P_PREFERRED_SERVICE_E (126), name_value := \"urn:urn-7:3gpp-service.ims.icsi.oma.cpm.msg\" }, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := \"To: <sip:10014002006@ericsson.se>\\r\\nFrom: <sip:10014002007@ericsson.se>\\r\\nDateTime: 2014-10-24T22:34:29+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: imdn-T5m55e1i\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>XKDf1g9a</message-id><datetime>2014-10-24T22:34:29+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\", payload := omit } } } }} id 16" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.735117", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port sipInternalPort succeeded, message from mtc: @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMMAND_SIP_SEND_SIP_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"4\" }, { parameterName := \"SUBSCRIBER\", parameterValue := \"11\" } } }, aspsSip := { { aspRequest := { addr := omit, request := { requestLine := { method := MESSAGE_E (6), requestUri := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := { { id := \"csid\", paramValue := \"8cf72980-08e3-4819-943d-f7260f67318d\" } }, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := { fieldName := ACCEPT_CONTACT_E (1), ac_values := { { { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg\\\"\" } } } }, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"callId_33061\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := { fieldName := CONTENT_TYPE_E (19), mediaType := \"message/cpim\" }, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"MESSAGE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"from_40451\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := { fieldName := P_ASSERTED_ID_E (43), ids := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } } } }, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := omit, portField := omit }, viaParams := { { id := \"branch\", paramValue := \"via_69094\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := { fieldName := CONTRIBUTION_ID_E (117), name_value := \"CHAT:10014002007@ericsson.se\" }, conversation_id := omit, x_correlation_id := omit, p_preferred_service := { fieldName := P_PREFERRED_SERVICE_E (126), name_value := \"urn:urn-7:3gpp-service.ims.icsi.oma.cpm.msg\" }, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := \"To: <sip:10014002006@ericsson.se>\\r\\nFrom: <sip:10014002007@ericsson.se>\\r\\nDateTime: 2014-10-24T22:34:29+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: imdn-T5m55e1i\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>XKDf1g9a</message-id><datetime>2014-10-24T22:34:29+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\", payload := omit } } } }} id 16" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.735207", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Message with id 16 was extracted from the queue of sipInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.735226", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "80", function_name: "function:sipRun", message: " Stop timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.735814", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on sipClientPort to system @IPL4_demo_types.SIP_SendTo : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, proto := { tcp := { } }, msg := { raw := \"MESSAGE sip:10014002006@ericsson.se;csid=8cf72980-08e3-4819-943d-f7260f67318d SIP/2.0\\r\\nAccept-Contact:*;+g.3gpp.icsi-ref=\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg\\\"\\r\\nCall-ID:callId_33061\\r\\nContent-Length:570\\r\\nContent-Type:message/cpim\\r\\nCSeq:1 MESSAGE\\r\\nFrom:<sip:10014002007@ericsson.se>;tag=from_40451\\r\\nMax-Forwards:69\\r\\nContribution-Id:CHAT:10014002007@ericsson.se\\r\\nP-Preferred-Service:urn:urn-7:3gpp-service.ims.icsi.oma.cpm.msg\\r\\nP-Asserted-Identity:<sip:10014002007@ericsson.se>\\r\\nTo:<sip:10014002006@ericsson.se>\\r\\nUser-Agent: H2S\\r\\nVia:SIP/2.0/TCP 142.133.150.169:26720;branch=via_69094\\r\\n\\r\\nTo: <sip:10014002006@ericsson.se>\\r\\nFrom: <sip:10014002007@ericsson.se>\\r\\nDateTime: 2014-10-24T22:34:29+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: imdn-T5m55e1i\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>XKDf1g9a</message-id><datetime>2014-10-24T22:34:29+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\" }}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.736034", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Outgoing message was mapped to @IPL4asp_Types.ASP_SendTo : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, proto := { tcp := { } }, msgsip:10014002006@ericsson.se;csid=8cf72980-08e3-4819-943d-f7260f67318d SIP/2.0\\r\\nAccept-Contact:*;+g.3gpp.icsi-ref=\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg\\\"\\r\\nCall-ID:callId_33061\\r\\nContent-Length:570\\r\\nContent-Type:message/cpim\\r\\nCSeq:1 MESSAGE\\r\\nFrom:<sip:10014002007@ericsson.se>;tag=from_40451\\r\\nMax-Forwards:69\\r\\nContribution-Id:CHAT:10014002007@ericsson.se\\r\\nP-Preferred-Service:urn:urn-7:3gpp-service.ims.icsi.oma.cpm.msg\\r\\nP-Asserted-Identity:<sip:10014002007@ericsson.se>\\r\\nTo:<sip:10014002006@ericsson.se>\\r\\nUser-Agent: H2S\\r\\nVia:SIP/2.0/TCP 142.133.150.169:26720;branch=via_69094\\r\\n\\r\\nTo: <sip:10014002006@ericsson.se>\\r\\nFrom: <sip:10014002007@ericsson.se>\\r\\nDateTime: 2014-10-24T22:34:29+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: imdn-T5m55e1i\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>XKDf1g9a</message-id><datetime>2014-10-24T22:34:29+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\")}" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.736241", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "388", function_name: "function:processCommand", message: " Sent on sipInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.736313", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "74", function_name: "function:sipRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.736354", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "253", function_name: "function:receiveInternalMessage", message: " Message enqueued on sipInternalPort[0] from 849 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.736438", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Receive operation on port sipInternalPort[0] succeeded, message from 849: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.736472", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Message with id 17 was extracted from the queue of sipInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.736509", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "255", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.737365", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.753812", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "286", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.754052", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "202", function_name: "function:sendInternalMessage", message: " Sent on sipInternalPort[0] to 849 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.754224", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "78", function_name: "function:sipRun", message: " Message enqueued on sipInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.754316", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Receive operation on port sipInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.754345", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Message with id 17 was extracted from the queue of sipInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.754358", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.754362", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "80", function_name: "function:sipRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.754505", component: "849", peer_component: "BaseSipClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "320", function_name: "function:generalReceiveSip", message: " Start timer timerWaitForSipMessage: 15 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.828018", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on sipClientPort from system @IPL4asp_Types.ASP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msgr\\nContribution-Id: CHAT:10014002007@ericsson.se\\r\\nContent-Length: 0\\r\\nTo: <sip:10014002006@ericsson.se>;tag=i1o495iz-a\\r\\nCseq: 1 MESSAGE\\r\\nVia: SIP/2.0/TCP 142.133.150.169:26720;branch=via_69094\\r\\nCall-Id: callId_33061\\r\\nFrom: <sip:10014002007@ericsson.se>;tag=from_40451\\r\\nServer: H2S\\r\\n\\r\\n\")} id 10" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.828507", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Incoming message was mapped to @IPL4_demo_types.SIP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msg := { response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 200, reasonPhrase := \"OK\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"callId_33061\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"MESSAGE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"from_40451\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := { fieldName := SERVER_E (90), serverBody := { \"H2S\" } }, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"i1o495iz-a\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.150.169\", portField := 26720 }, viaParams := { { id := \"branch\", paramValue := \"via_69094\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := { { headerName := \"Contribution-Id\", headerValue := \"CHAT:10014002007@ericsson.se\" } }, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } }} id 10" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.828782", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port sipClientPort succeeded, message from system(): @IPL4_demo_types.SIP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msg := { response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 200, reasonPhrase := \"OK\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"callId_33061\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"MESSAGE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"from_40451\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := { fieldName := SERVER_E (90), serverBody := { \"H2S\" } }, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"i1o495iz-a\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.150.169\", portField := 26720 }, viaParams := { { id := \"branch\", paramValue := \"via_69094\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := { { headerName := \"Contribution-Id\", headerValue := \"CHAT:10014002007@ericsson.se\" } }, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } }} id 10" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.828878", component: "849", peer_component: "BaseSipClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "325", function_name: "function:generalReceiveSip", message: " Message with id 10 was extracted from the queue of sipClientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.828907", component: "849", peer_component: "BaseSipClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "326", function_name: "function:generalReceiveSip", message: " Stop timer timerWaitForSipMessage: 15 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.832040", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on sipInternalPort to mtc @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspResponse := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 200, reasonPhrase := \"OK\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"callId_33061\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"MESSAGE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"from_40451\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := { fieldName := SERVER_E (90), serverBody := { \"H2S\" } }, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"i1o495iz-a\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.150.169\", portField := 26720 }, viaParams := { { id := \"branch\", paramValue := \"via_69094\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := { { headerName := \"Contribution-Id\", headerValue := \"CHAT:10014002007@ericsson.se\" } }, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := { fieldName := CONTRIBUTION_ID_E (117), name_value := \"CHAT:10014002007@ericsson.se\" }, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.832308", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "74", function_name: "function:sipRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.832539", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on sipInternalPort[0] from 849 @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspResponse := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 200, reasonPhrase := \"OK\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"callId_33061\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"MESSAGE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"from_40451\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := { fieldName := SERVER_E (90), serverBody := { \"H2S\" } }, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"i1o495iz-a\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.150.169\", portField := 26720 }, viaParams := { { id := \"branch\", paramValue := \"via_69094\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := { { headerName := \"Contribution-Id\", headerValue := \"CHAT:10014002007@ericsson.se\" } }, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := { fieldName := CONTRIBUTION_ID_E (117), name_value := \"CHAT:10014002007@ericsson.se\" }, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 18" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.832776", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port sipInternalPort[0] succeeded, message from 849: @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspResponse := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 200, reasonPhrase := \"OK\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"callId_33061\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"MESSAGE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"from_40451\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := { fieldName := SERVER_E (90), serverBody := { \"H2S\" } }, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"i1o495iz-a\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.150.169\", portField := 26720 }, viaParams := { { id := \"branch\", paramValue := \"via_69094\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := { { headerName := \"Contribution-Id\", headerValue := \"CHAT:10014002007@ericsson.se\" } }, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := { fieldName := CONTRIBUTION_ID_E (117), name_value := \"CHAT:10014002007@ericsson.se\" }, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 18" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.832884", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Message with id 18 was extracted from the queue of sipInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.832926", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "255", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.835828", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.845891", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "286", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.847319", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on sipInternalPort[0] to 849 @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMMAND_SIP_SEND_SIP_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"4\" }, { parameterName := \"SUBSCRIBER\", parameterValue := \"11\" } } }, aspsSip := { { aspResponse := { addr := omit, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 200, reasonPhrase := \"OK\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_7_369017631180147225\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := { fieldName := CONTENT_TYPE_E (19), mediaType := \"application/sdp\" }, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"MESSAGE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o495fd-9\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := { fieldName := REQUIRE_E (80), optionsTags := { \"timer\" } }, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := { fieldName := SESSION_EXPIRES_E (88), deltaSec := \"3600\", se_params := { { id := \"refresher\", paramValue := \"uac\" } } }, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := { fieldName := SUPPORTED_E (96), optionsTags := { \"timer\" } }, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"from_87529\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f97b1c0440d6054a7bb68defdbfae1d5c1\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := { fieldName := CONTRIBUTION_ID_E (117), name_value := \"CHAT:10014002007@ericsson.se\" }, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.847772", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.847935", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on sipInternalPort from mtc @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMMAND_SIP_SEND_SIP_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"4\" }, { parameterName := \"SUBSCRIBER\", parameterValue := \"11\" } } }, aspsSip := { { aspResponse := { addr := omit, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 200, reasonPhrase := \"OK\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_7_369017631180147225\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := { fieldName := CONTENT_TYPE_E (19), mediaType := \"application/sdp\" }, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"MESSAGE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o495fd-9\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := { fieldName := REQUIRE_E (80), optionsTags := { \"timer\" } }, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := { fieldName := SESSION_EXPIRES_E (88), deltaSec := \"3600\", se_params := { { id := \"refresher\", paramValue := \"uac\" } } }, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := { fieldName := SUPPORTED_E (96), optionsTags := { \"timer\" } }, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"from_87529\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f97b1c0440d6054a7bb68defdbfae1d5c1\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := { fieldName := CONTRIBUTION_ID_E (117), name_value := \"CHAT:10014002007@ericsson.se\" }, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 18" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.848212", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port sipInternalPort succeeded, message from mtc: @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMMAND_SIP_SEND_SIP_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"4\" }, { parameterName := \"SUBSCRIBER\", parameterValue := \"11\" } } }, aspsSip := { { aspResponse := { addr := omit, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 200, reasonPhrase := \"OK\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_7_369017631180147225\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := { fieldName := CONTENT_TYPE_E (19), mediaType := \"application/sdp\" }, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"MESSAGE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o495fd-9\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := { fieldName := REQUIRE_E (80), optionsTags := { \"timer\" } }, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := { fieldName := SESSION_EXPIRES_E (88), deltaSec := \"3600\", se_params := { { id := \"refresher\", paramValue := \"uac\" } } }, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := { fieldName := SUPPORTED_E (96), optionsTags := { \"timer\" } }, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"from_87529\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f97b1c0440d6054a7bb68defdbfae1d5c1\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := { fieldName := CONTRIBUTION_ID_E (117), name_value := \"CHAT:10014002007@ericsson.se\" }, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 18" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.848333", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Message with id 18 was extracted from the queue of sipInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.848379", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "80", function_name: "function:sipRun", message: " Stop timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.848860", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on sipClientPort to system @IPL4_demo_types.SIP_SendTo : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, proto := { tcp := { } }, msg := { raw := \"SIP/2.0 200 OK\\r\\nCall-ID:142.133.142.3_7_369017631180147225\\r\\nContent-Length:0\\r\\nContent-Type:application/sdp\\r\\nCSeq:1 MESSAGE\\r\\nFrom:<sip:10014002007@ericsson.se>;tag=i1o495fd-9\\r\\nMax-Forwards:69\\r\\nContribution-Id:CHAT:10014002007@ericsson.se\\r\\nRequire:timer\\r\\nSession-Expires:3600;refresher=uac\\r\\nSupported:timer\\r\\nTo:<sip:10014002006@ericsson.se>;tag=from_87529\\r\\nVia:SIP/2.0/TCP 142.133.142.3:5060;branch=z9hG4bKf1f97b1c0440d6054a7bb68defdbfae1d5c1\\r\\n\\r\\n\" }}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.848978", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Outgoing message was mapped to @IPL4asp_Types.ASP_SendTo : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, proto := { tcp := { } }, msgr\\nCall-ID:142.133.142.3_7_369017631180147225\\r\\nContent-Length:0\\r\\nContent-Type:application/sdp\\r\\nCSeq:1 MESSAGE\\r\\nFrom:<sip:10014002007@ericsson.se>;tag=i1o495fd-9\\r\\nMax-Forwards:69\\r\\nContribution-Id:CHAT:10014002007@ericsson.se\\r\\nRequire:timer\\r\\nSession-Expires:3600;refresher=uac\\r\\nSupported:timer\\r\\nTo:<sip:10014002006@ericsson.se>;tag=from_87529\\r\\nVia:SIP/2.0/TCP 142.133.142.3:5060;branch=z9hG4bKf1f97b1c0440d6054a7bb68defdbfae1d5c1\\r\\n\\r\\n\")}" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.849153", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "388", function_name: "function:processCommand", message: " Sent on sipInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.849213", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "74", function_name: "function:sipRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.849249", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "253", function_name: "function:receiveInternalMessage", message: " Message enqueued on sipInternalPort[0] from 849 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.849307", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Receive operation on port sipInternalPort[0] succeeded, message from 849: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.849334", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Message with id 19 was extracted from the queue of sipInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.849356", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "255", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.854983", component: "856", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port clientPort was started." }
Simple DataFrame { time: "2014/Oct/24 18:34:29.855020", component: "856", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port serverPort was started." }
Simple DataFrame { time: "2014/Oct/24 18:34:29.855038", component: "856", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port httpNodeInternalPort was started." }
Simple DataFrame { time: "2014/Oct/24 18:34:29.855255", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 10 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.856806", component: "856", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "130", function_name: "function:httpNodeInitialize", message: " Port clientPort was mapped to system:clientPort[5]" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.857335", component: "856", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "133", function_name: "function:httpNodeInitialize", message: " Port serverPort was mapped to system:serverPort[5]" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.857971", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port httpNodeInternalPort[5] is waiting for connection from 856:httpNodeInternalPort on UNIX pathname /tmp/ttcn3-portconn-220b9c2a." }
Simple DataFrame { time: "2014/Oct/24 18:34:29.858092", component: "856", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "136", function_name: "function:httpNodeInitialize", message: " Port httpNodeInternalPort has established the connection with mtc:httpNodeInternalPort[5] using transport type UNIX" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.858166", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "239", function_name: "function:receiveInternalMessage", message: " Port httpNodeInternalPort[5] has accepted the connection from 856:httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.858483", component: "856", peer_component: "BaseHttpServerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "55", function_name: "function:openServerForListening", message: " Sent on serverPort to system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.858616", component: "856", peer_component: "BaseHttpServerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "55", function_name: "function:openServerForListening", message: " Message enqueued on serverPort from system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.858652", component: "856", peer_component: "BaseHttpServerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "73", function_name: "function:receiveHTTPServerListenResult", message: " Start timer timerWaitForHTTPRequest: 5 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.858708", component: "856", peer_component: "BaseHttpServerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "77", function_name: "function:receiveHTTPServerListenResult", message: " Receive operation on port serverPort succeeded, message from system(" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.858733", component: "856", peer_component: "BaseHttpServerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "77", function_name: "function:receiveHTTPServerListenResult", message: " Message with id 1 was extracted from the queue of serverPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.858751", component: "856", peer_component: "BaseHttpServerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "78", function_name: "function:receiveHTTPServerListenResult", message: " Stop timer timerWaitForHTTPRequest: 5 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.858838", component: "856", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "141", function_name: "function:httpNodeInitialize", message: " Sent on httpNodeInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.858939", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "239", function_name: "function:receiveInternalMessage", message: " Message enqueued on httpNodeInternalPort[5] from 856 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.858993", component: "856", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "62", function_name: "function:httpNodeRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.859072", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Receive operation on port httpNodeInternalPort[5] succeeded, message from 856: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.859121", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Message with id 1 was extracted from the queue of httpNodeInternalPort[5]" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.859159", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "241", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 10 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.859586", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.869759", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "267", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.869993", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort[5] to 856 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"4\" } } }, aspHttp := { { httpMessage := { method := \"GET\", url := \"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/channels\", body := \"\", contentType := \"\", statusCode := \"\", header := { } } } }}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.870171", component: "856", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort from mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"4\" } } }, aspHttp := { { httpMessage := { method := \"GET\", url := \"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/channels\", body := \"\", contentType := \"\", statusCode := \"\", header := { } } } }} id 1" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.870243", component: "856", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort succeeded, message from mtc: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"4\" } } }, aspHttp := { { httpMessage := { method := \"GET\", url := \"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/channels\", body := \"\", contentType := \"\", statusCode := \"\", header := { } } } }} id 1" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.870273", component: "856", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "67", function_name: "function:httpNodeRun", message: " Message with id 1 was extracted from the queue of httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.870305", component: "856", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "68", function_name: "function:httpNodeRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.870384", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.870488", component: "856", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "307", function_name: "function:clearHTTPClientPort", message: " Start timer timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.870512", component: "856", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "313", function_name: "function:clearHTTPClientPort", message: " Timeout timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.870607", component: "856", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Sent on clientPort to system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.871408", component: "856", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Message enqueued on clientPort from system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.871445", component: "856", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "243", function_name: "function:sendHTTPClientRequest", message: " Start timer timerWaitForHTTPOpenConnection: 2 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.871476", component: "856", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Receive operation on port clientPort succeeded, message from system(" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.871495", component: "856", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Message with id 1 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.871512", component: "856", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "246", function_name: "function:sendHTTPClientRequest", message: " Stop timer timerWaitForHTTPOpenConnection: 2 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.871587", component: "856", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on clientPort to system @HTTPmsg_Types.HTTPMessage : { request := { client_id := 9, method := \"GET\", uri := \"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/channels\", version_major := 1, version_minor := 1, header := { { header_name := \"Host\", header_value := \"142.133.142.3\" }, { header_name := \"Content-Length\", header_value := \"0\" } }, body := \"\" }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.871711", component: "856", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "189", function_name: "function:receiveAnyHTTPClientResponse", message: " Start timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.903814", component: "856", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on clientPort from system @HTTPmsg_Types.HTTPMessage : { response := { client_id := 9, version_major := 1, version_minor := 1, statuscode := 200, statustext := \"OK\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:29 GMT\" } }, body := \"{\\n \\\"events\\\": {\\n \\\"list\\\": [ {\\n \\\"eventObject\\\": {\\n \\\"@type\\\": \\\"MessageStatusNotification\\\",\\n \\\"chatMessageStatusNotification\\\": {\\n \\\"link\\\": [ {\\n \\\"href\\\": \\\"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/chat/v1/sip:10014002006@ericsson.se/oneToOne/sip:10014002007@ericsson.se/adhoc\\\",\\n \\\"rel\\\": \\\"ChatSessionInformation\\\"\\n }, {\\n \\\"href\\\": \\\"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/chat/v1/sip:10014002006@ericsson.se/oneToOne/sip:10014002007@ericsson.se/adhoc/messages/XKDf1g9a\\\",\\n \\\"rel\\\": \\\"ChatMessage\\\"\\n } ],\\n \\\"status\\\": \\\"Delivered\\\"\\n },\\n \\\"originalDateTime\\\": \\\"2014-10-24T22:34:29+00:00\\\",\\n \\\"dateTime\\\": \\\"2014-10-24T22:34:29+00:00\\\"\\n }\\n } ]\\n }\\n}\" }} id 2" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.904079", component: "856", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port clientPort succeeded, message from system(): @HTTPmsg_Types.HTTPMessage : { response := { client_id := 9, version_major := 1, version_minor := 1, statuscode := 200, statustext := \"OK\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:29 GMT\" } }, body := \"{\\n \\\"events\\\": {\\n \\\"list\\\": [ {\\n \\\"eventObject\\\": {\\n \\\"@type\\\": \\\"MessageStatusNotification\\\",\\n \\\"chatMessageStatusNotification\\\": {\\n \\\"link\\\": [ {\\n \\\"href\\\": \\\"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/chat/v1/sip:10014002006@ericsson.se/oneToOne/sip:10014002007@ericsson.se/adhoc\\\",\\n \\\"rel\\\": \\\"ChatSessionInformation\\\"\\n }, {\\n \\\"href\\\": \\\"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/chat/v1/sip:10014002006@ericsson.se/oneToOne/sip:10014002007@ericsson.se/adhoc/messages/XKDf1g9a\\\",\\n \\\"rel\\\": \\\"ChatMessage\\\"\\n } ],\\n \\\"status\\\": \\\"Delivered\\\"\\n },\\n \\\"originalDateTime\\\": \\\"2014-10-24T22:34:29+00:00\\\",\\n \\\"dateTime\\\": \\\"2014-10-24T22:34:29+00:00\\\"\\n }\\n } ]\\n }\\n}\" }} id 2" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.904142", component: "856", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "193", function_name: "function:receiveAnyHTTPClientResponse", message: " Message with id 2 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.904175", component: "856", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "194", function_name: "function:receiveAnyHTTPClientResponse", message: " Stop timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.904431", component: "856", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort to mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\n \\\"events\\\": {\\n \\\"list\\\": [ {\\n \\\"eventObject\\\": {\\n \\\"@type\\\": \\\"MessageStatusNotification\\\",\\n \\\"chatMessageStatusNotification\\\": {\\n \\\"link\\\": [ {\\n \\\"href\\\": \\\"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/chat/v1/sip:10014002006@ericsson.se/oneToOne/sip:10014002007@ericsson.se/adhoc\\\",\\n \\\"rel\\\": \\\"ChatSessionInformation\\\"\\n }, {\\n \\\"href\\\": \\\"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/chat/v1/sip:10014002006@ericsson.se/oneToOne/sip:10014002007@ericsson.se/adhoc/messages/XKDf1g9a\\\",\\n \\\"rel\\\": \\\"ChatMessage\\\"\\n } ],\\n \\\"status\\\": \\\"Delivered\\\"\\n },\\n \\\"originalDateTime\\\": \\\"2014-10-24T22:34:29+00:00\\\",\\n \\\"dateTime\\\": \\\"2014-10-24T22:34:29+00:00\\\"\\n }\\n } ]\\n }\\n}\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:29 GMT\" } } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.904555", component: "856", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "62", function_name: "function:httpNodeRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.904722", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort[5] from 856 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\n \\\"events\\\": {\\n \\\"list\\\": [ {\\n \\\"eventObject\\\": {\\n \\\"@type\\\": \\\"MessageStatusNotification\\\",\\n \\\"chatMessageStatusNotification\\\": {\\n \\\"link\\\": [ {\\n \\\"href\\\": \\\"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/chat/v1/sip:10014002006@ericsson.se/oneToOne/sip:10014002007@ericsson.se/adhoc\\\",\\n \\\"rel\\\": \\\"ChatSessionInformation\\\"\\n }, {\\n \\\"href\\\": \\\"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/chat/v1/sip:10014002006@ericsson.se/oneToOne/sip:10014002007@ericsson.se/adhoc/messages/XKDf1g9a\\\",\\n \\\"rel\\\": \\\"ChatMessage\\\"\\n } ],\\n \\\"status\\\": \\\"Delivered\\\"\\n },\\n \\\"originalDateTime\\\": \\\"2014-10-24T22:34:29+00:00\\\",\\n \\\"dateTime\\\": \\\"2014-10-24T22:34:29+00:00\\\"\\n }\\n } ]\\n }\\n}\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:29 GMT\" } } } } }} id 2" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.904892", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort[5] succeeded, message from 856: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\n \\\"events\\\": {\\n \\\"list\\\": [ {\\n \\\"eventObject\\\": {\\n \\\"@type\\\": \\\"MessageStatusNotification\\\",\\n \\\"chatMessageStatusNotification\\\": {\\n \\\"link\\\": [ {\\n \\\"href\\\": \\\"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/chat/v1/sip:10014002006@ericsson.se/oneToOne/sip:10014002007@ericsson.se/adhoc\\\",\\n \\\"rel\\\": \\\"ChatSessionInformation\\\"\\n }, {\\n \\\"href\\\": \\\"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/chat/v1/sip:10014002006@ericsson.se/oneToOne/sip:10014002007@ericsson.se/adhoc/messages/XKDf1g9a\\\",\\n \\\"rel\\\": \\\"ChatMessage\\\"\\n } ],\\n \\\"status\\\": \\\"Delivered\\\"\\n },\\n \\\"originalDateTime\\\": \\\"2014-10-24T22:34:29+00:00\\\",\\n \\\"dateTime\\\": \\\"2014-10-24T22:34:29+00:00\\\"\\n }\\n } ]\\n }\\n}\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:29 GMT\" } } } } }} id 2" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.904934", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Message with id 2 was extracted from the queue of httpNodeInternalPort[5]" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.904965", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "241", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.907549", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.917586", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "267", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.917837", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort[3] to 854 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"5\" } } }, aspHttp := { { httpMessage := { method := \"POST\", url := \"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/message/send\", body := \"{ \\\"to\\\": \\\"sip:10014002006@ericsson.se\\\", \\\"body\\\": \\\"Body message 10014002007 to 10014002006\\\", \\\"contentType\\\": \\\"text/plain\\\"} \", contentType := \"application/json\", statusCode := \"\", header := { } } } }}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.918041", component: "854", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort from mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"5\" } } }, aspHttp := { { httpMessage := { method := \"POST\", url := \"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/message/send\", body := \"{ \\\"to\\\": \\\"sip:10014002006@ericsson.se\\\", \\\"body\\\": \\\"Body message 10014002007 to 10014002006\\\", \\\"contentType\\\": \\\"text/plain\\\"} \", contentType := \"application/json\", statusCode := \"\", header := { } } } }} id 2" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.918117", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.918154", component: "854", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort succeeded, message from mtc: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"5\" } } }, aspHttp := { { httpMessage := { method := \"POST\", url := \"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/message/send\", body := \"{ \\\"to\\\": \\\"sip:10014002006@ericsson.se\\\", \\\"body\\\": \\\"Body message 10014002007 to 10014002006\\\", \\\"contentType\\\": \\\"text/plain\\\"} \", contentType := \"application/json\", statusCode := \"\", header := { } } } }} id 2" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.918262", component: "854", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "67", function_name: "function:httpNodeRun", message: " Message with id 2 was extracted from the queue of httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.918294", component: "854", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "68", function_name: "function:httpNodeRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.918510", component: "854", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "307", function_name: "function:clearHTTPClientPort", message: " Start timer timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.918597", component: "854", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "313", function_name: "function:clearHTTPClientPort", message: " Timeout timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.918700", component: "854", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Sent on clientPort to system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.919609", component: "854", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Message enqueued on clientPort from system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.919657", component: "854", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "243", function_name: "function:sendHTTPClientRequest", message: " Start timer timerWaitForHTTPOpenConnection: 2 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.919781", component: "854", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Receive operation on port clientPort succeeded, message from system(" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.919815", component: "854", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Message with id 3 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.919890", component: "854", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "246", function_name: "function:sendHTTPClientRequest", message: " Stop timer timerWaitForHTTPOpenConnection: 2 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.919977", component: "854", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on clientPort to system @HTTPmsg_Types.HTTPMessage : { request := { client_id := 10, method := \"POST\", uri := \"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/message/send\", version_major := 1, version_minor := 1, header := { { header_name := \"Host\", header_value := \"142.133.142.3\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Content-Length\", header_value := \"119\" } }, body := \"{ \\\"to\\\": \\\"sip:10014002006@ericsson.se\\\", \\\"body\\\": \\\"Body message 10014002007 to 10014002006\\\", \\\"contentType\\\": \\\"text/plain\\\"} \" }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.920070", component: "854", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "189", function_name: "function:receiveAnyHTTPClientResponse", message: " Start timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.957675", component: "854", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on clientPort from system @HTTPmsg_Types.HTTPMessage : { response := { client_id := 10, version_major := 1, version_minor := 1, statuscode := 200, statustext := \"OK\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:29 GMT\" } }, body := \"{\\n \\\"msgId\\\": \\\"83VXAA1G\\\"\\n}\" }} id 4" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.957824", component: "854", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port clientPort succeeded, message from system(): @HTTPmsg_Types.HTTPMessage : { response := { client_id := 10, version_major := 1, version_minor := 1, statuscode := 200, statustext := \"OK\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:29 GMT\" } }, body := \"{\\n \\\"msgId\\\": \\\"83VXAA1G\\\"\\n}\" }} id 4" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.957858", component: "854", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "193", function_name: "function:receiveAnyHTTPClientResponse", message: " Message with id 4 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.957879", component: "854", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "194", function_name: "function:receiveAnyHTTPClientResponse", message: " Stop timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.958028", component: "854", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort to mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\n \\\"msgId\\\": \\\"83VXAA1G\\\"\\n}\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:29 GMT\" } } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.958139", component: "854", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "62", function_name: "function:httpNodeRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.958282", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort[3] from 854 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\n \\\"msgId\\\": \\\"83VXAA1G\\\"\\n}\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:29 GMT\" } } } } }} id 3" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.958420", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort[3] succeeded, message from 854: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\n \\\"msgId\\\": \\\"83VXAA1G\\\"\\n}\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:29 GMT\" } } } } }} id 3" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.958479", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Message with id 3 was extracted from the queue of httpNodeInternalPort[3]" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.958516", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "241", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.964648", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.977775", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "286", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.977944", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "202", function_name: "function:sendInternalMessage", message: " Sent on sipInternalPort[0] to 849 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.978064", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "78", function_name: "function:sipRun", message: " Message enqueued on sipInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.978136", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.978187", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Receive operation on port sipInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.978217", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Message with id 19 was extracted from the queue of sipInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.978231", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "80", function_name: "function:sipRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.978368", component: "849", peer_component: "BaseSipClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "320", function_name: "function:generalReceiveSip", message: " Start timer timerWaitForSipMessage: 15 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.980239", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on sipClientPort from system @IPL4asp_Types.ASP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msgr\\nContent-Length: 242\\r\\nSupported: timer\\r\\nContact: <sip:10014002007@142.133.142.3:5060;csid=2838ab5a-e194-4923-81af-c9f0a544f667;transport=TCP;fid=wcg-ft3_1>;+g.gsma.rcs.ipcall;+g.3gpp.icsi-ref=\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\";+g.3gpp.cs-voice;+g.3gpp.iari-ref=\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\";+g.oma.sip-im;video\\r\\nTo: <sip:10014002007@ericsson.se>;tag=i1o495cq-8\\r\\nCseq: 1 INVITE\\r\\nSession-Expires: 3600;refresher=uac\\r\\nServer: H2S\\r\\nContribution-Id: CHAT:10014002007@ericsson.se\\r\\nRequire: timer\\r\\nVia: SIP/2.0/TCP 142.133.150.169:26720;branch=via_13102\\r\\nContent-Type: application/sdp\\r\\nCall-Id: VAT_callId_79564\\r\\nFrom: <sip:10014002006@ericsson.se>;tag=from_50592\\r\\n\\r\\nv=0\\r\\no=10014002007 3623178869 3623178869 IN IP4 142.133.142.3\\r\\ns=-\\r\\nc=IN IP4 142.133.142.3\\r\\nt=0 0\\r\\nm=message 6060 TCP/MSRP *\\r\\na=accept-types:*\\r\\na=connection:new\\r\\na=sendrecv\\r\\na=setup:passive\\r\\na=path:msrp://142.133.142.3:6060/rFhqxHwhogoX;tcp\\r\\n\")} id 11" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.980744", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Incoming message was mapped to @IPL4_demo_types.SIP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msg := { response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 200, reasonPhrase := \"OK\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"VAT_callId_79564\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" }, { id := \"fid\", paramValue := \"wcg-ft3_1\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"video\", paramValue := omit } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 242 }, contentType := { fieldName := CONTENT_TYPE_E (19), mediaType := \"application/sdp\" }, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"INVITE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"from_50592\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := { fieldName := REQUIRE_E (80), optionsTags := { \"timer\" } }, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := { fieldName := SESSION_EXPIRES_E (88), deltaSec := \"3600\", se_params := { { id := \"refresher\", paramValue := \"uac\" } } }, session_id := omit, server := { fieldName := SERVER_E (90), serverBody := { \"H2S\" } }, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := { fieldName := SUPPORTED_E (96), optionsTags := { \"timer\" } }, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"i1o495cq-8\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.150.169\", portField := 26720 }, viaParams := { { id := \"branch\", paramValue := \"via_13102\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := { { headerName := \"Contribution-Id\", headerValue := \"CHAT:10014002007@ericsson.se\" } }, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := \"v=0\\r\\no=10014002007 3623178869 3623178869 IN IP4 142.133.142.3\\r\\ns=-\\r\\nc=IN IP4 142.133.142.3\\r\\nt=0 0\\r\\nm=message 6060 TCP/MSRP *\\r\\na=accept-types:*\\r\\na=connection:new\\r\\na=sendrecv\\r\\na=setup:passive\\r\\na=path:msrp://142.133.142.3:6060/rFhqxHwhogoX;tcp\\r\\n\", payload := omit } }} id 11" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.980989", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port sipClientPort succeeded, message from system(): @IPL4_demo_types.SIP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msg := { response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 200, reasonPhrase := \"OK\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"VAT_callId_79564\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" }, { id := \"fid\", paramValue := \"wcg-ft3_1\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"video\", paramValue := omit } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 242 }, contentType := { fieldName := CONTENT_TYPE_E (19), mediaType := \"application/sdp\" }, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"INVITE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"from_50592\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := { fieldName := REQUIRE_E (80), optionsTags := { \"timer\" } }, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := { fieldName := SESSION_EXPIRES_E (88), deltaSec := \"3600\", se_params := { { id := \"refresher\", paramValue := \"uac\" } } }, session_id := omit, server := { fieldName := SERVER_E (90), serverBody := { \"H2S\" } }, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := { fieldName := SUPPORTED_E (96), optionsTags := { \"timer\" } }, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"i1o495cq-8\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.150.169\", portField := 26720 }, viaParams := { { id := \"branch\", paramValue := \"via_13102\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := { { headerName := \"Contribution-Id\", headerValue := \"CHAT:10014002007@ericsson.se\" } }, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := \"v=0\\r\\no=10014002007 3623178869 3623178869 IN IP4 142.133.142.3\\r\\ns=-\\r\\nc=IN IP4 142.133.142.3\\r\\nt=0 0\\r\\nm=message 6060 TCP/MSRP *\\r\\na=accept-types:*\\r\\na=connection:new\\r\\na=sendrecv\\r\\na=setup:passive\\r\\na=path:msrp://142.133.142.3:6060/rFhqxHwhogoX;tcp\\r\\n\", payload := omit } }} id 11" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.981092", component: "849", peer_component: "BaseSipClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "325", function_name: "function:generalReceiveSip", message: " Message with id 11 was extracted from the queue of sipClientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.981117", component: "849", peer_component: "BaseSipClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "326", function_name: "function:generalReceiveSip", message: " Stop timer timerWaitForSipMessage: 15 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.983470", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on sipInternalPort to mtc @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspResponse := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 200, reasonPhrase := \"OK\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"VAT_callId_79564\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" }, { id := \"fid\", paramValue := \"wcg-ft3_1\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"video\", paramValue := omit } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 242 }, contentType := { fieldName := CONTENT_TYPE_E (19), mediaType := \"application/sdp\" }, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"INVITE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"from_50592\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := { fieldName := REQUIRE_E (80), optionsTags := { \"timer\" } }, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := { fieldName := SESSION_EXPIRES_E (88), deltaSec := \"3600\", se_params := { { id := \"refresher\", paramValue := \"uac\" } } }, session_id := omit, server := { fieldName := SERVER_E (90), serverBody := { \"H2S\" } }, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := { fieldName := SUPPORTED_E (96), optionsTags := { \"timer\" } }, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"i1o495cq-8\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.150.169\", portField := 26720 }, viaParams := { { id := \"branch\", paramValue := \"via_13102\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := { { headerName := \"Contribution-Id\", headerValue := \"CHAT:10014002007@ericsson.se\" } }, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := { fieldName := CONTRIBUTION_ID_E (117), name_value := \"CHAT:10014002007@ericsson.se\" }, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := \"v=0\\r\\no=10014002007 3623178869 3623178869 IN IP4 142.133.142.3\\r\\ns=-\\r\\nc=IN IP4 142.133.142.3\\r\\nt=0 0\\r\\nm=message 6060 TCP/MSRP *\\r\\na=accept-types:*\\r\\na=connection:new\\r\\na=sendrecv\\r\\na=setup:passive\\r\\na=path:msrp://142.133.142.3:6060/rFhqxHwhogoX;tcp\\r\\n\", payload := omit } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.983686", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "74", function_name: "function:sipRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.983916", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on sipInternalPort[0] from 849 @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspResponse := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 200, reasonPhrase := \"OK\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"VAT_callId_79564\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" }, { id := \"fid\", paramValue := \"wcg-ft3_1\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"video\", paramValue := omit } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 242 }, contentType := { fieldName := CONTENT_TYPE_E (19), mediaType := \"application/sdp\" }, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"INVITE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"from_50592\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := { fieldName := REQUIRE_E (80), optionsTags := { \"timer\" } }, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := { fieldName := SESSION_EXPIRES_E (88), deltaSec := \"3600\", se_params := { { id := \"refresher\", paramValue := \"uac\" } } }, session_id := omit, server := { fieldName := SERVER_E (90), serverBody := { \"H2S\" } }, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := { fieldName := SUPPORTED_E (96), optionsTags := { \"timer\" } }, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"i1o495cq-8\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.150.169\", portField := 26720 }, viaParams := { { id := \"branch\", paramValue := \"via_13102\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := { { headerName := \"Contribution-Id\", headerValue := \"CHAT:10014002007@ericsson.se\" } }, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := { fieldName := CONTRIBUTION_ID_E (117), name_value := \"CHAT:10014002007@ericsson.se\" }, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := \"v=0\\r\\no=10014002007 3623178869 3623178869 IN IP4 142.133.142.3\\r\\ns=-\\r\\nc=IN IP4 142.133.142.3\\r\\nt=0 0\\r\\nm=message 6060 TCP/MSRP *\\r\\na=accept-types:*\\r\\na=connection:new\\r\\na=sendrecv\\r\\na=setup:passive\\r\\na=path:msrp://142.133.142.3:6060/rFhqxHwhogoX;tcp\\r\\n\", payload := omit } } } }} id 20" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.984123", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port sipInternalPort[0] succeeded, message from 849: @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspResponse := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 200, reasonPhrase := \"OK\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"VAT_callId_79564\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" }, { id := \"fid\", paramValue := \"wcg-ft3_1\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"video\", paramValue := omit } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 242 }, contentType := { fieldName := CONTENT_TYPE_E (19), mediaType := \"application/sdp\" }, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"INVITE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"from_50592\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := { fieldName := REQUIRE_E (80), optionsTags := { \"timer\" } }, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := { fieldName := SESSION_EXPIRES_E (88), deltaSec := \"3600\", se_params := { { id := \"refresher\", paramValue := \"uac\" } } }, session_id := omit, server := { fieldName := SERVER_E (90), serverBody := { \"H2S\" } }, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := { fieldName := SUPPORTED_E (96), optionsTags := { \"timer\" } }, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"i1o495cq-8\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.150.169\", portField := 26720 }, viaParams := { { id := \"branch\", paramValue := \"via_13102\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := { { headerName := \"Contribution-Id\", headerValue := \"CHAT:10014002007@ericsson.se\" } }, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := { fieldName := CONTRIBUTION_ID_E (117), name_value := \"CHAT:10014002007@ericsson.se\" }, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := \"v=0\\r\\no=10014002007 3623178869 3623178869 IN IP4 142.133.142.3\\r\\ns=-\\r\\nc=IN IP4 142.133.142.3\\r\\nt=0 0\\r\\nm=message 6060 TCP/MSRP *\\r\\na=accept-types:*\\r\\na=connection:new\\r\\na=sendrecv\\r\\na=setup:passive\\r\\na=path:msrp://142.133.142.3:6060/rFhqxHwhogoX;tcp\\r\\n\", payload := omit } } } }} id 20" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.984221", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Message with id 20 was extracted from the queue of sipInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.984243", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "255", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.000172", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 10 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.000221", component: "857", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port msrpPort was started." }
Simple DataFrame { time: "2014/Oct/24 18:34:30.000256", component: "857", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port msrpInternalPort was started." }
Simple DataFrame { time: "2014/Oct/24 18:34:30.001388", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port msrpInternalPort[1] is waiting for connection from 857:msrpInternalPort on UNIX pathname /tmp/ttcn3-portconn-d019204." }
Simple DataFrame { time: "2014/Oct/24 18:34:30.001530", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "155", function_name: "function:msrpInitialize", message: " Port msrpInternalPort has established the connection with mtc:msrpInternalPort[1] using transport type UNIX" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.001589", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "216", function_name: "function:receiveInternalMessage", message: " Port msrpInternalPort[1] has accepted the connection from 857:msrpInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.001866", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "158", function_name: "function:msrpInitialize", message: " Port msrpPort was mapped to system:msrpPort[1]" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.002079", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "161", function_name: "function:msrpInitialize", message: " Sent on msrpInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.002150", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "216", function_name: "function:receiveInternalMessage", message: " Message enqueued on msrpInternalPort[1] from 857 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.002198", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Receive operation on port msrpInternalPort[1] succeeded, message from 857: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.002222", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Message with id 1 was extracted from the queue of msrpInternalPort[1]" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.002241", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "218", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 10 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.002404", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.002521", component: "857", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "79", function_name: "function:msrpRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.013747", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.013918", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "168", function_name: "function:sendInternalMessage", message: " Sent on msrpInternalPort[1] to 857 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.014075", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.014305", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "83", function_name: "function:msrpRun", message: " Message enqueued on msrpInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.014383", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Receive operation on port msrpInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.014414", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Message with id 1 was extracted from the queue of msrpInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.014440", component: "857", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "85", function_name: "function:msrpRun", message: " Stop timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:30.015785", component: "857", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on msrpPort to system @IPL4_MSRP_demo_types.MSRP_Send : { connId := 1, proto := { tcp := { } }, msg := '4D5352502033303037355641542053454E440D0A546F2D506174683A206D7372703A2F2F3134322E3133332E3134322E333A363036302F72466871784877686F676F583B7463700D0A46726F6D2D506174683A206D7372703A2F2F3134322E3133332E3135302E3136393A31373037372F53657373696F6E496431385641543B7463700D0A2D2D2D2D2D2D2D3330303735564154240D0A'O (\"MSRP 30075VAT SEND\\r\\nTo-Path: msrp://142.133.142.3:6060/rFhqxHwhogoX;tcp\\r\\nFrom-Path: msrp://142.133.150.169:17077/SessionId18VAT;tcp\\r\\n-------30075VAT$\\r\\n\")}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:30.015869", component: "857", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Outgoing message was mapped to @IPL4asp_Types.ASP_Send : { connId := 1, proto := { tcp := { } }, msg := '4D5352502033303037355641542053454E440D0A546F2D506174683A206D7372703A2F2F3134322E3133332E3134322E333A363036302F72466871784877686F676F583B7463700D0A46726F6D2D506174683A206D7372703A2F2F3134322E3133332E3135302E3136393A31373037372F53657373696F6E496431385641543B7463700D0A2D2D2D2D2D2D2D3330303735564154240D0A'O (\"MSRP 30075VAT SEND\\r\\nTo-Path: msrp://142.133.142.3:6060/rFhqxHwhogoX;tcp\\r\\nFrom-Path: msrp://142.133.150.169:17077/SessionId18VAT;tcp\\r\\n-------30075VAT$\\r\\n\")}" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.015982", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "343", function_name: "function:processCommand", message: " Sent on msrpInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.016034", component: "857", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "79", function_name: "function:msrpRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.016067", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "216", function_name: "function:receiveInternalMessage", message: " Message enqueued on msrpInternalPort[1] from 857 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.016119", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Receive operation on port msrpInternalPort[1] succeeded, message from 857: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.016143", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Message with id 2 was extracted from the queue of msrpInternalPort[1]" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.016161", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "218", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.016603", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.026636", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.026753", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "168", function_name: "function:sendInternalMessage", message: " Sent on msrpInternalPort[1] to 857 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.026853", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "83", function_name: "function:msrpRun", message: " Message enqueued on msrpInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.026872", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.026904", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Receive operation on port msrpInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.026939", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Message with id 2 was extracted from the queue of msrpInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.026954", component: "857", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "85", function_name: "function:msrpRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.027045", component: "857", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "383", function_name: "function:handleClosedConnectionByRemoteSide", message: " Start timer timerCheckMsrpQueue: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:30.052513", component: "857", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on msrpPort from system @IPL4asp_Types.ASP_RecvFrom : { connId := 1, remName := \"142.133.142.3\", remPort := 6060, locName := \"142.133.150.169\", locPort := 17077, proto := { tcp := { } }, userData := 0, msg := '4D53525020333030373556415420323030204F4B0D0A546F2D506174683A206D7372703A2F2F3134322E3133332E3135302E3136393A31373037372F53657373696F6E496431385641543B7463700D0A46726F6D2D506174683A206D7372703A2F2F3134322E3133332E3134322E333A363036302F72466871784877686F676F583B7463700D0A2D2D2D2D2D2D2D3330303735564154240D0A'O (\"MSRP 30075VAT 200 OK\\r\\nTo-Path: msrp://142.133.150.169:17077/SessionId18VAT;tcp\\r\\nFrom-Path: msrp://142.133.142.3:6060/rFhqxHwhogoX;tcp\\r\\n-------30075VAT$\\r\\n\")} id 1" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.052734", component: "857", peer_component: "BaseMsrpComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "385", function_name: "function:handleClosedConnectionByRemoteSide", message: " Incoming message was mapped to @IPL4_MSRP_demo_types" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.230266", component: "857", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "394", function_name: "function:handleClosedConnectionByRemoteSide", message: " Timeout timerCheckMsrpQueue: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.230575", component: "857", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "287", function_name: "function:baseReceiveMsrpMessage", message: " Start timer timerWaitForMsrpResponse: 15 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.230765", component: "857", peer_component: "BaseMsrpComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "290", function_name: "function:baseReceiveMsrpMessage", message: " Receive operation on port msrpPort succeeded, message from system(" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.230838", component: "857", peer_component: "BaseMsrpComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "290", function_name: "function:baseReceiveMsrpMessage", message: " Message with id 1 was extracted from the queue of msrpPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.230929", component: "857", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "295", function_name: "function:baseReceiveMsrpMessage", message: " Stop timer timerWaitForMsrpResponse: 15 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.231252", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "343", function_name: "function:processCommand", message: " Sent on msrpInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.231371", component: "857", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "79", function_name: "function:msrpRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.231486", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "216", function_name: "function:receiveInternalMessage", message: " Message enqueued on msrpInternalPort[1] from 857 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.231725", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Receive operation on port msrpInternalPort[1] succeeded, message from 857: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.231828", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Message with id 3 was extracted from the queue of msrpInternalPort[1]" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.231892", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "218", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.234356", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.245589", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "286", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:30.246652", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on sipInternalPort[0] to 849 @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMMAND_SIP_SEND_SIP_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"5\" }, { parameterName := \"SUBSCRIBER\", parameterValue := \"11\" } } }, aspsSip := { { aspRequest := { addr := omit, request := { requestLine := { method := ACK_E (0), requestUri := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" } }, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"VAT_callId_79564\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"ACK\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"from_50592\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"i1o495cq-8\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.150.169\", portField := 26720 }, viaParams := { { id := \"branch\", paramValue := \"via_13102\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.247187", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:30.247199", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on sipInternalPort from mtc @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMMAND_SIP_SEND_SIP_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"5\" }, { parameterName := \"SUBSCRIBER\", parameterValue := \"11\" } } }, aspsSip := { { aspRequest := { addr := omit, request := { requestLine := { method := ACK_E (0), requestUri := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" } }, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"VAT_callId_79564\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"ACK\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"from_50592\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"i1o495cq-8\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.150.169\", portField := 26720 }, viaParams := { { id := \"branch\", paramValue := \"via_13102\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 20" }
Structured  DataFrame { time: "2014/Oct/24 18:34:30.247420", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port sipInternalPort succeeded, message from mtc: @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMMAND_SIP_SEND_SIP_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"5\" }, { parameterName := \"SUBSCRIBER\", parameterValue := \"11\" } } }, aspsSip := { { aspRequest := { addr := omit, request := { requestLine := { method := ACK_E (0), requestUri := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" } }, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"VAT_callId_79564\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"ACK\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"from_50592\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"i1o495cq-8\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.150.169\", portField := 26720 }, viaParams := { { id := \"branch\", paramValue := \"via_13102\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 20" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.247519", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Message with id 20 was extracted from the queue of sipInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.247544", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "80", function_name: "function:sipRun", message: " Stop timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:30.248253", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on sipClientPort to system @IPL4_demo_types.SIP_SendTo : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, proto := { tcp := { } }, msg := { raw := \"ACK sip:10014002007@ericsson.se;csid=2838ab5a-e194-4923-81af-c9f0a544f667 SIP/2.0\\r\\nCall-ID:VAT_callId_79564\\r\\nContent-Length:0\\r\\nCSeq:1 ACK\\r\\nFrom:<sip:10014002006@ericsson.se>;tag=from_50592\\r\\nMax-Forwards:69\\r\\nTo:<sip:10014002007@ericsson.se>;tag=i1o495cq-8\\r\\nVia:SIP/2.0/TCP 142.133.150.169:26720;branch=via_13102\\r\\n\\r\\n\" }}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:30.248388", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Outgoing message was mapped to @IPL4asp_Types.ASP_SendTo : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, proto := { tcp := { } }, msgsip:10014002007@ericsson.se;csid=2838ab5a-e194-4923-81af-c9f0a544f667 SIP/2.0\\r\\nCall-ID:VAT_callId_79564\\r\\nContent-Length:0\\r\\nCSeq:1 ACK\\r\\nFrom:<sip:10014002006@ericsson.se>;tag=from_50592\\r\\nMax-Forwards:69\\r\\nTo:<sip:10014002007@ericsson.se>;tag=i1o495cq-8\\r\\nVia:SIP/2.0/TCP 142.133.150.169:26720;branch=via_13102\\r\\n\\r\\n\")}" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.248592", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "388", function_name: "function:processCommand", message: " Sent on sipInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.248748", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "74", function_name: "function:sipRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.248806", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "253", function_name: "function:receiveInternalMessage", message: " Message enqueued on sipInternalPort[0] from 849 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.248913", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Receive operation on port sipInternalPort[0] succeeded, message from 849: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.248973", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Message with id 21 was extracted from the queue of sipInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.249019", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "255", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.254563", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.265822", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "286", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:30.266643", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on sipInternalPort[0] to 849 @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMMAND_SIP_SEND_SIP_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"5\" }, { parameterName := \"SUBSCRIBER\", parameterValue := \"11\" } } }, aspsSip := { { aspResponse := { addr := omit, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 200, reasonPhrase := \"OK\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_6_1805558430567465450\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" }, { id := \"fid\", paramValue := \"wcg-ft3_1\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"video\", paramValue := omit } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := { fieldName := CONTENT_TYPE_E (19), mediaType := \"application/sdp\" }, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"INVITE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o4954c-7\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := { fieldName := REQUIRE_E (80), optionsTags := { \"timer\" } }, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := { fieldName := SESSION_EXPIRES_E (88), deltaSec := \"3600\", se_params := { { id := \"refresher\", paramValue := \"uac\" } } }, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := { fieldName := SUPPORTED_E (96), optionsTags := { \"timer\" } }, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"to_80618\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f965ce3efd3a62494f8cec71bc2c0d199a\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := { fieldName := CONTRIBUTION_ID_E (117), name_value := \"CHAT:10014002007@ericsson.se\" }, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := \"v=0\\r\\no=10014002007 3590934420 3590934420 IN IP4 142.133.150.169\\r\\ns=-\\r\\nc=IN IP4 142.133.150.169\\r\\nt=0 0\\r\\nm=message 17076 TCP/MSRP *\\r\\na=accept-types:*\\r\\na=connection:new\\r\\na=sendrecv\\r\\na=setup:passive\\r\\na=path:msrp://142.133.150.169:17076/SessionId18VAT;tcp\\r\\n\", payload := omit } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.267078", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:30.267238", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on sipInternalPort from mtc @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMMAND_SIP_SEND_SIP_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"5\" }, { parameterName := \"SUBSCRIBER\", parameterValue := \"11\" } } }, aspsSip := { { aspResponse := { addr := omit, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 200, reasonPhrase := \"OK\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_6_1805558430567465450\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" }, { id := \"fid\", paramValue := \"wcg-ft3_1\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"video\", paramValue := omit } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := { fieldName := CONTENT_TYPE_E (19), mediaType := \"application/sdp\" }, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"INVITE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o4954c-7\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := { fieldName := REQUIRE_E (80), optionsTags := { \"timer\" } }, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := { fieldName := SESSION_EXPIRES_E (88), deltaSec := \"3600\", se_params := { { id := \"refresher\", paramValue := \"uac\" } } }, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := { fieldName := SUPPORTED_E (96), optionsTags := { \"timer\" } }, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"to_80618\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f965ce3efd3a62494f8cec71bc2c0d199a\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := { fieldName := CONTRIBUTION_ID_E (117), name_value := \"CHAT:10014002007@ericsson.se\" }, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := \"v=0\\r\\no=10014002007 3590934420 3590934420 IN IP4 142.133.150.169\\r\\ns=-\\r\\nc=IN IP4 142.133.150.169\\r\\nt=0 0\\r\\nm=message 17076 TCP/MSRP *\\r\\na=accept-types:*\\r\\na=connection:new\\r\\na=sendrecv\\r\\na=setup:passive\\r\\na=path:msrp://142.133.150.169:17076/SessionId18VAT;tcp\\r\\n\", payload := omit } } } }} id 21" }
Structured  DataFrame { time: "2014/Oct/24 18:34:30.267542", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port sipInternalPort succeeded, message from mtc: @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMMAND_SIP_SEND_SIP_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"5\" }, { parameterName := \"SUBSCRIBER\", parameterValue := \"11\" } } }, aspsSip := { { aspResponse := { addr := omit, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 200, reasonPhrase := \"OK\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_6_1805558430567465450\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" }, { id := \"fid\", paramValue := \"wcg-ft3_1\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"video\", paramValue := omit } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := { fieldName := CONTENT_TYPE_E (19), mediaType := \"application/sdp\" }, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"INVITE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o4954c-7\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := { fieldName := REQUIRE_E (80), optionsTags := { \"timer\" } }, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := { fieldName := SESSION_EXPIRES_E (88), deltaSec := \"3600\", se_params := { { id := \"refresher\", paramValue := \"uac\" } } }, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := { fieldName := SUPPORTED_E (96), optionsTags := { \"timer\" } }, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"to_80618\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f965ce3efd3a62494f8cec71bc2c0d199a\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := { fieldName := CONTRIBUTION_ID_E (117), name_value := \"CHAT:10014002007@ericsson.se\" }, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := \"v=0\\r\\no=10014002007 3590934420 3590934420 IN IP4 142.133.150.169\\r\\ns=-\\r\\nc=IN IP4 142.133.150.169\\r\\nt=0 0\\r\\nm=message 17076 TCP/MSRP *\\r\\na=accept-types:*\\r\\na=connection:new\\r\\na=sendrecv\\r\\na=setup:passive\\r\\na=path:msrp://142.133.150.169:17076/SessionId18VAT;tcp\\r\\n\", payload := omit } } } }} id 21" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.267659", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Message with id 21 was extracted from the queue of sipInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.267685", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "80", function_name: "function:sipRun", message: " Stop timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:30.268457", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on sipClientPort to system @IPL4_demo_types.SIP_SendTo : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, proto := { tcp := { } }, msg := { raw := \"SIP/2.0 200 OK\\r\\nCall-ID:142.133.142.3_6_1805558430567465450\\r\\nContact:<sip:10014002007@142.133.150.169:26720;csid=2838ab5a-e194-4923-81af-c9f0a544f667;transport=TCP;fid=wcg-ft3_1>;+g.gsma.rcs.ipcall;+g.3gpp.icsi-ref=\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\";+g.3gpp.cs-voice;+g.3gpp.iari-ref=\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\";+g.oma.sip-im;video\\r\\nContent-Length:252\\r\\nContent-Type:application/sdp\\r\\nCSeq:1 INVITE\\r\\nFrom:<sip:10014002006@ericsson.se>;tag=i1o4954c-7\\r\\nMax-Forwards:69\\r\\nContribution-Id:CHAT:10014002007@ericsson.se\\r\\nRequire:timer\\r\\nSession-Expires:3600;refresher=uac\\r\\nSupported:timer\\r\\nTo:<sip:10014002007@ericsson.se>;tag=to_80618\\r\\nVia:SIP/2.0/TCP 142.133.142.3:5060;branch=z9hG4bKf1f965ce3efd3a62494f8cec71bc2c0d199a\\r\\n\\r\\nv=0\\r\\no=10014002007 3590934420 3590934420 IN IP4 142.133.150.169\\r\\ns=-\\r\\nc=IN IP4 142.133.150.169\\r\\nt=0 0\\r\\nm=message 17076 TCP/MSRP *\\r\\na=accept-types:*\\r\\na=connection:new\\r\\na=sendrecv\\r\\na=setup:passive\\r\\na=path:msrp://142.133.150.169:17076/SessionId18VAT;tcp\\r\\n\" }}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:30.268674", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Outgoing message was mapped to @IPL4asp_Types.ASP_SendTo : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, proto := { tcp := { } }, msgr\\nCall-ID:142.133.142.3_6_1805558430567465450\\r\\nContact:<sip:10014002007@142.133.150.169:26720;csid=2838ab5a-e194-4923-81af-c9f0a544f667;transport=TCP;fid=wcg-ft3_1>;+g.gsma.rcs.ipcall;+g.3gpp.icsi-ref=\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\";+g.3gpp.cs-voice;+g.3gpp.iari-ref=\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\";+g.oma.sip-im;video\\r\\nContent-Length:252\\r\\nContent-Type:application/sdp\\r\\nCSeq:1 INVITE\\r\\nFrom:<sip:10014002006@ericsson.se>;tag=i1o4954c-7\\r\\nMax-Forwards:69\\r\\nContribution-Id:CHAT:10014002007@ericsson.se\\r\\nRequire:timer\\r\\nSession-Expires:3600;refresher=uac\\r\\nSupported:timer\\r\\nTo:<sip:10014002007@ericsson.se>;tag=to_80618\\r\\nVia:SIP/2.0/TCP 142.133.142.3:5060;branch=z9hG4bKf1f965ce3efd3a62494f8cec71bc2c0d199a\\r\\n\\r\\nv=0\\r\\no=10014002007 3590934420 3590934420 IN IP4 142.133.150.169\\r\\ns=-\\r\\nc=IN IP4 142.133.150.169\\r\\nt=0 0\\r\\nm=message 17076 TCP/MSRP *\\r\\na=accept-types:*\\r\\na=connection:new\\r\\na=sendrecv\\r\\na=setup:passive\\r\\na=path:msrp://142.133.150.169:17076/SessionId18VAT;tcp\\r\\n\")}" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.268862", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "388", function_name: "function:processCommand", message: " Sent on sipInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.268966", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "74", function_name: "function:sipRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.269029", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "253", function_name: "function:receiveInternalMessage", message: " Message enqueued on sipInternalPort[0] from 849 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.269107", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Receive operation on port sipInternalPort[0] succeeded, message from 849: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.269144", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Message with id 22 was extracted from the queue of sipInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.269189", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "255", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.270233", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.270299", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "249", function_name: "function:receiveInternalMessage", message: " Receive operation on port msrpInternalPort[0] succeeded, message from 850: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.270341", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "249", function_name: "function:receiveInternalMessage", message: " Message with id 2 was extracted from the queue of msrpInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.270370", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "250", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.270459", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "168", function_name: "function:sendInternalMessage", message: " Sent on msrpInternalPort[0] to 850 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.270632", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "83", function_name: "function:msrpRun", message: " Message enqueued on msrpInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.270650", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.270731", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Receive operation on port msrpInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.270765", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Message with id 2 was extracted from the queue of msrpInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.270788", component: "850", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "85", function_name: "function:msrpRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.270943", component: "850", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "383", function_name: "function:handleClosedConnectionByRemoteSide", message: " Start timer timerCheckMsrpQueue: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:30.324325", component: "857", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on msrpPort from system @IPL4asp_Types.ASP_RecvFrom : { connId := 1, remName := \"142.133.142.3\", remPort := 6060, locName := \"142.133.150.169\", locPort := 17077, proto := { tcp := { } }, userData := 0, msgoytq79ez SEND\\r\\nTo-Path: msrp://142.133.150.169:17077/SessionId18VAT;tcp\\r\\nFrom-Path: msrp://142.133.142.3:6060/rFhqxHwhogoX;tcp\\r\\nByte-Range: 1-296/296\\r\\nMessage-ID: 83VXAA1G\\r\\nContent-Type: message/cpim\\r\\n\\r\\nTo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:29+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: 83VXAA1G\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002007 to 10014002006\\r\\n-------oytq79ez$\\r\\n\")} id 2" }
Structured  DataFrame { time: "2014/Oct/24 18:34:30.324981", component: "857", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Incoming message was mapped to @IPL4_MSRP_demo_types.MSRP_RecvFrom : { connId := 1, remName := \"142.133.142.3\", remPort := 6060, locName := \"142.133.150.169\", locPort := 17077, proto := { tcp := { } }, userData := 0, msg := { request := { requestStart := { transactId := \"oytq79ez\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17077\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"rFhqxHwhogoX\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"83VXAA1G\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"296\", total := \"296\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:29+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: 83VXAA1G\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002007 to 10014002006\", binary_message := <unbound> }, endLine := { transactId := \"oytq79ez\", continuationFlag := \"$\" } } }, binary_messageo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:29+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: 83VXAA1G\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002007 to 10014002006\")} id 2" }
Structured  DataFrame { time: "2014/Oct/24 18:34:30.325024", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on sipClientPort from system @IPL4asp_Types.ASP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msgsip:10014002007@142.133.150.169:26720;csid=2838ab5a-e194-4923-81af-c9f0a544f667;transport=TCP;fid=wcg-ft3_1 SIP/2.0\\r\\nMax-Forwards: 69\\r\\nContent-Length: 0\\r\\nTo: <sip:10014002007@ericsson.se>;tag=to_80618\\r\\nCseq: 1 ACK\\r\\nVia: SIP/2.0/TCP 142.133.142.3:5060;branch=z9hG4bKf1f9229f467b2fe64245bb2ba67b69c317a6\\r\\nUser-Agent: H2S\\r\\nFrom: <sip:10014002006@ericsson.se>;tag=i1o4954c-7\\r\\nCall-Id: 142.133.142.3_6_1805558430567465450\\r\\n\\r\\n\")} id 12" }
Structured  DataFrame { time: "2014/Oct/24 18:34:30.325667", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Incoming message was mapped to @IPL4_demo_types.SIP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msg := { request := { requestLine := { method := ACK_E (0), requestUri := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" }, { id := \"fid\", paramValue := \"wcg-ft3_1\" } }, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_6_1805558430567465450\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"ACK\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o4954c-7\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"to_80618\" } } }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f9229f467b2fe64245bb2ba67b69c317a6\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } }} id 12" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.343948", component: "850", peer_component: "BaseMsrpComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "385", function_name: "function:handleClosedConnectionByRemoteSide", message: " Message enqueued on msrpPort from system @Socket_API_Definitions" }
Structured  DataFrame { time: "2014/Oct/24 18:34:30.351123", component: "850", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on msrpPort from system @IPL4asp_Types.ASP_RecvFrom : { connId := 2, remName := \"142.133.142.3\", remPort := 60548, locName := \"142.133.150.169\", locPort := 17076, proto := { tcp := { } }, userData := 0, msg := '4D535250206E4C32654366384E2053454E440D0A546F2D506174683A206D7372703A2F2F3134322E3133332E3135302E3136393A31373037362F53657373696F6E496431385641543B7463700D0A46726F6D2D506174683A206D7372703A2F2F3134322E3133332E3134322E333A363036302F6A39454D647339534C5A645A3B7463700D0A4D6573736167652D49443A20644E655762654E310D0A2D2D2D2D2D2D2D6E4C32654366384E240D0A'O (\"MSRP nL2eCf8N SEND\\r\\nTo-Path: msrp://142.133.150.169:17076/SessionId18VAT;tcp\\r\\nFrom-Path: msrp://142.133.142.3:6060/j9EMds9SLZdZ;tcp\\r\\nMessage-ID: dNeWbeN1\\r\\n-------nL2eCf8N$\\r\\n\")} id 2" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.351431", component: "850", peer_component: "BaseMsrpComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "385", function_name: "function:handleClosedConnectionByRemoteSide", message: " Incoming message was mapped to @IPL4_MSRP_demo_types" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.474039", component: "850", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "394", function_name: "function:handleClosedConnectionByRemoteSide", message: " Timeout timerCheckMsrpQueue: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.474294", component: "850", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "287", function_name: "function:baseReceiveMsrpMessage", message: " Start timer timerWaitForMsrpResponse: 15 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.474369", component: "850", peer_component: "BaseMsrpComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "308", function_name: "function:baseReceiveMsrpMessage", message: " Receive operation on port msrpPort succeeded, message from system(" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.474404", component: "850", peer_component: "BaseMsrpComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "308", function_name: "function:baseReceiveMsrpMessage", message: " Message with id 1 was extracted from the queue of msrpPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.474429", component: "850", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "309", function_name: "function:baseReceiveMsrpMessage", message: " Stop timer timerWaitForMsrpResponse: 15 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.474573", component: "850", peer_component: "BaseMsrpComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "290", function_name: "function:baseReceiveMsrpMessage", message: " Receive operation on port msrpPort succeeded, message from system(" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.474622", component: "850", peer_component: "BaseMsrpComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "290", function_name: "function:baseReceiveMsrpMessage", message: " Message with id 2 was extracted from the queue of msrpPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.475086", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "343", function_name: "function:processCommand", message: " Sent on msrpInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.475209", component: "850", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "79", function_name: "function:msrpRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.475378", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "216", function_name: "function:receiveInternalMessage", message: " Message enqueued on msrpInternalPort[0] from 850 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.475545", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Receive operation on port msrpInternalPort[0] succeeded, message from 850: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.475623", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Message with id 3 was extracted from the queue of msrpInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.475664", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "218", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.476565", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.489774", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.489992", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "168", function_name: "function:sendInternalMessage", message: " Sent on msrpInternalPort[0] to 850 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.490279", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.490335", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "83", function_name: "function:msrpRun", message: " Message enqueued on msrpInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.490447", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Receive operation on port msrpInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.490512", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Message with id 3 was extracted from the queue of msrpInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.490554", component: "850", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "85", function_name: "function:msrpRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.490771", component: "850", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "383", function_name: "function:handleClosedConnectionByRemoteSide", message: " Start timer timerCheckMsrpQueue: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.694013", component: "850", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "394", function_name: "function:handleClosedConnectionByRemoteSide", message: " Timeout timerCheckMsrpQueue: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:30.694344", component: "850", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on msrpPort to system @IPL4_MSRP_demo_types.MSRP_Send : { connId := 2, proto := { tcp := { } }, msg := '4D535250206E4C32654366384E20323030204F4B0D0A546F2D506174683A206D7372703A2F2F3134322E3133332E3134322E333A363036302F6A39454D647339534C5A645A3B7463700D0A46726F6D2D506174683A206D7372703A2F2F3134322E3133332E3135302E3136393A31373037362F53657373696F6E496431385641543B7463700D0A2D2D2D2D2D2D2D6E4C32654366384E240D0A'O (\"MSRP nL2eCf8N 200 OK\\r\\nTo-Path: msrp://142.133.142.3:6060/j9EMds9SLZdZ;tcp\\r\\nFrom-Path: msrp://142.133.150.169:17076/SessionId18VAT;tcp\\r\\n-------nL2eCf8N$\\r\\n\")}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:30.694423", component: "850", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Outgoing message was mapped to @IPL4asp_Types.ASP_Send : { connId := 2, proto := { tcp := { } }, msg := '4D535250206E4C32654366384E20323030204F4B0D0A546F2D506174683A206D7372703A2F2F3134322E3133332E3134322E333A363036302F6A39454D647339534C5A645A3B7463700D0A46726F6D2D506174683A206D7372703A2F2F3134322E3133332E3135302E3136393A31373037362F53657373696F6E496431385641543B7463700D0A2D2D2D2D2D2D2D6E4C32654366384E240D0A'O (\"MSRP nL2eCf8N 200 OK\\r\\nTo-Path: msrp://142.133.142.3:6060/j9EMds9SLZdZ;tcp\\r\\nFrom-Path: msrp://142.133.150.169:17076/SessionId18VAT;tcp\\r\\n-------nL2eCf8N$\\r\\n\")}" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.694599", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "343", function_name: "function:processCommand", message: " Sent on msrpInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.694682", component: "850", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "79", function_name: "function:msrpRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.694805", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "216", function_name: "function:receiveInternalMessage", message: " Message enqueued on msrpInternalPort[0] from 850 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.694948", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Receive operation on port msrpInternalPort[0] succeeded, message from 850: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.695057", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Message with id 4 was extracted from the queue of msrpInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.695110", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "218", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.697367", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.709777", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "286", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.709921", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "202", function_name: "function:sendInternalMessage", message: " Sent on sipInternalPort[0] to 849 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.710226", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.710386", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "78", function_name: "function:sipRun", message: " Message enqueued on sipInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.710493", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Receive operation on port sipInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.710527", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Message with id 22 was extracted from the queue of sipInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.710550", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "80", function_name: "function:sipRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.710755", component: "849", peer_component: "BaseSipClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "320", function_name: "function:generalReceiveSip", message: " Start timer timerWaitForSipMessage: 15 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:30.711037", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port sipClientPort succeeded, message from system(): @IPL4_demo_types.SIP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msg := { request := { requestLine := { method := ACK_E (0), requestUri := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" }, { id := \"fid\", paramValue := \"wcg-ft3_1\" } }, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_6_1805558430567465450\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"ACK\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o4954c-7\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"to_80618\" } } }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f9229f467b2fe64245bb2ba67b69c317a6\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } }} id 12" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.711170", component: "849", peer_component: "BaseSipClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "345", function_name: "function:generalReceiveSip", message: " Message with id 12 was extracted from the queue of sipClientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.711203", component: "849", peer_component: "BaseSipClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "346", function_name: "function:generalReceiveSip", message: " Stop timer timerWaitForSipMessage: 15 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:30.712241", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on sipInternalPort to mtc @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspRequest := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, request := { requestLine := { method := ACK_E (0), requestUri := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" }, { id := \"fid\", paramValue := \"wcg-ft3_1\" } }, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_6_1805558430567465450\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"ACK\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o4954c-7\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"to_80618\" } } }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f9229f467b2fe64245bb2ba67b69c317a6\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.712611", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "74", function_name: "function:sipRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:30.712772", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on sipInternalPort[0] from 849 @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspRequest := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, request := { requestLine := { method := ACK_E (0), requestUri := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" }, { id := \"fid\", paramValue := \"wcg-ft3_1\" } }, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_6_1805558430567465450\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"ACK\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o4954c-7\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"to_80618\" } } }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f9229f467b2fe64245bb2ba67b69c317a6\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 23" }
Structured  DataFrame { time: "2014/Oct/24 18:34:30.713004", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port sipInternalPort[0] succeeded, message from 849: @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspRequest := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, request := { requestLine := { method := ACK_E (0), requestUri := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" }, { id := \"fid\", paramValue := \"wcg-ft3_1\" } }, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_6_1805558430567465450\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"ACK\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o4954c-7\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"to_80618\" } } }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f9229f467b2fe64245bb2ba67b69c317a6\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 23" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.713118", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Message with id 23 was extracted from the queue of sipInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.713174", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "255", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.716711", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.729783", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.729906", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "168", function_name: "function:sendInternalMessage", message: " Sent on msrpInternalPort[1] to 857 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.730094", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "83", function_name: "function:msrpRun", message: " Message enqueued on msrpInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.730170", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.730278", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Receive operation on port msrpInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.730332", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Message with id 3 was extracted from the queue of msrpInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.730376", component: "857", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "85", function_name: "function:msrpRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.730518", component: "857", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "383", function_name: "function:handleClosedConnectionByRemoteSide", message: " Start timer timerCheckMsrpQueue: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.934256", component: "857", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "394", function_name: "function:handleClosedConnectionByRemoteSide", message: " Timeout timerCheckMsrpQueue: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.934501", component: "857", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "287", function_name: "function:baseReceiveMsrpMessage", message: " Start timer timerWaitForMsrpResponse: 15 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:30.934690", component: "857", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port msrpPort succeeded, message from system(): @IPL4_MSRP_demo_types.MSRP_RecvFrom : { connId := 1, remName := \"142.133.142.3\", remPort := 6060, locName := \"142.133.150.169\", locPort := 17077, proto := { tcp := { } }, userData := 0, msg := { request := { requestStart := { transactId := \"oytq79ez\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17077\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"rFhqxHwhogoX\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"83VXAA1G\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"296\", total := \"296\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:29+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: 83VXAA1G\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002007 to 10014002006\", binary_message := <unbound> }, endLine := { transactId := \"oytq79ez\", continuationFlag := \"$\" } } }, binary_messageo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:29+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: 83VXAA1G\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002007 to 10014002006\")} id 2" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.934805", component: "857", peer_component: "BaseMsrpComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "290", function_name: "function:baseReceiveMsrpMessage", message: " Message with id 2 was extracted from the queue of msrpPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.934897", component: "857", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "295", function_name: "function:baseReceiveMsrpMessage", message: " Stop timer timerWaitForMsrpResponse: 15 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:30.935339", component: "857", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on msrpInternalPort to mtc @variables.internalPortMessageWithMsrpMessages : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_MSRP_EXPECT_MESSAGE\" } } }, msrpMessages := { { request := { requestStart := { transactId := \"oytq79ez\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17077\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"rFhqxHwhogoX\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"83VXAA1G\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"296\", total := \"296\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:29+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: 83VXAA1G\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002007 to 10014002006\", binary_messageo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:29+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: 83VXAA1G\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002007 to 10014002006\") }, endLine := { transactId := \"oytq79ez\", continuationFlag := \"$\" } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.935480", component: "857", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "79", function_name: "function:msrpRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:30.935740", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on msrpInternalPort[1] from 857 @variables.internalPortMessageWithMsrpMessages : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_MSRP_EXPECT_MESSAGE\" } } }, msrpMessages := { { request := { requestStart := { transactId := \"oytq79ez\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17077\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"rFhqxHwhogoX\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"83VXAA1G\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"296\", total := \"296\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:29+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: 83VXAA1G\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002007 to 10014002006\", binary_messageo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:29+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: 83VXAA1G\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002007 to 10014002006\") }, endLine := { transactId := \"oytq79ez\", continuationFlag := \"$\" } } } }} id 4" }
Structured  DataFrame { time: "2014/Oct/24 18:34:30.935991", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port msrpInternalPort[1] succeeded, message from 857: @variables.internalPortMessageWithMsrpMessages : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_MSRP_EXPECT_MESSAGE\" } } }, msrpMessages := { { request := { requestStart := { transactId := \"oytq79ez\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17077\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"rFhqxHwhogoX\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"83VXAA1G\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"296\", total := \"296\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:29+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: 83VXAA1G\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002007 to 10014002006\", binary_message := '546F3A203C7369703A616E6F6E796D6F757340616E6F6E796D6F75732E696E76616C69643E0D0A46726F6D3A203C7369703A616E6F6E796D6F757340616E6F6E796D6F75732E696E76616C69643E0D0A4461746554696D653A20323031342D31302D32345432323A33343A32392B30303A30300D0A4E533A20696D646E203C75726E3A696574663A706172616D733A696D646E3E0D0A696D646E2E446973706F736974696F6E2D4E6F74696669636174696F6E3A20706F7369746976652D64656C69766572790D0A696D646E2E4D6573736167652D49443A2038335658414131470D0A0D0A436F6E74656E742D547970653A20746578742F706C61696E0D0A0D0A426F6479206D65737361676520313030313430303230303720746F203130303134303032303036'O (\"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:29+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: 83VXAA1G\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002007 to 10014002006\") }, endLine := { transactId := \"oytq79ez\", continuationFlag := \"$\" } } } }} id 4" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.936116", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Message with id 4 was extracted from the queue of msrpInternalPort[1]" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.936160", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "218", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.937563", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.949775", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.949955", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "168", function_name: "function:sendInternalMessage", message: " Sent on msrpInternalPort[1] to 857 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.950215", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.950294", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "83", function_name: "function:msrpRun", message: " Message enqueued on msrpInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.950450", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Receive operation on port msrpInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.950517", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Message with id 4 was extracted from the queue of msrpInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.950556", component: "857", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "85", function_name: "function:msrpRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.950839", component: "857", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "383", function_name: "function:handleClosedConnectionByRemoteSide", message: " Start timer timerCheckMsrpQueue: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.154242", component: "857", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "394", function_name: "function:handleClosedConnectionByRemoteSide", message: " Timeout timerCheckMsrpQueue: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:31.154550", component: "857", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on msrpPort to system @IPL4_MSRP_demo_types.MSRP_Send : { connId := 1, proto := { tcp := { } }, msg := '4D535250206F7974713739657A20323030204F4B0D0A546F2D506174683A206D7372703A2F2F3134322E3133332E3134322E333A363036302F72466871784877686F676F583B7463700D0A46726F6D2D506174683A206D7372703A2F2F3134322E3133332E3135302E3136393A31373037372F53657373696F6E496431385641543B7463700D0A2D2D2D2D2D2D2D6F7974713739657A240D0A'O (\"MSRP oytq79ez 200 OK\\r\\nTo-Path: msrp://142.133.142.3:6060/rFhqxHwhogoX;tcp\\r\\nFrom-Path: msrp://142.133.150.169:17077/SessionId18VAT;tcp\\r\\n-------oytq79ez$\\r\\n\")}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:31.154628", component: "857", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Outgoing message was mapped to @IPL4asp_Types.ASP_Send : { connId := 1, proto := { tcp := { } }, msg := '4D535250206F7974713739657A20323030204F4B0D0A546F2D506174683A206D7372703A2F2F3134322E3133332E3134322E333A363036302F72466871784877686F676F583B7463700D0A46726F6D2D506174683A206D7372703A2F2F3134322E3133332E3135302E3136393A31373037372F53657373696F6E496431385641543B7463700D0A2D2D2D2D2D2D2D6F7974713739657A240D0A'O (\"MSRP oytq79ez 200 OK\\r\\nTo-Path: msrp://142.133.142.3:6060/rFhqxHwhogoX;tcp\\r\\nFrom-Path: msrp://142.133.150.169:17077/SessionId18VAT;tcp\\r\\n-------oytq79ez$\\r\\n\")}" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.154867", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "343", function_name: "function:processCommand", message: " Sent on msrpInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.154973", component: "857", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "79", function_name: "function:msrpRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.155090", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "216", function_name: "function:receiveInternalMessage", message: " Message enqueued on msrpInternalPort[1] from 857 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.155189", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Receive operation on port msrpInternalPort[1] succeeded, message from 857: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.155254", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Message with id 5 was extracted from the queue of msrpInternalPort[1]" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.155287", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "218", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.163674", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.173774", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:31.174058", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on msrpInternalPort[0] to 850 @variables.internalPortMessageWithMsrpMessages : { internalMessage := { description := \"COMMAND_MSRP_SEND_MESSAGE\", parameters := { { parameterName := \"LISTENER_PORT\", parameterValue := \"17076\" } } }, msrpMessages := { { request := { requestStart := { transactId := \"oytq7VAT\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"j9EMds9SLZdZ\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17076\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"83VXAA1G\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"296\", total := \"296\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:29+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: 83VXAA1G\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002007 to 10014002006\", binary_message := omit }, endLine := { transactId := \"oytq7VAT\", continuationFlag := \"$\" } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.174301", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:31.174387", component: "850", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on msrpInternalPort from mtc @variables.internalPortMessageWithMsrpMessages : { internalMessage := { description := \"COMMAND_MSRP_SEND_MESSAGE\", parameters := { { parameterName := \"LISTENER_PORT\", parameterValue := \"17076\" } } }, msrpMessages := { { request := { requestStart := { transactId := \"oytq7VAT\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"j9EMds9SLZdZ\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17076\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"83VXAA1G\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"296\", total := \"296\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:29+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: 83VXAA1G\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002007 to 10014002006\", binary_message := omit }, endLine := { transactId := \"oytq7VAT\", continuationFlag := \"$\" } } } }} id 4" }
Structured  DataFrame { time: "2014/Oct/24 18:34:31.174569", component: "850", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port msrpInternalPort succeeded, message from mtc: @variables.internalPortMessageWithMsrpMessages : { internalMessage := { description := \"COMMAND_MSRP_SEND_MESSAGE\", parameters := { { parameterName := \"LISTENER_PORT\", parameterValue := \"17076\" } } }, msrpMessages := { { request := { requestStart := { transactId := \"oytq7VAT\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"j9EMds9SLZdZ\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17076\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"83VXAA1G\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"296\", total := \"296\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:29+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: 83VXAA1G\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002007 to 10014002006\", binary_message := omit }, endLine := { transactId := \"oytq7VAT\", continuationFlag := \"$\" } } } }} id 4" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.174618", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Message with id 4 was extracted from the queue of msrpInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.174647", component: "850", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "85", function_name: "function:msrpRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.174901", component: "850", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "383", function_name: "function:handleClosedConnectionByRemoteSide", message: " Start timer timerCheckMsrpQueue: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.378000", component: "850", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "394", function_name: "function:handleClosedConnectionByRemoteSide", message: " Timeout timerCheckMsrpQueue: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:31.378335", component: "850", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on msrpPort to system @IPL4_MSRP_demo_types.MSRP_Send : { connId := 2, proto := { tcp := { } }, msgoytq7VAT SEND\\r\\nTo-Path: msrp://142.133.142.3:6060/j9EMds9SLZdZ;tcp\\r\\nFrom-Path: msrp://142.133.150.169:17076/SessionId18VAT;tcp\\r\\nMessage-ID: 83VXAA1G\\r\\nByte-Range: 1-296/296\\r\\nContent-Type: message/cpim\\r\\n\\r\\nTo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:29+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: 83VXAA1G\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002007 to 10014002006\\r\\n-------oytq7VAT$\\r\\n\")}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:31.378558", component: "850", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Outgoing message was mapped to @IPL4asp_Types.ASP_Send : { connId := 2, proto := { tcp := { } }, msgoytq7VAT SEND\\r\\nTo-Path: msrp://142.133.142.3:6060/j9EMds9SLZdZ;tcp\\r\\nFrom-Path: msrp://142.133.150.169:17076/SessionId18VAT;tcp\\r\\nMessage-ID: 83VXAA1G\\r\\nByte-Range: 1-296/296\\r\\nContent-Type: message/cpim\\r\\n\\r\\nTo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:29+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: 83VXAA1G\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002007 to 10014002006\\r\\n-------oytq7VAT$\\r\\n\")}" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.378778", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "343", function_name: "function:processCommand", message: " Sent on msrpInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.378872", component: "850", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "79", function_name: "function:msrpRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.378937", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "216", function_name: "function:receiveInternalMessage", message: " Message enqueued on msrpInternalPort[0] from 850 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.379021", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Receive operation on port msrpInternalPort[0] succeeded, message from 850: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.379052", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Message with id 5 was extracted from the queue of msrpInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.379074", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "218", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.379662", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.389721", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.389829", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "168", function_name: "function:sendInternalMessage", message: " Sent on msrpInternalPort[0] to 850 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.389968", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.389978", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "83", function_name: "function:msrpRun", message: " Message enqueued on msrpInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.390045", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Receive operation on port msrpInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.390091", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Message with id 5 was extracted from the queue of msrpInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.390110", component: "850", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "85", function_name: "function:msrpRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.390229", component: "850", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "383", function_name: "function:handleClosedConnectionByRemoteSide", message: " Start timer timerCheckMsrpQueue: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:31.397396", component: "850", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on msrpPort from system @IPL4asp_Types.ASP_RecvFrom : { connId := 2, remName := \"142.133.142.3\", remPort := 60548, locName := \"142.133.150.169\", locPort := 17076, proto := { tcp := { } }, userData := 0, msg := '4D535250206F7974713756415420323030204F4B0D0A546F2D506174683A206D7372703A2F2F3134322E3133332E3135302E3136393A31373037362F53657373696F6E496431385641543B7463700D0A46726F6D2D506174683A206D7372703A2F2F3134322E3133332E3134322E333A363036302F6A39454D647339534C5A645A3B7463700D0A2D2D2D2D2D2D2D6F79747137564154240D0A'O (\"MSRP oytq7VAT 200 OK\\r\\nTo-Path: msrp://142.133.150.169:17076/SessionId18VAT;tcp\\r\\nFrom-Path: msrp://142.133.142.3:6060/j9EMds9SLZdZ;tcp\\r\\n-------oytq7VAT$\\r\\n\")} id 3" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.397535", component: "850", peer_component: "BaseMsrpComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "385", function_name: "function:handleClosedConnectionByRemoteSide", message: " Incoming message was mapped to @IPL4_MSRP_demo_types" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.590270", component: "850", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "394", function_name: "function:handleClosedConnectionByRemoteSide", message: " Timeout timerCheckMsrpQueue: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.590440", component: "850", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "287", function_name: "function:baseReceiveMsrpMessage", message: " Start timer timerWaitForMsrpResponse: 15 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.590517", component: "850", peer_component: "BaseMsrpComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "290", function_name: "function:baseReceiveMsrpMessage", message: " Receive operation on port msrpPort succeeded, message from system(" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.590588", component: "850", peer_component: "BaseMsrpComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "290", function_name: "function:baseReceiveMsrpMessage", message: " Message with id 3 was extracted from the queue of msrpPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.590639", component: "850", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "295", function_name: "function:baseReceiveMsrpMessage", message: " Stop timer timerWaitForMsrpResponse: 15 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.590862", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "343", function_name: "function:processCommand", message: " Sent on msrpInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.590943", component: "850", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "79", function_name: "function:msrpRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.591141", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "216", function_name: "function:receiveInternalMessage", message: " Message enqueued on msrpInternalPort[0] from 850 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.591223", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Receive operation on port msrpInternalPort[0] succeeded, message from 850: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.591266", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Message with id 6 was extracted from the queue of msrpInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.591286", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "218", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.597406", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.609735", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "267", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:31.609867", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort[5] to 856 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"6\" } } }, aspHttp := { { httpMessage := { method := \"GET\", url := \"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/channels\", body := \"\", contentType := \"\", statusCode := \"\", header := { } } } }}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:31.609996", component: "856", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort from mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"6\" } } }, aspHttp := { { httpMessage := { method := \"GET\", url := \"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/channels\", body := \"\", contentType := \"\", statusCode := \"\", header := { } } } }} id 2" }
Structured  DataFrame { time: "2014/Oct/24 18:34:31.610065", component: "856", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort succeeded, message from mtc: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"6\" } } }, aspHttp := { { httpMessage := { method := \"GET\", url := \"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/channels\", body := \"\", contentType := \"\", statusCode := \"\", header := { } } } }} id 2" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.610087", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.610090", component: "856", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "67", function_name: "function:httpNodeRun", message: " Message with id 2 was extracted from the queue of httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.610105", component: "856", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "68", function_name: "function:httpNodeRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.610256", component: "856", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "307", function_name: "function:clearHTTPClientPort", message: " Start timer timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.610273", component: "856", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "313", function_name: "function:clearHTTPClientPort", message: " Timeout timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.610322", component: "856", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Sent on clientPort to system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.611028", component: "856", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Message enqueued on clientPort from system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.611058", component: "856", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "243", function_name: "function:sendHTTPClientRequest", message: " Start timer timerWaitForHTTPOpenConnection: 2 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.611081", component: "856", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Receive operation on port clientPort succeeded, message from system(" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.611097", component: "856", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Message with id 3 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.611111", component: "856", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "246", function_name: "function:sendHTTPClientRequest", message: " Stop timer timerWaitForHTTPOpenConnection: 2 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:31.611151", component: "856", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on clientPort to system @HTTPmsg_Types.HTTPMessage : { request := { client_id := 10, method := \"GET\", uri := \"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/channels\", version_major := 1, version_minor := 1, header := { { header_name := \"Host\", header_value := \"142.133.142.3\" }, { header_name := \"Content-Length\", header_value := \"0\" } }, body := \"\" }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.611226", component: "856", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "189", function_name: "function:receiveAnyHTTPClientResponse", message: " Start timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:31.626863", component: "856", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on clientPort from system @HTTPmsg_Types.HTTPMessage : { response := { client_id := 10, version_major := 1, version_minor := 1, statuscode := 200, statustext := \"OK\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:31 GMT\" } }, body := \"{\\n \\\"events\\\": {\\n \\\"list\\\": [ {\\n \\\"eventObject\\\": {\\n \\\"@type\\\": \\\"message\\\",\\n \\\"from\\\": \\\"sip:10014002007@ericsson.se\\\",\\n \\\"contentType\\\": \\\"text/plain\\\",\\n \\\"reportRequest\\\": [ \\\"Delivered\\\" ],\\n \\\"msgId\\\": \\\"83VXAA1G\\\",\\n \\\"dateTime\\\": \\\"2014-10-24T22:34:29+00:00\\\",\\n \\\"body\\\": \\\"Body message 10014002007 to 10014002006\\\",\\n \\\"type\\\": \\\"session-message\\\"\\n }\\n } ]\\n }\\n}\" }} id 4" }
Structured  DataFrame { time: "2014/Oct/24 18:34:31.626949", component: "856", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port clientPort succeeded, message from system(): @HTTPmsg_Types.HTTPMessage : { response := { client_id := 10, version_major := 1, version_minor := 1, statuscode := 200, statustext := \"OK\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:31 GMT\" } }, body := \"{\\n \\\"events\\\": {\\n \\\"list\\\": [ {\\n \\\"eventObject\\\": {\\n \\\"@type\\\": \\\"message\\\",\\n \\\"from\\\": \\\"sip:10014002007@ericsson.se\\\",\\n \\\"contentType\\\": \\\"text/plain\\\",\\n \\\"reportRequest\\\": [ \\\"Delivered\\\" ],\\n \\\"msgId\\\": \\\"83VXAA1G\\\",\\n \\\"dateTime\\\": \\\"2014-10-24T22:34:29+00:00\\\",\\n \\\"body\\\": \\\"Body message 10014002007 to 10014002006\\\",\\n \\\"type\\\": \\\"session-message\\\"\\n }\\n } ]\\n }\\n}\" }} id 4" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.626981", component: "856", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "193", function_name: "function:receiveAnyHTTPClientResponse", message: " Message with id 4 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.626999", component: "856", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "194", function_name: "function:receiveAnyHTTPClientResponse", message: " Stop timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:31.627107", component: "856", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort to mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\n \\\"events\\\": {\\n \\\"list\\\": [ {\\n \\\"eventObject\\\": {\\n \\\"@type\\\": \\\"message\\\",\\n \\\"from\\\": \\\"sip:10014002007@ericsson.se\\\",\\n \\\"contentType\\\": \\\"text/plain\\\",\\n \\\"reportRequest\\\": [ \\\"Delivered\\\" ],\\n \\\"msgId\\\": \\\"83VXAA1G\\\",\\n \\\"dateTime\\\": \\\"2014-10-24T22:34:29+00:00\\\",\\n \\\"body\\\": \\\"Body message 10014002007 to 10014002006\\\",\\n \\\"type\\\": \\\"session-message\\\"\\n }\\n } ]\\n }\\n}\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:31 GMT\" } } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.627182", component: "856", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "62", function_name: "function:httpNodeRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:31.627272", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort[5] from 856 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\n \\\"events\\\": {\\n \\\"list\\\": [ {\\n \\\"eventObject\\\": {\\n \\\"@type\\\": \\\"message\\\",\\n \\\"from\\\": \\\"sip:10014002007@ericsson.se\\\",\\n \\\"contentType\\\": \\\"text/plain\\\",\\n \\\"reportRequest\\\": [ \\\"Delivered\\\" ],\\n \\\"msgId\\\": \\\"83VXAA1G\\\",\\n \\\"dateTime\\\": \\\"2014-10-24T22:34:29+00:00\\\",\\n \\\"body\\\": \\\"Body message 10014002007 to 10014002006\\\",\\n \\\"type\\\": \\\"session-message\\\"\\n }\\n } ]\\n }\\n}\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:31 GMT\" } } } } }} id 3" }
Structured  DataFrame { time: "2014/Oct/24 18:34:31.627377", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort[5] succeeded, message from 856: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\n \\\"events\\\": {\\n \\\"list\\\": [ {\\n \\\"eventObject\\\": {\\n \\\"@type\\\": \\\"message\\\",\\n \\\"from\\\": \\\"sip:10014002007@ericsson.se\\\",\\n \\\"contentType\\\": \\\"text/plain\\\",\\n \\\"reportRequest\\\": [ \\\"Delivered\\\" ],\\n \\\"msgId\\\": \\\"83VXAA1G\\\",\\n \\\"dateTime\\\": \\\"2014-10-24T22:34:29+00:00\\\",\\n \\\"body\\\": \\\"Body message 10014002007 to 10014002006\\\",\\n \\\"type\\\": \\\"session-message\\\"\\n }\\n } ]\\n }\\n}\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:31 GMT\" } } } } }} id 3" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.627410", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Message with id 3 was extracted from the queue of httpNodeInternalPort[5]" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.627428", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "241", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.632536", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:31.633875", component: "850", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on msrpPort from system @IPL4asp_Types.ASP_RecvFrom : { connId := 2, remName := \"142.133.142.3\", remPort := 60548, locName := \"142.133.150.169\", locPort := 17076, proto := { tcp := { } }, userData := 0, msgybLNxKDg SEND\\r\\nTo-Path: msrp://142.133.150.169:17076/SessionId18VAT;tcp\\r\\nFrom-Path: msrp://142.133.142.3:6060/j9EMds9SLZdZ;tcp\\r\\nByte-Range: 1-578/578\\r\\nMessage-ID: imdn-BEFliYaO\\r\\nContent-Type: message/cpim\\r\\n\\r\\nTo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:31+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: imdn-BEFliYaO\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>83VXAA1G</message-id><datetime>2014-10-24T22:34:29+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\\r\\n-------ybLNxKDg$\\r\\n\")} id 4" }
Structured  DataFrame { time: "2014/Oct/24 18:34:31.634214", component: "850", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Incoming message was mapped to @IPL4_MSRP_demo_types.MSRP_RecvFrom : { connId := 2, remName := \"142.133.142.3\", remPort := 60548, locName := \"142.133.150.169\", locPort := 17076, proto := { tcp := { } }, userData := 0, msg := { request := { requestStart := { transactId := \"ybLNxKDg\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17076\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"j9EMds9SLZdZ\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"imdn-BEFliYaO\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"578\", total := \"578\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:31+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: imdn-BEFliYaO\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>83VXAA1G</message-id><datetime>2014-10-24T22:34:29+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\", binary_message := <unbound> }, endLine := { transactId := \"ybLNxKDg\", continuationFlag := \"$\" } } }, binary_messageo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:31+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: imdn-BEFliYaO\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>83VXAA1G</message-id><datetime>2014-10-24T22:34:29+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\")} id 4" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.645741", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.645827", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "168", function_name: "function:sendInternalMessage", message: " Sent on msrpInternalPort[0] to 850 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.645942", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.645948", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "83", function_name: "function:msrpRun", message: " Message enqueued on msrpInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.646003", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Receive operation on port msrpInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.646025", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Message with id 6 was extracted from the queue of msrpInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.646040", component: "850", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "85", function_name: "function:msrpRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.646147", component: "850", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "383", function_name: "function:handleClosedConnectionByRemoteSide", message: " Start timer timerCheckMsrpQueue: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.846170", component: "850", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "394", function_name: "function:handleClosedConnectionByRemoteSide", message: " Timeout timerCheckMsrpQueue: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.846374", component: "850", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "287", function_name: "function:baseReceiveMsrpMessage", message: " Start timer timerWaitForMsrpResponse: 15 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:31.846544", component: "850", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port msrpPort succeeded, message from system(): @IPL4_MSRP_demo_types.MSRP_RecvFrom : { connId := 2, remName := \"142.133.142.3\", remPort := 60548, locName := \"142.133.150.169\", locPort := 17076, proto := { tcp := { } }, userData := 0, msg := { request := { requestStart := { transactId := \"ybLNxKDg\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17076\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"j9EMds9SLZdZ\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"imdn-BEFliYaO\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"578\", total := \"578\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:31+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: imdn-BEFliYaO\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>83VXAA1G</message-id><datetime>2014-10-24T22:34:29+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\", binary_message := <unbound> }, endLine := { transactId := \"ybLNxKDg\", continuationFlag := \"$\" } } }, binary_messageo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:31+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: imdn-BEFliYaO\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>83VXAA1G</message-id><datetime>2014-10-24T22:34:29+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\")} id 4" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.846602", component: "850", peer_component: "BaseMsrpComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "290", function_name: "function:baseReceiveMsrpMessage", message: " Message with id 4 was extracted from the queue of msrpPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.846667", component: "850", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "295", function_name: "function:baseReceiveMsrpMessage", message: " Stop timer timerWaitForMsrpResponse: 15 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:31.847001", component: "850", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on msrpInternalPort to mtc @variables.internalPortMessageWithMsrpMessages : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_MSRP_EXPECT_MESSAGE\" } } }, msrpMessages := { { request := { requestStart := { transactId := \"ybLNxKDg\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17076\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"j9EMds9SLZdZ\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"imdn-BEFliYaO\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"578\", total := \"578\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:31+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: imdn-BEFliYaO\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>83VXAA1G</message-id><datetime>2014-10-24T22:34:29+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\", binary_messageo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:31+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: imdn-BEFliYaO\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>83VXAA1G</message-id><datetime>2014-10-24T22:34:29+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\") }, endLine := { transactId := \"ybLNxKDg\", continuationFlag := \"$\" } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.847108", component: "850", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "79", function_name: "function:msrpRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:31.847317", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on msrpInternalPort[0] from 850 @variables.internalPortMessageWithMsrpMessages : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_MSRP_EXPECT_MESSAGE\" } } }, msrpMessages := { { request := { requestStart := { transactId := \"ybLNxKDg\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17076\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"j9EMds9SLZdZ\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"imdn-BEFliYaO\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"578\", total := \"578\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:31+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: imdn-BEFliYaO\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>83VXAA1G</message-id><datetime>2014-10-24T22:34:29+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\", binary_messageo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:31+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: imdn-BEFliYaO\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>83VXAA1G</message-id><datetime>2014-10-24T22:34:29+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\") }, endLine := { transactId := \"ybLNxKDg\", continuationFlag := \"$\" } } } }} id 7" }
Structured  DataFrame { time: "2014/Oct/24 18:34:31.847511", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port msrpInternalPort[0] succeeded, message from 850: @variables.internalPortMessageWithMsrpMessages : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_MSRP_EXPECT_MESSAGE\" } } }, msrpMessages := { { request := { requestStart := { transactId := \"ybLNxKDg\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17076\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"j9EMds9SLZdZ\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"imdn-BEFliYaO\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"578\", total := \"578\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:31+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: imdn-BEFliYaO\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>83VXAA1G</message-id><datetime>2014-10-24T22:34:29+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\", binary_messageo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:31+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: imdn-BEFliYaO\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>83VXAA1G</message-id><datetime>2014-10-24T22:34:29+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\") }, endLine := { transactId := \"ybLNxKDg\", continuationFlag := \"$\" } } } }} id 7" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.847565", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Message with id 7 was extracted from the queue of msrpInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.847584", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "218", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.850095", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.861482", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.861603", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "168", function_name: "function:sendInternalMessage", message: " Sent on msrpInternalPort[0] to 850 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.861738", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "83", function_name: "function:msrpRun", message: " Message enqueued on msrpInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.861774", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.861800", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Receive operation on port msrpInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.861825", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Message with id 7 was extracted from the queue of msrpInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.861851", component: "850", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "85", function_name: "function:msrpRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.861989", component: "850", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "383", function_name: "function:handleClosedConnectionByRemoteSide", message: " Start timer timerCheckMsrpQueue: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.062014", component: "850", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "394", function_name: "function:handleClosedConnectionByRemoteSide", message: " Timeout timerCheckMsrpQueue: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:32.062284", component: "850", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on msrpPort to system @IPL4_MSRP_demo_types.MSRP_Send : { connId := 2, proto := { tcp := { } }, msg := '4D5352502079624C4E784B446720323030204F4B0D0A546F2D506174683A206D7372703A2F2F3134322E3133332E3134322E333A363036302F6A39454D647339534C5A645A3B7463700D0A46726F6D2D506174683A206D7372703A2F2F3134322E3133332E3135302E3136393A31373037362F53657373696F6E496431385641543B7463700D0A2D2D2D2D2D2D2D79624C4E784B4467240D0A'O (\"MSRP ybLNxKDg 200 OK\\r\\nTo-Path: msrp://142.133.142.3:6060/j9EMds9SLZdZ;tcp\\r\\nFrom-Path: msrp://142.133.150.169:17076/SessionId18VAT;tcp\\r\\n-------ybLNxKDg$\\r\\n\")}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:32.062363", component: "850", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Outgoing message was mapped to @IPL4asp_Types.ASP_Send : { connId := 2, proto := { tcp := { } }, msg := '4D5352502079624C4E784B446720323030204F4B0D0A546F2D506174683A206D7372703A2F2F3134322E3133332E3134322E333A363036302F6A39454D647339534C5A645A3B7463700D0A46726F6D2D506174683A206D7372703A2F2F3134322E3133332E3135302E3136393A31373037362F53657373696F6E496431385641543B7463700D0A2D2D2D2D2D2D2D79624C4E784B4467240D0A'O (\"MSRP ybLNxKDg 200 OK\\r\\nTo-Path: msrp://142.133.142.3:6060/j9EMds9SLZdZ;tcp\\r\\nFrom-Path: msrp://142.133.150.169:17076/SessionId18VAT;tcp\\r\\n-------ybLNxKDg$\\r\\n\")}" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.062513", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "343", function_name: "function:processCommand", message: " Sent on msrpInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.062572", component: "850", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "79", function_name: "function:msrpRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.062649", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "216", function_name: "function:receiveInternalMessage", message: " Message enqueued on msrpInternalPort[0] from 850 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.062756", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Receive operation on port msrpInternalPort[0] succeeded, message from 850: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.062791", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Message with id 8 was extracted from the queue of msrpInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.062812", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "218", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.067459", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.077503", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:32.077762", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on msrpInternalPort[1] to 857 @variables.internalPortMessageWithMsrpMessages : { internalMessage := { description := \"COMMAND_MSRP_SEND_MESSAGE\", parameters := { { parameterName := \"LISTENER_PORT\", parameterValue := \"17077\" } } }, msrpMessages := { { request := { requestStart := { transactId := \"48177VAT\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"rFhqxHwhogoX\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17077\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"78239VAT\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"*\", total := \"*\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2013-10-01T13:33:33+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: VAT_imdn_xx1xx\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>83VXAA1G</message-id><datetime>2014-10-24T22:34:29+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\", binary_message := omit }, endLine := { transactId := \"48177VAT\", continuationFlag := \"$\" } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.077938", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:32.078067", component: "857", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on msrpInternalPort from mtc @variables.internalPortMessageWithMsrpMessages : { internalMessage := { description := \"COMMAND_MSRP_SEND_MESSAGE\", parameters := { { parameterName := \"LISTENER_PORT\", parameterValue := \"17077\" } } }, msrpMessages := { { request := { requestStart := { transactId := \"48177VAT\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"rFhqxHwhogoX\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17077\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"78239VAT\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"*\", total := \"*\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2013-10-01T13:33:33+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: VAT_imdn_xx1xx\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>83VXAA1G</message-id><datetime>2014-10-24T22:34:29+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\", binary_message := omit }, endLine := { transactId := \"48177VAT\", continuationFlag := \"$\" } } } }} id 5" }
Structured  DataFrame { time: "2014/Oct/24 18:34:32.078337", component: "857", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port msrpInternalPort succeeded, message from mtc: @variables.internalPortMessageWithMsrpMessages : { internalMessage := { description := \"COMMAND_MSRP_SEND_MESSAGE\", parameters := { { parameterName := \"LISTENER_PORT\", parameterValue := \"17077\" } } }, msrpMessages := { { request := { requestStart := { transactId := \"48177VAT\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"rFhqxHwhogoX\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17077\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"78239VAT\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"*\", total := \"*\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2013-10-01T13:33:33+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: VAT_imdn_xx1xx\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>83VXAA1G</message-id><datetime>2014-10-24T22:34:29+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\", binary_message := omit }, endLine := { transactId := \"48177VAT\", continuationFlag := \"$\" } } } }} id 5" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.078406", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Message with id 5 was extracted from the queue of msrpInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.078436", component: "857", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "85", function_name: "function:msrpRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.078629", component: "857", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "383", function_name: "function:handleClosedConnectionByRemoteSide", message: " Start timer timerCheckMsrpQueue: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.282241", component: "857", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "394", function_name: "function:handleClosedConnectionByRemoteSide", message: " Timeout timerCheckMsrpQueue: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:32.282652", component: "857", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on msrpPort to system @IPL4_MSRP_demo_types.MSRP_Send : { connId := 1, proto := { tcp := { } }, msgr\\nTo-Path: msrp://142.133.142.3:6060/rFhqxHwhogoX;tcp\\r\\nFrom-Path: msrp://142.133.150.169:17077/SessionId18VAT;tcp\\r\\nMessage-ID: 78239VAT\\r\\nByte-Range: 1-*/*\\r\\nContent-Type: message/cpim\\r\\n\\r\\nTo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2013-10-01T13:33:33+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: VAT_imdn_xx1xx\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>83VXAA1G</message-id><datetime>2014-10-24T22:34:29+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\\r\\n-------48177VAT$\\r\\n\")}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:32.282844", component: "857", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Outgoing message was mapped to @IPL4asp_Types.ASP_Send : { connId := 1, proto := { tcp := { } }, msgr\\nTo-Path: msrp://142.133.142.3:6060/rFhqxHwhogoX;tcp\\r\\nFrom-Path: msrp://142.133.150.169:17077/SessionId18VAT;tcp\\r\\nMessage-ID: 78239VAT\\r\\nByte-Range: 1-*/*\\r\\nContent-Type: message/cpim\\r\\n\\r\\nTo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2013-10-01T13:33:33+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: VAT_imdn_xx1xx\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>83VXAA1G</message-id><datetime>2014-10-24T22:34:29+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\\r\\n-------48177VAT$\\r\\n\")}" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.283072", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "343", function_name: "function:processCommand", message: " Sent on msrpInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.283162", component: "857", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "79", function_name: "function:msrpRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.283335", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "216", function_name: "function:receiveInternalMessage", message: " Message enqueued on msrpInternalPort[1] from 857 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.283495", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Receive operation on port msrpInternalPort[1] succeeded, message from 857: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.283555", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Message with id 6 was extracted from the queue of msrpInternalPort[1]" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.283603", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "218", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.284525", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.294592", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.294785", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "168", function_name: "function:sendInternalMessage", message: " Sent on msrpInternalPort[1] to 857 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.294962", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "83", function_name: "function:msrpRun", message: " Message enqueued on msrpInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.295015", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.295042", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Receive operation on port msrpInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.295074", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Message with id 6 was extracted from the queue of msrpInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.295094", component: "857", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "85", function_name: "function:msrpRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.295224", component: "857", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "383", function_name: "function:handleClosedConnectionByRemoteSide", message: " Start timer timerCheckMsrpQueue: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:32.297625", component: "857", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on msrpPort from system @IPL4asp_Types.ASP_RecvFrom : { connId := 1, remName := \"142.133.142.3\", remPort := 6060, locName := \"142.133.150.169\", locPort := 17077, proto := { tcp := { } }, userData := 0, msg := '4D53525020343831373756415420323030204F4B0D0A546F2D506174683A206D7372703A2F2F3134322E3133332E3135302E3136393A31373037372F53657373696F6E496431385641543B7463700D0A46726F6D2D506174683A206D7372703A2F2F3134322E3133332E3134322E333A363036302F72466871784877686F676F583B7463700D0A2D2D2D2D2D2D2D3438313737564154240D0A'O (\"MSRP 48177VAT 200 OK\\r\\nTo-Path: msrp://142.133.150.169:17077/SessionId18VAT;tcp\\r\\nFrom-Path: msrp://142.133.142.3:6060/rFhqxHwhogoX;tcp\\r\\n-------48177VAT$\\r\\n\")} id 3" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.297812", component: "857", peer_component: "BaseMsrpComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "385", function_name: "function:handleClosedConnectionByRemoteSide", message: " Incoming message was mapped to @IPL4_MSRP_demo_types" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.497553", component: "857", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "394", function_name: "function:handleClosedConnectionByRemoteSide", message: " Timeout timerCheckMsrpQueue: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.497806", component: "857", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "287", function_name: "function:baseReceiveMsrpMessage", message: " Start timer timerWaitForMsrpResponse: 15 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.497912", component: "857", peer_component: "BaseMsrpComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "290", function_name: "function:baseReceiveMsrpMessage", message: " Receive operation on port msrpPort succeeded, message from system(" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.497958", component: "857", peer_component: "BaseMsrpComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "290", function_name: "function:baseReceiveMsrpMessage", message: " Message with id 3 was extracted from the queue of msrpPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.498018", component: "857", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "295", function_name: "function:baseReceiveMsrpMessage", message: " Stop timer timerWaitForMsrpResponse: 15 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.498409", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "343", function_name: "function:processCommand", message: " Sent on msrpInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.498516", component: "857", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "79", function_name: "function:msrpRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.498648", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "216", function_name: "function:receiveInternalMessage", message: " Message enqueued on msrpInternalPort[1] from 857 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.498772", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Receive operation on port msrpInternalPort[1] succeeded, message from 857: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.498840", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Message with id 7 was extracted from the queue of msrpInternalPort[1]" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.498872", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "218", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.502714", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.513524", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "267", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:32.513845", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort[4] to 855 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"7\" } } }, aspHttp := { { httpMessage := { method := \"GET\", url := \"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/channels\", body := \"\", contentType := \"\", statusCode := \"\", header := { } } } }}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:32.514070", component: "855", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort from mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"7\" } } }, aspHttp := { { httpMessage := { method := \"GET\", url := \"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/channels\", body := \"\", contentType := \"\", statusCode := \"\", header := { } } } }} id 2" }
Structured  DataFrame { time: "2014/Oct/24 18:34:32.514235", component: "855", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort succeeded, message from mtc: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"7\" } } }, aspHttp := { { httpMessage := { method := \"GET\", url := \"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/channels\", body := \"\", contentType := \"\", statusCode := \"\", header := { } } } }} id 2" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.514244", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.514299", component: "855", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "67", function_name: "function:httpNodeRun", message: " Message with id 2 was extracted from the queue of httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.514325", component: "855", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "68", function_name: "function:httpNodeRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.514576", component: "855", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "307", function_name: "function:clearHTTPClientPort", message: " Start timer timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.514604", component: "855", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "313", function_name: "function:clearHTTPClientPort", message: " Timeout timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.514680", component: "855", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Sent on clientPort to system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.515518", component: "855", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Message enqueued on clientPort from system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.515563", component: "855", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "243", function_name: "function:sendHTTPClientRequest", message: " Start timer timerWaitForHTTPOpenConnection: 2 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.515599", component: "855", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Receive operation on port clientPort succeeded, message from system(" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.515624", component: "855", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Message with id 3 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.515646", component: "855", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "246", function_name: "function:sendHTTPClientRequest", message: " Stop timer timerWaitForHTTPOpenConnection: 2 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:32.515718", component: "855", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on clientPort to system @HTTPmsg_Types.HTTPMessage : { request := { client_id := 10, method := \"GET\", uri := \"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/channels\", version_major := 1, version_minor := 1, header := { { header_name := \"Host\", header_value := \"142.133.142.3\" }, { header_name := \"Content-Length\", header_value := \"0\" } }, body := \"\" }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.515835", component: "855", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "189", function_name: "function:receiveAnyHTTPClientResponse", message: " Start timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:32.529176", component: "855", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on clientPort from system @HTTPmsg_Types.HTTPMessage : { response := { client_id := 10, version_major := 1, version_minor := 1, statuscode := 200, statustext := \"OK\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:31 GMT\" } }, body := \"{\\n \\\"events\\\": {\\n \\\"list\\\": [ {\\n \\\"eventObject\\\": {\\n \\\"@type\\\": \\\"MessageStatusNotification\\\",\\n \\\"chatMessageStatusNotification\\\": {\\n \\\"link\\\": [ {\\n \\\"href\\\": \\\"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/chat/v1/sip:10014002007@ericsson.se/oneToOne/sip:10014002006@ericsson.se/adhoc\\\",\\n \\\"rel\\\": \\\"ChatSessionInformation\\\"\\n }, {\\n \\\"href\\\": \\\"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/chat/v1/sip:10014002007@ericsson.se/oneToOne/sip:10014002006@ericsson.se/adhoc/messages/83VXAA1G\\\",\\n \\\"rel\\\": \\\"ChatMessage\\\"\\n } ],\\n \\\"status\\\": \\\"Delivered\\\"\\n },\\n \\\"originalDateTime\\\": \\\"2014-10-24T22:34:29+00:00\\\",\\n \\\"dateTime\\\": \\\"2013-10-01T13:33:33+00:00\\\"\\n }\\n } ]\\n }\\n}\" }} id 4" }
Structured  DataFrame { time: "2014/Oct/24 18:34:32.529375", component: "855", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port clientPort succeeded, message from system(): @HTTPmsg_Types.HTTPMessage : { response := { client_id := 10, version_major := 1, version_minor := 1, statuscode := 200, statustext := \"OK\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:31 GMT\" } }, body := \"{\\n \\\"events\\\": {\\n \\\"list\\\": [ {\\n \\\"eventObject\\\": {\\n \\\"@type\\\": \\\"MessageStatusNotification\\\",\\n \\\"chatMessageStatusNotification\\\": {\\n \\\"link\\\": [ {\\n \\\"href\\\": \\\"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/chat/v1/sip:10014002007@ericsson.se/oneToOne/sip:10014002006@ericsson.se/adhoc\\\",\\n \\\"rel\\\": \\\"ChatSessionInformation\\\"\\n }, {\\n \\\"href\\\": \\\"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/chat/v1/sip:10014002007@ericsson.se/oneToOne/sip:10014002006@ericsson.se/adhoc/messages/83VXAA1G\\\",\\n \\\"rel\\\": \\\"ChatMessage\\\"\\n } ],\\n \\\"status\\\": \\\"Delivered\\\"\\n },\\n \\\"originalDateTime\\\": \\\"2014-10-24T22:34:29+00:00\\\",\\n \\\"dateTime\\\": \\\"2013-10-01T13:33:33+00:00\\\"\\n }\\n } ]\\n }\\n}\" }} id 4" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.529424", component: "855", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "193", function_name: "function:receiveAnyHTTPClientResponse", message: " Message with id 4 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.529451", component: "855", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "194", function_name: "function:receiveAnyHTTPClientResponse", message: " Stop timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:32.529661", component: "855", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort to mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\n \\\"events\\\": {\\n \\\"list\\\": [ {\\n \\\"eventObject\\\": {\\n \\\"@type\\\": \\\"MessageStatusNotification\\\",\\n \\\"chatMessageStatusNotification\\\": {\\n \\\"link\\\": [ {\\n \\\"href\\\": \\\"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/chat/v1/sip:10014002007@ericsson.se/oneToOne/sip:10014002006@ericsson.se/adhoc\\\",\\n \\\"rel\\\": \\\"ChatSessionInformation\\\"\\n }, {\\n \\\"href\\\": \\\"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/chat/v1/sip:10014002007@ericsson.se/oneToOne/sip:10014002006@ericsson.se/adhoc/messages/83VXAA1G\\\",\\n \\\"rel\\\": \\\"ChatMessage\\\"\\n } ],\\n \\\"status\\\": \\\"Delivered\\\"\\n },\\n \\\"originalDateTime\\\": \\\"2014-10-24T22:34:29+00:00\\\",\\n \\\"dateTime\\\": \\\"2013-10-01T13:33:33+00:00\\\"\\n }\\n } ]\\n }\\n}\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:31 GMT\" } } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.529794", component: "855", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "62", function_name: "function:httpNodeRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:32.530008", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort[4] from 855 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\n \\\"events\\\": {\\n \\\"list\\\": [ {\\n \\\"eventObject\\\": {\\n \\\"@type\\\": \\\"MessageStatusNotification\\\",\\n \\\"chatMessageStatusNotification\\\": {\\n \\\"link\\\": [ {\\n \\\"href\\\": \\\"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/chat/v1/sip:10014002007@ericsson.se/oneToOne/sip:10014002006@ericsson.se/adhoc\\\",\\n \\\"rel\\\": \\\"ChatSessionInformation\\\"\\n }, {\\n \\\"href\\\": \\\"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/chat/v1/sip:10014002007@ericsson.se/oneToOne/sip:10014002006@ericsson.se/adhoc/messages/83VXAA1G\\\",\\n \\\"rel\\\": \\\"ChatMessage\\\"\\n } ],\\n \\\"status\\\": \\\"Delivered\\\"\\n },\\n \\\"originalDateTime\\\": \\\"2014-10-24T22:34:29+00:00\\\",\\n \\\"dateTime\\\": \\\"2013-10-01T13:33:33+00:00\\\"\\n }\\n } ]\\n }\\n}\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:31 GMT\" } } } } }} id 3" }
Structured  DataFrame { time: "2014/Oct/24 18:34:32.530194", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort[4] succeeded, message from 855: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\n \\\"events\\\": {\\n \\\"list\\\": [ {\\n \\\"eventObject\\\": {\\n \\\"@type\\\": \\\"MessageStatusNotification\\\",\\n \\\"chatMessageStatusNotification\\\": {\\n \\\"link\\\": [ {\\n \\\"href\\\": \\\"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/chat/v1/sip:10014002007@ericsson.se/oneToOne/sip:10014002006@ericsson.se/adhoc\\\",\\n \\\"rel\\\": \\\"ChatSessionInformation\\\"\\n }, {\\n \\\"href\\\": \\\"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/chat/v1/sip:10014002007@ericsson.se/oneToOne/sip:10014002006@ericsson.se/adhoc/messages/83VXAA1G\\\",\\n \\\"rel\\\": \\\"ChatMessage\\\"\\n } ],\\n \\\"status\\\": \\\"Delivered\\\"\\n },\\n \\\"originalDateTime\\\": \\\"2014-10-24T22:34:29+00:00\\\",\\n \\\"dateTime\\\": \\\"2013-10-01T13:33:33+00:00\\\"\\n }\\n } ]\\n }\\n}\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:31 GMT\" } } } } }} id 3" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.530246", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Message with id 3 was extracted from the queue of httpNodeInternalPort[4]" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.530276", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "241", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.533271", component: "mtc", peer_component: "lib", event_type: "TIMEROP", event_description: "ttcn", port: "114", function_name: "function:sleep", message: " Start timer timerGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.685790", component: "mtc", peer_component: "lib", event_type: "TIMEROP", event_description: "ttcn", port: "115", function_name: "function:sleep", message: " Timeout timerGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.686815", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.697647", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "267", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:32.698184", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort[1] to 852 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"PARAM_PORT_OVERRIDE\", parameterValue := \"8888\" } } }, aspHttp := { { httpMessage := { method := \"POST\", url := \"/jolokia/\", body := \"[ { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,successfulTerminating=successfulTerminating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,successfulOriginating=successfulOriginating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulOriginating=unsuccessfulOriginating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulTerminating=unsuccessfulTerminating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,textMessages=textMessages-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,mediaMessages=mediaMessages-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,MSRPSession=MSRPSession-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=GAUGE,format=INTEGER,MSRPCurrentlyActive=MSRPCurrentlyActive1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } ] \", contentType := \"application/json\", statusCode := \"\", header := omit } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.698498", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:32.699059", component: "852", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort from mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"PARAM_PORT_OVERRIDE\", parameterValue := \"8888\" } } }, aspHttp := { { httpMessage := { method := \"POST\", url := \"/jolokia/\", body := \"[ { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,successfulTerminating=successfulTerminating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,successfulOriginating=successfulOriginating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulOriginating=unsuccessfulOriginating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulTerminating=unsuccessfulTerminating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,textMessages=textMessages-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,mediaMessages=mediaMessages-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,MSRPSession=MSRPSession-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=GAUGE,format=INTEGER,MSRPCurrentlyActive=MSRPCurrentlyActive1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } ] \", contentType := \"application/json\", statusCode := \"\", header := omit } } }} id 3" }
Structured  DataFrame { time: "2014/Oct/24 18:34:32.699512", component: "852", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort succeeded, message from mtc: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"PARAM_PORT_OVERRIDE\", parameterValue := \"8888\" } } }, aspHttp := { { httpMessage := { method := \"POST\", url := \"/jolokia/\", body := \"[ { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,successfulTerminating=successfulTerminating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,successfulOriginating=successfulOriginating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulOriginating=unsuccessfulOriginating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulTerminating=unsuccessfulTerminating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,textMessages=textMessages-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,mediaMessages=mediaMessages-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,MSRPSession=MSRPSession-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=GAUGE,format=INTEGER,MSRPCurrentlyActive=MSRPCurrentlyActive1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } ] \", contentType := \"application/json\", statusCode := \"\", header := omit } } }} id 3" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.699642", component: "852", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "67", function_name: "function:httpNodeRun", message: " Message with id 3 was extracted from the queue of httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.699692", component: "852", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "68", function_name: "function:httpNodeRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.699977", component: "852", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "307", function_name: "function:clearHTTPClientPort", message: " Start timer timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.700021", component: "852", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "313", function_name: "function:clearHTTPClientPort", message: " Timeout timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.700154", component: "852", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Sent on clientPort to system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.700952", component: "852", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Message enqueued on clientPort from system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.701014", component: "852", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "243", function_name: "function:sendHTTPClientRequest", message: " Start timer timerWaitForHTTPOpenConnection: 2 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.701072", component: "852", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Receive operation on port clientPort succeeded, message from system(" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.701120", component: "852", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Message with id 5 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.701163", component: "852", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "246", function_name: "function:sendHTTPClientRequest", message: " Stop timer timerWaitForHTTPOpenConnection: 2 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:32.701531", component: "852", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on clientPort to system @HTTPmsg_Types.HTTPMessage : { request := { client_id := 11, method := \"POST\", uri := \"/jolokia/\", version_major := 1, version_minor := 1, header := { { header_name := \"Host\", header_value := \"142.133.142.3\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Content-Length\", header_value := \"1971\" } }, body := \"[ { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,successfulTerminating=successfulTerminating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,successfulOriginating=successfulOriginating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulOriginating=unsuccessfulOriginating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulTerminating=unsuccessfulTerminating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,textMessages=textMessages-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,mediaMessages=mediaMessages-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,MSRPSession=MSRPSession-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=GAUGE,format=INTEGER,MSRPCurrentlyActive=MSRPCurrentlyActive1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } ] \" }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.701746", component: "852", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "189", function_name: "function:receiveAnyHTTPClientResponse", message: " Start timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:32.709115", component: "852", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on clientPort from system @HTTPmsg_Types.HTTPMessage : { response := { client_id := 11, version_major := 1, version_minor := 1, statuscode := 200, statustext := \"OK\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache\" }, { header_name := \"Pragma\", header_value := \"no-cache\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:32 GMT\" }, { header_name := \"Expires\", header_value := \"Fri, 24 Oct 2014 21:34:32 GMT\" }, { header_name := \"Content-Type\", header_value := \"text/plain;charset=utf-8\" }, { header_name := \"Content-Length\", header_value := \"1762\" } }, body := \"[{\\\"timestamp\\\":1414190072,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,successfulTerminating=successfulTerminating-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":2},{\\\"timestamp\\\":1414190072,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,successfulOriginating=successfulOriginating-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":2},{\\\"timestamp\\\":1414190072,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulOriginating=unsuccessfulOriginating-1\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":1},{\\\"timestamp\\\":1414190072,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulTerminating=unsuccessfulTerminating-1\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":1},{\\\"timestamp\\\":1414190072,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,textMessages=textMessages-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":4},{\\\"timestamp\\\":1414190072,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,mediaMessages=mediaMessages-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190072,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,MSRPSession=MSRPSession-1,interface=WcgChatCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":2},{\\\"timestamp\\\":1414190072,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,MSRPCurrentlyActive=MSRPCurrentlyActive1,format=INTEGER,interface=WcgGlobalCounterGroup,type=GAUGE\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":2}]\" }} id 6" }
Structured  DataFrame { time: "2014/Oct/24 18:34:32.709441", component: "852", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port clientPort succeeded, message from system(): @HTTPmsg_Types.HTTPMessage : { response := { client_id := 11, version_major := 1, version_minor := 1, statuscode := 200, statustext := \"OK\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache\" }, { header_name := \"Pragma\", header_value := \"no-cache\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:32 GMT\" }, { header_name := \"Expires\", header_value := \"Fri, 24 Oct 2014 21:34:32 GMT\" }, { header_name := \"Content-Type\", header_value := \"text/plain;charset=utf-8\" }, { header_name := \"Content-Length\", header_value := \"1762\" } }, body := \"[{\\\"timestamp\\\":1414190072,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,successfulTerminating=successfulTerminating-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":2},{\\\"timestamp\\\":1414190072,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,successfulOriginating=successfulOriginating-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":2},{\\\"timestamp\\\":1414190072,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulOriginating=unsuccessfulOriginating-1\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":1},{\\\"timestamp\\\":1414190072,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulTerminating=unsuccessfulTerminating-1\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":1},{\\\"timestamp\\\":1414190072,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,textMessages=textMessages-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":4},{\\\"timestamp\\\":1414190072,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,mediaMessages=mediaMessages-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190072,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,MSRPSession=MSRPSession-1,interface=WcgChatCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":2},{\\\"timestamp\\\":1414190072,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,MSRPCurrentlyActive=MSRPCurrentlyActive1,format=INTEGER,interface=WcgGlobalCounterGroup,type=GAUGE\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":2}]\" }} id 6" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.709500", component: "852", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "193", function_name: "function:receiveAnyHTTPClientResponse", message: " Message with id 6 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.709527", component: "852", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "194", function_name: "function:receiveAnyHTTPClientResponse", message: " Stop timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:32.709858", component: "852", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort to mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"[{\\\"timestamp\\\":1414190072,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,successfulTerminating=successfulTerminating-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":2},{\\\"timestamp\\\":1414190072,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,successfulOriginating=successfulOriginating-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":2},{\\\"timestamp\\\":1414190072,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulOriginating=unsuccessfulOriginating-1\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":1},{\\\"timestamp\\\":1414190072,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulTerminating=unsuccessfulTerminating-1\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":1},{\\\"timestamp\\\":1414190072,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,textMessages=textMessages-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":4},{\\\"timestamp\\\":1414190072,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,mediaMessages=mediaMessages-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190072,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,MSRPSession=MSRPSession-1,interface=WcgChatCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":2},{\\\"timestamp\\\":1414190072,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,MSRPCurrentlyActive=MSRPCurrentlyActive1,format=INTEGER,interface=WcgGlobalCounterGroup,type=GAUGE\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":2}]\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache\" }, { header_name := \"Pragma\", header_value := \"no-cache\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:32 GMT\" }, { header_name := \"Expires\", header_value := \"Fri, 24 Oct 2014 21:34:32 GMT\" }, { header_name := \"Content-Type\", header_value := \"text/plain;charset=utf-8\" }, { header_name := \"Content-Length\", header_value := \"1762\" } } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.710059", component: "852", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "62", function_name: "function:httpNodeRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:32.710457", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort[1] from 852 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"[{\\\"timestamp\\\":1414190072,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,successfulTerminating=successfulTerminating-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":2},{\\\"timestamp\\\":1414190072,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,successfulOriginating=successfulOriginating-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":2},{\\\"timestamp\\\":1414190072,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulOriginating=unsuccessfulOriginating-1\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":1},{\\\"timestamp\\\":1414190072,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulTerminating=unsuccessfulTerminating-1\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":1},{\\\"timestamp\\\":1414190072,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,textMessages=textMessages-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":4},{\\\"timestamp\\\":1414190072,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,mediaMessages=mediaMessages-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190072,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,MSRPSession=MSRPSession-1,interface=WcgChatCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":2},{\\\"timestamp\\\":1414190072,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,MSRPCurrentlyActive=MSRPCurrentlyActive1,format=INTEGER,interface=WcgGlobalCounterGroup,type=GAUGE\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":2}]\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache\" }, { header_name := \"Pragma\", header_value := \"no-cache\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:32 GMT\" }, { header_name := \"Expires\", header_value := \"Fri, 24 Oct 2014 21:34:32 GMT\" }, { header_name := \"Content-Type\", header_value := \"text/plain;charset=utf-8\" }, { header_name := \"Content-Length\", header_value := \"1762\" } } } } }} id 4" }
Structured  DataFrame { time: "2014/Oct/24 18:34:32.710802", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort[1] succeeded, message from 852: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"[{\\\"timestamp\\\":1414190072,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,successfulTerminating=successfulTerminating-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":2},{\\\"timestamp\\\":1414190072,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,successfulOriginating=successfulOriginating-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":2},{\\\"timestamp\\\":1414190072,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulOriginating=unsuccessfulOriginating-1\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":1},{\\\"timestamp\\\":1414190072,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulTerminating=unsuccessfulTerminating-1\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":1},{\\\"timestamp\\\":1414190072,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,textMessages=textMessages-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":4},{\\\"timestamp\\\":1414190072,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,mediaMessages=mediaMessages-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190072,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,MSRPSession=MSRPSession-1,interface=WcgChatCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":2},{\\\"timestamp\\\":1414190072,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,MSRPCurrentlyActive=MSRPCurrentlyActive1,format=INTEGER,interface=WcgGlobalCounterGroup,type=GAUGE\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":2}]\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache\" }, { header_name := \"Pragma\", header_value := \"no-cache\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:32 GMT\" }, { header_name := \"Expires\", header_value := \"Fri, 24 Oct 2014 21:34:32 GMT\" }, { header_name := \"Content-Type\", header_value := \"text/plain;charset=utf-8\" }, { header_name := \"Content-Length\", header_value := \"1762\" } } } } }} id 4" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.710889", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Message with id 4 was extracted from the queue of httpNodeInternalPort[1]" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.710921", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "241", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.715001", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.725523", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "267", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:32.725805", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort[2] to 853 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"9\" } } }, aspHttp := { { httpMessage := { method := \"POST\", url := \"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/message/send\", body := \"{ \\\"to\\\": \\\"sip:10014002007@ericsson.se\\\", \\\"body\\\": \\\"Body message 10014002006 to 10014002007\\\", \\\"contentType\\\": \\\"text/plain\\\"} \", contentType := \"application/json\", statusCode := \"\", header := { } } } }}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:32.726016", component: "853", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort from mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"9\" } } }, aspHttp := { { httpMessage := { method := \"POST\", url := \"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/message/send\", body := \"{ \\\"to\\\": \\\"sip:10014002007@ericsson.se\\\", \\\"body\\\": \\\"Body message 10014002006 to 10014002007\\\", \\\"contentType\\\": \\\"text/plain\\\"} \", contentType := \"application/json\", statusCode := \"\", header := { } } } }} id 3" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.726085", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:32.726122", component: "853", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort succeeded, message from mtc: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"9\" } } }, aspHttp := { { httpMessage := { method := \"POST\", url := \"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/message/send\", body := \"{ \\\"to\\\": \\\"sip:10014002007@ericsson.se\\\", \\\"body\\\": \\\"Body message 10014002006 to 10014002007\\\", \\\"contentType\\\": \\\"text/plain\\\"} \", contentType := \"application/json\", statusCode := \"\", header := { } } } }} id 3" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.726159", component: "853", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "67", function_name: "function:httpNodeRun", message: " Message with id 3 was extracted from the queue of httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.726182", component: "853", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "68", function_name: "function:httpNodeRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.726460", component: "853", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "307", function_name: "function:clearHTTPClientPort", message: " Start timer timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.726502", component: "853", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "313", function_name: "function:clearHTTPClientPort", message: " Timeout timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.726578", component: "853", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Sent on clientPort to system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.727230", component: "853", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Message enqueued on clientPort from system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.727274", component: "853", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "243", function_name: "function:sendHTTPClientRequest", message: " Start timer timerWaitForHTTPOpenConnection: 2 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.727310", component: "853", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Receive operation on port clientPort succeeded, message from system(" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.727334", component: "853", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Message with id 5 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.727356", component: "853", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "246", function_name: "function:sendHTTPClientRequest", message: " Stop timer timerWaitForHTTPOpenConnection: 2 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:32.727477", component: "853", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on clientPort to system @HTTPmsg_Types.HTTPMessage : { request := { client_id := 11, method := \"POST\", uri := \"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/message/send\", version_major := 1, version_minor := 1, header := { { header_name := \"Host\", header_value := \"142.133.142.3\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Content-Length\", header_value := \"119\" } }, body := \"{ \\\"to\\\": \\\"sip:10014002007@ericsson.se\\\", \\\"body\\\": \\\"Body message 10014002006 to 10014002007\\\", \\\"contentType\\\": \\\"text/plain\\\"} \" }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.727593", component: "853", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "189", function_name: "function:receiveAnyHTTPClientResponse", message: " Start timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:32.758159", component: "853", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on clientPort from system @HTTPmsg_Types.HTTPMessage : { response := { client_id := 11, version_major := 1, version_minor := 1, statuscode := 200, statustext := \"OK\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:32 GMT\" } }, body := \"{\\n \\\"msgId\\\": \\\"QEEEL8pw\\\"\\n}\" }} id 6" }
Structured  DataFrame { time: "2014/Oct/24 18:34:32.758287", component: "853", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port clientPort succeeded, message from system(): @HTTPmsg_Types.HTTPMessage : { response := { client_id := 11, version_major := 1, version_minor := 1, statuscode := 200, statustext := \"OK\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:32 GMT\" } }, body := \"{\\n \\\"msgId\\\": \\\"QEEEL8pw\\\"\\n}\" }} id 6" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.758327", component: "853", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "193", function_name: "function:receiveAnyHTTPClientResponse", message: " Message with id 6 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.758354", component: "853", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "194", function_name: "function:receiveAnyHTTPClientResponse", message: " Stop timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:32.758494", component: "853", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort to mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\n \\\"msgId\\\": \\\"QEEEL8pw\\\"\\n}\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:32 GMT\" } } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.758590", component: "853", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "62", function_name: "function:httpNodeRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:32.758718", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort[2] from 853 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\n \\\"msgId\\\": \\\"QEEEL8pw\\\"\\n}\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:32 GMT\" } } } } }} id 4" }
Structured  DataFrame { time: "2014/Oct/24 18:34:32.758872", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort[2] succeeded, message from 853: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\n \\\"msgId\\\": \\\"QEEEL8pw\\\"\\n}\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:32 GMT\" } } } } }} id 4" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.758955", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Message with id 4 was extracted from the queue of httpNodeInternalPort[2]" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.758986", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "241", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:32.760532", component: "850", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on msrpPort from system @IPL4asp_Types.ASP_RecvFrom : { connId := 2, remName := \"142.133.142.3\", remPort := 60548, locName := \"142.133.150.169\", locPort := 17076, proto := { tcp := { } }, userData := 0, msgoMkHjV SEND\\r\\nTo-Path: msrp://142.133.150.169:17076/SessionId18VAT;tcp\\r\\nFrom-Path: msrp://142.133.142.3:6060/j9EMds9SLZdZ;tcp\\r\\nByte-Range: 1-296/296\\r\\nMessage-ID: QEEEL8pw\\r\\nContent-Type: message/cpim\\r\\n\\r\\nTo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:32+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: QEEEL8pw\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002006 to 10014002007\\r\\n-------Z4oMkHjV$\\r\\n\")} id 5" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.760627", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:32.761022", component: "850", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Incoming message was mapped to @IPL4_MSRP_demo_types.MSRP_RecvFrom : { connId := 2, remName := \"142.133.142.3\", remPort := 60548, locName := \"142.133.150.169\", locPort := 17076, proto := { tcp := { } }, userData := 0, msg := { request := { requestStart := { transactId := \"Z4oMkHjV\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17076\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"j9EMds9SLZdZ\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"QEEEL8pw\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"296\", total := \"296\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:32+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: QEEEL8pw\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002006 to 10014002007\", binary_message := <unbound> }, endLine := { transactId := \"Z4oMkHjV\", continuationFlag := \"$\" } } }, binary_messageo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:32+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: QEEEL8pw\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002006 to 10014002007\")} id 5" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.773797", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.773987", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "168", function_name: "function:sendInternalMessage", message: " Sent on msrpInternalPort[0] to 850 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.774182", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.774261", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "83", function_name: "function:msrpRun", message: " Message enqueued on msrpInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.774423", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Receive operation on port msrpInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.774484", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Message with id 8 was extracted from the queue of msrpInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.774526", component: "850", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "85", function_name: "function:msrpRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.774805", component: "850", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "383", function_name: "function:handleClosedConnectionByRemoteSide", message: " Start timer timerCheckMsrpQueue: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.978021", component: "850", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "394", function_name: "function:handleClosedConnectionByRemoteSide", message: " Timeout timerCheckMsrpQueue: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.978317", component: "850", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "287", function_name: "function:baseReceiveMsrpMessage", message: " Start timer timerWaitForMsrpResponse: 15 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:32.978513", component: "850", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port msrpPort succeeded, message from system(): @IPL4_MSRP_demo_types.MSRP_RecvFrom : { connId := 2, remName := \"142.133.142.3\", remPort := 60548, locName := \"142.133.150.169\", locPort := 17076, proto := { tcp := { } }, userData := 0, msg := { request := { requestStart := { transactId := \"Z4oMkHjV\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17076\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"j9EMds9SLZdZ\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"QEEEL8pw\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"296\", total := \"296\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:32+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: QEEEL8pw\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002006 to 10014002007\", binary_message := <unbound> }, endLine := { transactId := \"Z4oMkHjV\", continuationFlag := \"$\" } } }, binary_messageo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:32+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: QEEEL8pw\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002006 to 10014002007\")} id 5" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.978606", component: "850", peer_component: "BaseMsrpComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "290", function_name: "function:baseReceiveMsrpMessage", message: " Message with id 5 was extracted from the queue of msrpPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.978689", component: "850", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "295", function_name: "function:baseReceiveMsrpMessage", message: " Stop timer timerWaitForMsrpResponse: 15 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:32.979207", component: "850", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on msrpInternalPort to mtc @variables.internalPortMessageWithMsrpMessages : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_MSRP_EXPECT_MESSAGE\" } } }, msrpMessages := { { request := { requestStart := { transactId := \"Z4oMkHjV\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17076\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"j9EMds9SLZdZ\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"QEEEL8pw\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"296\", total := \"296\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:32+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: QEEEL8pw\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002006 to 10014002007\", binary_messageo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:32+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: QEEEL8pw\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002006 to 10014002007\") }, endLine := { transactId := \"Z4oMkHjV\", continuationFlag := \"$\" } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.979355", component: "850", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "79", function_name: "function:msrpRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:32.979557", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on msrpInternalPort[0] from 850 @variables.internalPortMessageWithMsrpMessages : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_MSRP_EXPECT_MESSAGE\" } } }, msrpMessages := { { request := { requestStart := { transactId := \"Z4oMkHjV\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17076\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"j9EMds9SLZdZ\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"QEEEL8pw\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"296\", total := \"296\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:32+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: QEEEL8pw\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002006 to 10014002007\", binary_messageo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:32+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: QEEEL8pw\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002006 to 10014002007\") }, endLine := { transactId := \"Z4oMkHjV\", continuationFlag := \"$\" } } } }} id 9" }
Structured  DataFrame { time: "2014/Oct/24 18:34:32.979823", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port msrpInternalPort[0] succeeded, message from 850: @variables.internalPortMessageWithMsrpMessages : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_MSRP_EXPECT_MESSAGE\" } } }, msrpMessages := { { request := { requestStart := { transactId := \"Z4oMkHjV\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17076\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"j9EMds9SLZdZ\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"QEEEL8pw\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"296\", total := \"296\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:32+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: QEEEL8pw\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002006 to 10014002007\", binary_messageo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:32+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: QEEEL8pw\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002006 to 10014002007\") }, endLine := { transactId := \"Z4oMkHjV\", continuationFlag := \"$\" } } } }} id 9" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.979902", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Message with id 9 was extracted from the queue of msrpInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.979935", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "218", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.981422", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.993801", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.994097", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "168", function_name: "function:sendInternalMessage", message: " Sent on msrpInternalPort[0] to 850 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.994386", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.994389", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "83", function_name: "function:msrpRun", message: " Message enqueued on msrpInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.994518", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Receive operation on port msrpInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.994572", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Message with id 9 was extracted from the queue of msrpInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.994616", component: "850", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "85", function_name: "function:msrpRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.994900", component: "850", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "383", function_name: "function:handleClosedConnectionByRemoteSide", message: " Start timer timerCheckMsrpQueue: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.198041", component: "850", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "394", function_name: "function:handleClosedConnectionByRemoteSide", message: " Timeout timerCheckMsrpQueue: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:33.198238", component: "850", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on msrpPort to system @IPL4_MSRP_demo_types.MSRP_Send : { connId := 2, proto := { tcp := { } }, msg := '4D535250205A346F4D6B486A5620323030204F4B0D0A546F2D506174683A206D7372703A2F2F3134322E3133332E3134322E333A363036302F6A39454D647339534C5A645A3B7463700D0A46726F6D2D506174683A206D7372703A2F2F3134322E3133332E3135302E3136393A31373037362F53657373696F6E496431385641543B7463700D0A2D2D2D2D2D2D2D5A346F4D6B486A56240D0A'O (\"MSRP Z4oMkHjV 200 OK\\r\\nTo-Path: msrp://142.133.142.3:6060/j9EMds9SLZdZ;tcp\\r\\nFrom-Path: msrp://142.133.150.169:17076/SessionId18VAT;tcp\\r\\n-------Z4oMkHjV$\\r\\n\")}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:33.198282", component: "850", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Outgoing message was mapped to @IPL4asp_Types.ASP_Send : { connId := 2, proto := { tcp := { } }, msg := '4D535250205A346F4D6B486A5620323030204F4B0D0A546F2D506174683A206D7372703A2F2F3134322E3133332E3134322E333A363036302F6A39454D647339534C5A645A3B7463700D0A46726F6D2D506174683A206D7372703A2F2F3134322E3133332E3135302E3136393A31373037362F53657373696F6E496431385641543B7463700D0A2D2D2D2D2D2D2D5A346F4D6B486A56240D0A'O (\"MSRP Z4oMkHjV 200 OK\\r\\nTo-Path: msrp://142.133.142.3:6060/j9EMds9SLZdZ;tcp\\r\\nFrom-Path: msrp://142.133.150.169:17076/SessionId18VAT;tcp\\r\\n-------Z4oMkHjV$\\r\\n\")}" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.198411", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "343", function_name: "function:processCommand", message: " Sent on msrpInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.198474", component: "850", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "79", function_name: "function:msrpRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.198540", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "216", function_name: "function:receiveInternalMessage", message: " Message enqueued on msrpInternalPort[0] from 850 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.198620", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Receive operation on port msrpInternalPort[0] succeeded, message from 850: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.198646", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Message with id 10 was extracted from the queue of msrpInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.198664", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "218", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.204195", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.214245", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:33.214570", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on msrpInternalPort[1] to 857 @variables.internalPortMessageWithMsrpMessages : { internalMessage := { description := \"COMMAND_MSRP_SEND_MESSAGE\", parameters := { { parameterName := \"LISTENER_PORT\", parameterValue := \"17077\" } } }, msrpMessages := { { request := { requestStart := { transactId := \"Z4oMkVAT\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"rFhqxHwhogoX\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17077\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"QEEEL8pw\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"296\", total := \"296\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:32+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: QEEEL8pw\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002006 to 10014002007\", binary_message := omit }, endLine := { transactId := \"Z4oMkVAT\", continuationFlag := \"$\" } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.214829", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:33.214852", component: "857", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on msrpInternalPort from mtc @variables.internalPortMessageWithMsrpMessages : { internalMessage := { description := \"COMMAND_MSRP_SEND_MESSAGE\", parameters := { { parameterName := \"LISTENER_PORT\", parameterValue := \"17077\" } } }, msrpMessages := { { request := { requestStart := { transactId := \"Z4oMkVAT\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"rFhqxHwhogoX\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17077\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"QEEEL8pw\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"296\", total := \"296\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:32+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: QEEEL8pw\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002006 to 10014002007\", binary_message := omit }, endLine := { transactId := \"Z4oMkVAT\", continuationFlag := \"$\" } } } }} id 7" }
Structured  DataFrame { time: "2014/Oct/24 18:34:33.214956", component: "857", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port msrpInternalPort succeeded, message from mtc: @variables.internalPortMessageWithMsrpMessages : { internalMessage := { description := \"COMMAND_MSRP_SEND_MESSAGE\", parameters := { { parameterName := \"LISTENER_PORT\", parameterValue := \"17077\" } } }, msrpMessages := { { request := { requestStart := { transactId := \"Z4oMkVAT\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"rFhqxHwhogoX\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17077\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"QEEEL8pw\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"296\", total := \"296\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:32+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: QEEEL8pw\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002006 to 10014002007\", binary_message := omit }, endLine := { transactId := \"Z4oMkVAT\", continuationFlag := \"$\" } } } }} id 7" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.215004", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Message with id 7 was extracted from the queue of msrpInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.215021", component: "857", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "85", function_name: "function:msrpRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.215156", component: "857", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "383", function_name: "function:handleClosedConnectionByRemoteSide", message: " Start timer timerCheckMsrpQueue: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.418230", component: "857", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "394", function_name: "function:handleClosedConnectionByRemoteSide", message: " Timeout timerCheckMsrpQueue: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:33.418489", component: "857", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on msrpPort to system @IPL4_MSRP_demo_types.MSRP_Send : { connId := 1, proto := { tcp := { } }, msg := '4D535250205A346F4D6B5641542053454E440D0A546F2D506174683A206D7372703A2F2F3134322E3133332E3134322E333A363036302F72466871784877686F676F583B7463700D0A46726F6D2D506174683A206D7372703A2F2F3134322E3133332E3135302E3136393A31373037372F53657373696F6E496431385641543B7463700D0A4D6573736167652D49443A20514545454C3870770D0A427974652D52616E67653A20312D3239362F3239360D0A436F6E74656E742D547970653A206D6573736167652F6370696D0D0A0D0A546F3A203C7369703A616E6F6E796D6F757340616E6F6E796D6F75732E696E76616C69643E0D0A46726F6D3A203C7369703A616E6F6E796D6F757340616E6F6E796D6F75732E696E76616C69643E0D0A4461746554696D653A20323031342D31302D32345432323A33343A33322B30303A30300D0A4E533A20696D646E203C75726E3A696574663A706172616D733A696D646E3E0D0A696D646E2E446973706F736974696F6E2D4E6F74696669636174696F6E3A20706F7369746976652D64656C69766572790D0A696D646E2E4D6573736167652D49443A20514545454C3870770D0A0D0A436F6E74656E742D547970653A20746578742F706C61696E0D0A0D0A426F6479206D65737361676520313030313430303230303620746F2031303031343030323030370D0A2D2D2D2D2D2D2D5A346F4D6B564154240D0A'O (\"MSRP Z4oMkVAT SEND\\r\\nTo-Path: msrp://142.133.142.3:6060/rFhqxHwhogoX;tcp\\r\\nFrom-Path: msrp://142.133.150.169:17077/SessionId18VAT;tcp\\r\\nMessage-ID: QEEEL8pw\\r\\nByte-Range: 1-296/296\\r\\nContent-Type: message/cpim\\r\\n\\r\\nTo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:32+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: QEEEL8pw\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002006 to 10014002007\\r\\n-------Z4oMkVAT$\\r\\n\")}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:33.418601", component: "857", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Outgoing message was mapped to @IPL4asp_Types.ASP_Send : { connId := 1, proto := { tcp := { } }, msgoMkVAT SEND\\r\\nTo-Path: msrp://142.133.142.3:6060/rFhqxHwhogoX;tcp\\r\\nFrom-Path: msrp://142.133.150.169:17077/SessionId18VAT;tcp\\r\\nMessage-ID: QEEEL8pw\\r\\nByte-Range: 1-296/296\\r\\nContent-Type: message/cpim\\r\\n\\r\\nTo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:32+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: QEEEL8pw\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002006 to 10014002007\\r\\n-------Z4oMkVAT$\\r\\n\")}" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.418789", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "343", function_name: "function:processCommand", message: " Sent on msrpInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.418856", component: "857", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "79", function_name: "function:msrpRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.418932", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "216", function_name: "function:receiveInternalMessage", message: " Message enqueued on msrpInternalPort[1] from 857 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.419014", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Receive operation on port msrpInternalPort[1] succeeded, message from 857: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.419054", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Message with id 8 was extracted from the queue of msrpInternalPort[1]" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.419079", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "218", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.419505", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.429536", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.429630", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "168", function_name: "function:sendInternalMessage", message: " Sent on msrpInternalPort[1] to 857 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.429742", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "83", function_name: "function:msrpRun", message: " Message enqueued on msrpInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.429788", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.429796", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Receive operation on port msrpInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.429818", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Message with id 8 was extracted from the queue of msrpInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.429833", component: "857", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "85", function_name: "function:msrpRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.429945", component: "857", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "383", function_name: "function:handleClosedConnectionByRemoteSide", message: " Start timer timerCheckMsrpQueue: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:33.434688", component: "857", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on msrpPort from system @IPL4asp_Types.ASP_RecvFrom : { connId := 1, remName := \"142.133.142.3\", remPort := 6060, locName := \"142.133.150.169\", locPort := 17077, proto := { tcp := { } }, userData := 0, msg := '4D535250205A346F4D6B56415420323030204F4B0D0A546F2D506174683A206D7372703A2F2F3134322E3133332E3135302E3136393A31373037372F53657373696F6E496431385641543B7463700D0A46726F6D2D506174683A206D7372703A2F2F3134322E3133332E3134322E333A363036302F72466871784877686F676F583B7463700D0A2D2D2D2D2D2D2D5A346F4D6B564154240D0A'O (\"MSRP Z4oMkVAT 200 OK\\r\\nTo-Path: msrp://142.133.150.169:17077/SessionId18VAT;tcp\\r\\nFrom-Path: msrp://142.133.142.3:6060/rFhqxHwhogoX;tcp\\r\\n-------Z4oMkVAT$\\r\\n\")} id 4" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.434827", component: "857", peer_component: "BaseMsrpComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "385", function_name: "function:handleClosedConnectionByRemoteSide", message: " Incoming message was mapped to @IPL4_MSRP_demo_types" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.629969", component: "857", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "394", function_name: "function:handleClosedConnectionByRemoteSide", message: " Timeout timerCheckMsrpQueue: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.630206", component: "857", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "287", function_name: "function:baseReceiveMsrpMessage", message: " Start timer timerWaitForMsrpResponse: 15 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.630287", component: "857", peer_component: "BaseMsrpComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "290", function_name: "function:baseReceiveMsrpMessage", message: " Receive operation on port msrpPort succeeded, message from system(" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.630345", component: "857", peer_component: "BaseMsrpComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "290", function_name: "function:baseReceiveMsrpMessage", message: " Message with id 4 was extracted from the queue of msrpPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.630392", component: "857", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "295", function_name: "function:baseReceiveMsrpMessage", message: " Stop timer timerWaitForMsrpResponse: 15 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.630563", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "343", function_name: "function:processCommand", message: " Sent on msrpInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.630641", component: "857", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "79", function_name: "function:msrpRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.630768", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "216", function_name: "function:receiveInternalMessage", message: " Message enqueued on msrpInternalPort[1] from 857 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.630854", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Receive operation on port msrpInternalPort[1] succeeded, message from 857: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.630898", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Message with id 9 was extracted from the queue of msrpInternalPort[1]" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.630919", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "218", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.640402", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.650462", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "267", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:33.650703", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort[4] to 855 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"10\" } } }, aspHttp := { { httpMessage := { method := \"GET\", url := \"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/channels\", body := \"\", contentType := \"\", statusCode := \"\", header := { } } } }}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:33.650901", component: "855", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort from mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"10\" } } }, aspHttp := { { httpMessage := { method := \"GET\", url := \"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/channels\", body := \"\", contentType := \"\", statusCode := \"\", header := { } } } }} id 3" }
Structured  DataFrame { time: "2014/Oct/24 18:34:33.651003", component: "855", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort succeeded, message from mtc: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"10\" } } }, aspHttp := { { httpMessage := { method := \"GET\", url := \"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/channels\", body := \"\", contentType := \"\", statusCode := \"\", header := { } } } }} id 3" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.651051", component: "855", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "67", function_name: "function:httpNodeRun", message: " Message with id 3 was extracted from the queue of httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.651085", component: "855", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "68", function_name: "function:httpNodeRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.651085", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.651333", component: "855", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "307", function_name: "function:clearHTTPClientPort", message: " Start timer timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.651371", component: "855", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "313", function_name: "function:clearHTTPClientPort", message: " Timeout timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.651476", component: "855", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Sent on clientPort to system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.652361", component: "855", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Message enqueued on clientPort from system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.652406", component: "855", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "243", function_name: "function:sendHTTPClientRequest", message: " Start timer timerWaitForHTTPOpenConnection: 2 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.652453", component: "855", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Receive operation on port clientPort succeeded, message from system(" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.652488", component: "855", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Message with id 5 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.652543", component: "855", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "246", function_name: "function:sendHTTPClientRequest", message: " Stop timer timerWaitForHTTPOpenConnection: 2 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:33.652646", component: "855", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on clientPort to system @HTTPmsg_Types.HTTPMessage : { request := { client_id := 11, method := \"GET\", uri := \"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/channels\", version_major := 1, version_minor := 1, header := { { header_name := \"Host\", header_value := \"142.133.142.3\" }, { header_name := \"Content-Length\", header_value := \"0\" } }, body := \"\" }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.652749", component: "855", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "189", function_name: "function:receiveAnyHTTPClientResponse", message: " Start timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:33.668233", component: "855", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on clientPort from system @HTTPmsg_Types.HTTPMessage : { response := { client_id := 11, version_major := 1, version_minor := 1, statuscode := 200, statustext := \"OK\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:32 GMT\" } }, body := \"{\\n \\\"events\\\": {\\n \\\"list\\\": [ {\\n \\\"eventObject\\\": {\\n \\\"@type\\\": \\\"message\\\",\\n \\\"from\\\": \\\"sip:10014002006@ericsson.se\\\",\\n \\\"contentType\\\": \\\"text/plain\\\",\\n \\\"reportRequest\\\": [ \\\"Delivered\\\" ],\\n \\\"msgId\\\": \\\"QEEEL8pw\\\",\\n \\\"dateTime\\\": \\\"2014-10-24T22:34:32+00:00\\\",\\n \\\"body\\\": \\\"Body message 10014002006 to 10014002007\\\",\\n \\\"type\\\": \\\"session-message\\\"\\n }\\n } ]\\n }\\n}\" }} id 6" }
Structured  DataFrame { time: "2014/Oct/24 18:34:33.668421", component: "855", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port clientPort succeeded, message from system(): @HTTPmsg_Types.HTTPMessage : { response := { client_id := 11, version_major := 1, version_minor := 1, statuscode := 200, statustext := \"OK\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:32 GMT\" } }, body := \"{\\n \\\"events\\\": {\\n \\\"list\\\": [ {\\n \\\"eventObject\\\": {\\n \\\"@type\\\": \\\"message\\\",\\n \\\"from\\\": \\\"sip:10014002006@ericsson.se\\\",\\n \\\"contentType\\\": \\\"text/plain\\\",\\n \\\"reportRequest\\\": [ \\\"Delivered\\\" ],\\n \\\"msgId\\\": \\\"QEEEL8pw\\\",\\n \\\"dateTime\\\": \\\"2014-10-24T22:34:32+00:00\\\",\\n \\\"body\\\": \\\"Body message 10014002006 to 10014002007\\\",\\n \\\"type\\\": \\\"session-message\\\"\\n }\\n } ]\\n }\\n}\" }} id 6" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.668470", component: "855", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "193", function_name: "function:receiveAnyHTTPClientResponse", message: " Message with id 6 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.668498", component: "855", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "194", function_name: "function:receiveAnyHTTPClientResponse", message: " Stop timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:33.668661", component: "855", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort to mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\n \\\"events\\\": {\\n \\\"list\\\": [ {\\n \\\"eventObject\\\": {\\n \\\"@type\\\": \\\"message\\\",\\n \\\"from\\\": \\\"sip:10014002006@ericsson.se\\\",\\n \\\"contentType\\\": \\\"text/plain\\\",\\n \\\"reportRequest\\\": [ \\\"Delivered\\\" ],\\n \\\"msgId\\\": \\\"QEEEL8pw\\\",\\n \\\"dateTime\\\": \\\"2014-10-24T22:34:32+00:00\\\",\\n \\\"body\\\": \\\"Body message 10014002006 to 10014002007\\\",\\n \\\"type\\\": \\\"session-message\\\"\\n }\\n } ]\\n }\\n}\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:32 GMT\" } } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.668770", component: "855", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "62", function_name: "function:httpNodeRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:33.668943", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort[4] from 855 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\n \\\"events\\\": {\\n \\\"list\\\": [ {\\n \\\"eventObject\\\": {\\n \\\"@type\\\": \\\"message\\\",\\n \\\"from\\\": \\\"sip:10014002006@ericsson.se\\\",\\n \\\"contentType\\\": \\\"text/plain\\\",\\n \\\"reportRequest\\\": [ \\\"Delivered\\\" ],\\n \\\"msgId\\\": \\\"QEEEL8pw\\\",\\n \\\"dateTime\\\": \\\"2014-10-24T22:34:32+00:00\\\",\\n \\\"body\\\": \\\"Body message 10014002006 to 10014002007\\\",\\n \\\"type\\\": \\\"session-message\\\"\\n }\\n } ]\\n }\\n}\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:32 GMT\" } } } } }} id 4" }
Structured  DataFrame { time: "2014/Oct/24 18:34:33.669052", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort[4] succeeded, message from 855: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\n \\\"events\\\": {\\n \\\"list\\\": [ {\\n \\\"eventObject\\\": {\\n \\\"@type\\\": \\\"message\\\",\\n \\\"from\\\": \\\"sip:10014002006@ericsson.se\\\",\\n \\\"contentType\\\": \\\"text/plain\\\",\\n \\\"reportRequest\\\": [ \\\"Delivered\\\" ],\\n \\\"msgId\\\": \\\"QEEEL8pw\\\",\\n \\\"dateTime\\\": \\\"2014-10-24T22:34:32+00:00\\\",\\n \\\"body\\\": \\\"Body message 10014002006 to 10014002007\\\",\\n \\\"type\\\": \\\"session-message\\\"\\n }\\n } ]\\n }\\n}\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:32 GMT\" } } } } }} id 4" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.669083", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Message with id 4 was extracted from the queue of httpNodeInternalPort[4]" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.669101", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "241", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:33.671237", component: "857", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on msrpPort from system @IPL4asp_Types.ASP_RecvFrom : { connId := 1, remName := \"142.133.142.3\", remPort := 6060, locName := \"142.133.150.169\", locPort := 17077, proto := { tcp := { } }, userData := 0, msgfGLtmHo4 SEND\\r\\nTo-Path: msrp://142.133.150.169:17077/SessionId18VAT;tcp\\r\\nFrom-Path: msrp://142.133.142.3:6060/rFhqxHwhogoX;tcp\\r\\nByte-Range: 1-578/578\\r\\nMessage-ID: imdn-sovSiuYz\\r\\nContent-Type: message/cpim\\r\\n\\r\\nTo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:33+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: imdn-sovSiuYz\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>QEEEL8pw</message-id><datetime>2014-10-24T22:34:32+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\\r\\n-------fGLtmHo4$\\r\\n\")} id 5" }
Structured  DataFrame { time: "2014/Oct/24 18:34:33.671860", component: "857", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Incoming message was mapped to @IPL4_MSRP_demo_types.MSRP_RecvFrom : { connId := 1, remName := \"142.133.142.3\", remPort := 6060, locName := \"142.133.150.169\", locPort := 17077, proto := { tcp := { } }, userData := 0, msg := { request := { requestStart := { transactId := \"fGLtmHo4\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17077\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"rFhqxHwhogoX\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"imdn-sovSiuYz\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"578\", total := \"578\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:33+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: imdn-sovSiuYz\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>QEEEL8pw</message-id><datetime>2014-10-24T22:34:32+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\", binary_message := <unbound> }, endLine := { transactId := \"fGLtmHo4\", continuationFlag := \"$\" } } }, binary_messageo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:33+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: imdn-sovSiuYz\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>QEEEL8pw</message-id><datetime>2014-10-24T22:34:32+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\")} id 5" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.674731", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.685763", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.685934", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "168", function_name: "function:sendInternalMessage", message: " Sent on msrpInternalPort[1] to 857 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.686119", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "83", function_name: "function:msrpRun", message: " Message enqueued on msrpInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.686120", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.686236", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Receive operation on port msrpInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.686278", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Message with id 9 was extracted from the queue of msrpInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.686332", component: "857", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "85", function_name: "function:msrpRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.686502", component: "857", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "383", function_name: "function:handleClosedConnectionByRemoteSide", message: " Start timer timerCheckMsrpQueue: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.890247", component: "857", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "394", function_name: "function:handleClosedConnectionByRemoteSide", message: " Timeout timerCheckMsrpQueue: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.890488", component: "857", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "287", function_name: "function:baseReceiveMsrpMessage", message: " Start timer timerWaitForMsrpResponse: 15 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:33.890730", component: "857", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port msrpPort succeeded, message from system(): @IPL4_MSRP_demo_types.MSRP_RecvFrom : { connId := 1, remName := \"142.133.142.3\", remPort := 6060, locName := \"142.133.150.169\", locPort := 17077, proto := { tcp := { } }, userData := 0, msg := { request := { requestStart := { transactId := \"fGLtmHo4\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17077\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"rFhqxHwhogoX\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"imdn-sovSiuYz\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"578\", total := \"578\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:33+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: imdn-sovSiuYz\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>QEEEL8pw</message-id><datetime>2014-10-24T22:34:32+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\", binary_message := <unbound> }, endLine := { transactId := \"fGLtmHo4\", continuationFlag := \"$\" } } }, binary_messageo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:33+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: imdn-sovSiuYz\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>QEEEL8pw</message-id><datetime>2014-10-24T22:34:32+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\")} id 5" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.890823", component: "857", peer_component: "BaseMsrpComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "290", function_name: "function:baseReceiveMsrpMessage", message: " Message with id 5 was extracted from the queue of msrpPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.890887", component: "857", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "295", function_name: "function:baseReceiveMsrpMessage", message: " Stop timer timerWaitForMsrpResponse: 15 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:33.891334", component: "857", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on msrpInternalPort to mtc @variables.internalPortMessageWithMsrpMessages : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_MSRP_EXPECT_MESSAGE\" } } }, msrpMessages := { { request := { requestStart := { transactId := \"fGLtmHo4\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17077\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"rFhqxHwhogoX\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"imdn-sovSiuYz\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"578\", total := \"578\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:33+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: imdn-sovSiuYz\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>QEEEL8pw</message-id><datetime>2014-10-24T22:34:32+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\", binary_messageo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:33+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: imdn-sovSiuYz\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>QEEEL8pw</message-id><datetime>2014-10-24T22:34:32+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\") }, endLine := { transactId := \"fGLtmHo4\", continuationFlag := \"$\" } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.891469", component: "857", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "79", function_name: "function:msrpRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:33.891732", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on msrpInternalPort[1] from 857 @variables.internalPortMessageWithMsrpMessages : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_MSRP_EXPECT_MESSAGE\" } } }, msrpMessages := { { request := { requestStart := { transactId := \"fGLtmHo4\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17077\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"rFhqxHwhogoX\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"imdn-sovSiuYz\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"578\", total := \"578\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:33+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: imdn-sovSiuYz\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>QEEEL8pw</message-id><datetime>2014-10-24T22:34:32+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\", binary_messageo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:33+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: imdn-sovSiuYz\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>QEEEL8pw</message-id><datetime>2014-10-24T22:34:32+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\") }, endLine := { transactId := \"fGLtmHo4\", continuationFlag := \"$\" } } } }} id 10" }
Structured  DataFrame { time: "2014/Oct/24 18:34:33.891933", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port msrpInternalPort[1] succeeded, message from 857: @variables.internalPortMessageWithMsrpMessages : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_MSRP_EXPECT_MESSAGE\" } } }, msrpMessages := { { request := { requestStart := { transactId := \"fGLtmHo4\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17077\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"rFhqxHwhogoX\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"imdn-sovSiuYz\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"578\", total := \"578\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:33+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: imdn-sovSiuYz\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>QEEEL8pw</message-id><datetime>2014-10-24T22:34:32+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\", binary_messageo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:33+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: imdn-sovSiuYz\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>QEEEL8pw</message-id><datetime>2014-10-24T22:34:32+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\") }, endLine := { transactId := \"fGLtmHo4\", continuationFlag := \"$\" } } } }} id 10" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.891998", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Message with id 10 was extracted from the queue of msrpInternalPort[1]" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.892019", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "218", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.894735", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.905737", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.905859", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "168", function_name: "function:sendInternalMessage", message: " Sent on msrpInternalPort[1] to 857 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.905999", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.906027", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "83", function_name: "function:msrpRun", message: " Message enqueued on msrpInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.906097", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Receive operation on port msrpInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.906124", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Message with id 10 was extracted from the queue of msrpInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.906140", component: "857", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "85", function_name: "function:msrpRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.906280", component: "857", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "383", function_name: "function:handleClosedConnectionByRemoteSide", message: " Start timer timerCheckMsrpQueue: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.106319", component: "857", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "394", function_name: "function:handleClosedConnectionByRemoteSide", message: " Timeout timerCheckMsrpQueue: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:34.106520", component: "857", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on msrpPort to system @IPL4_MSRP_demo_types.MSRP_Send : { connId := 1, proto := { tcp := { } }, msg := '4D5352502066474C746D486F3420323030204F4B0D0A546F2D506174683A206D7372703A2F2F3134322E3133332E3134322E333A363036302F72466871784877686F676F583B7463700D0A46726F6D2D506174683A206D7372703A2F2F3134322E3133332E3135302E3136393A31373037372F53657373696F6E496431385641543B7463700D0A2D2D2D2D2D2D2D66474C746D486F34240D0A'O (\"MSRP fGLtmHo4 200 OK\\r\\nTo-Path: msrp://142.133.142.3:6060/rFhqxHwhogoX;tcp\\r\\nFrom-Path: msrp://142.133.150.169:17077/SessionId18VAT;tcp\\r\\n-------fGLtmHo4$\\r\\n\")}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:34.106566", component: "857", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Outgoing message was mapped to @IPL4asp_Types.ASP_Send : { connId := 1, proto := { tcp := { } }, msg := '4D5352502066474C746D486F3420323030204F4B0D0A546F2D506174683A206D7372703A2F2F3134322E3133332E3134322E333A363036302F72466871784877686F676F583B7463700D0A46726F6D2D506174683A206D7372703A2F2F3134322E3133332E3135302E3136393A31373037372F53657373696F6E496431385641543B7463700D0A2D2D2D2D2D2D2D66474C746D486F34240D0A'O (\"MSRP fGLtmHo4 200 OK\\r\\nTo-Path: msrp://142.133.142.3:6060/rFhqxHwhogoX;tcp\\r\\nFrom-Path: msrp://142.133.150.169:17077/SessionId18VAT;tcp\\r\\n-------fGLtmHo4$\\r\\n\")}" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.106736", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "343", function_name: "function:processCommand", message: " Sent on msrpInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.106802", component: "857", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "79", function_name: "function:msrpRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.106876", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "216", function_name: "function:receiveInternalMessage", message: " Message enqueued on msrpInternalPort[1] from 857 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.106955", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Receive operation on port msrpInternalPort[1] succeeded, message from 857: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.106984", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Message with id 11 was extracted from the queue of msrpInternalPort[1]" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.107026", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "218", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.111105", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.121501", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:34.121791", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on msrpInternalPort[0] to 850 @variables.internalPortMessageWithMsrpMessages : { internalMessage := { description := \"COMMAND_MSRP_SEND_MESSAGE\", parameters := { { parameterName := \"LISTENER_PORT\", parameterValue := \"17076\" } } }, msrpMessages := { { request := { requestStart := { transactId := \"27952VAT\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"j9EMds9SLZdZ\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17076\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"57631VAT\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"*\", total := \"*\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2013-10-01T13:33:33+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: VAT_imdn_xx1xx\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>QEEEL8pw</message-id><datetime>2014-10-24T22:34:32+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\", binary_message := omit }, endLine := { transactId := \"27952VAT\", continuationFlag := \"$\" } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.121997", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:34.122075", component: "850", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on msrpInternalPort from mtc @variables.internalPortMessageWithMsrpMessages : { internalMessage := { description := \"COMMAND_MSRP_SEND_MESSAGE\", parameters := { { parameterName := \"LISTENER_PORT\", parameterValue := \"17076\" } } }, msrpMessages := { { request := { requestStart := { transactId := \"27952VAT\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"j9EMds9SLZdZ\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17076\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"57631VAT\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"*\", total := \"*\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2013-10-01T13:33:33+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: VAT_imdn_xx1xx\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>QEEEL8pw</message-id><datetime>2014-10-24T22:34:32+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\", binary_message := omit }, endLine := { transactId := \"27952VAT\", continuationFlag := \"$\" } } } }} id 10" }
Structured  DataFrame { time: "2014/Oct/24 18:34:34.122212", component: "850", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port msrpInternalPort succeeded, message from mtc: @variables.internalPortMessageWithMsrpMessages : { internalMessage := { description := \"COMMAND_MSRP_SEND_MESSAGE\", parameters := { { parameterName := \"LISTENER_PORT\", parameterValue := \"17076\" } } }, msrpMessages := { { request := { requestStart := { transactId := \"27952VAT\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"j9EMds9SLZdZ\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17076\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"57631VAT\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"*\", total := \"*\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2013-10-01T13:33:33+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: VAT_imdn_xx1xx\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>QEEEL8pw</message-id><datetime>2014-10-24T22:34:32+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\", binary_message := omit }, endLine := { transactId := \"27952VAT\", continuationFlag := \"$\" } } } }} id 10" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.122244", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Message with id 10 was extracted from the queue of msrpInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.122258", component: "850", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "85", function_name: "function:msrpRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.122380", component: "850", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "383", function_name: "function:handleClosedConnectionByRemoteSide", message: " Start timer timerCheckMsrpQueue: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.322407", component: "850", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "394", function_name: "function:handleClosedConnectionByRemoteSide", message: " Timeout timerCheckMsrpQueue: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:34.322759", component: "850", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on msrpPort to system @IPL4_MSRP_demo_types.MSRP_Send : { connId := 2, proto := { tcp := { } }, msgr\\nTo-Path: msrp://142.133.142.3:6060/j9EMds9SLZdZ;tcp\\r\\nFrom-Path: msrp://142.133.150.169:17076/SessionId18VAT;tcp\\r\\nMessage-ID: 57631VAT\\r\\nByte-Range: 1-*/*\\r\\nContent-Type: message/cpim\\r\\n\\r\\nTo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2013-10-01T13:33:33+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: VAT_imdn_xx1xx\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>QEEEL8pw</message-id><datetime>2014-10-24T22:34:32+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\\r\\n-------27952VAT$\\r\\n\")}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:34.322970", component: "850", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Outgoing message was mapped to @IPL4asp_Types.ASP_Send : { connId := 2, proto := { tcp := { } }, msgr\\nTo-Path: msrp://142.133.142.3:6060/j9EMds9SLZdZ;tcp\\r\\nFrom-Path: msrp://142.133.150.169:17076/SessionId18VAT;tcp\\r\\nMessage-ID: 57631VAT\\r\\nByte-Range: 1-*/*\\r\\nContent-Type: message/cpim\\r\\n\\r\\nTo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2013-10-01T13:33:33+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: VAT_imdn_xx1xx\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>QEEEL8pw</message-id><datetime>2014-10-24T22:34:32+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\\r\\n-------27952VAT$\\r\\n\")}" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.323198", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "343", function_name: "function:processCommand", message: " Sent on msrpInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.323297", component: "850", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "79", function_name: "function:msrpRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.323352", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "216", function_name: "function:receiveInternalMessage", message: " Message enqueued on msrpInternalPort[0] from 850 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.323426", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Receive operation on port msrpInternalPort[0] succeeded, message from 850: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.323465", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Message with id 11 was extracted from the queue of msrpInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.323485", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "218", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.323942", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.333970", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.334046", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "168", function_name: "function:sendInternalMessage", message: " Sent on msrpInternalPort[0] to 850 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.334151", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "83", function_name: "function:msrpRun", message: " Message enqueued on msrpInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.334164", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.334226", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Receive operation on port msrpInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.334270", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Message with id 11 was extracted from the queue of msrpInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.334304", component: "850", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "85", function_name: "function:msrpRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.334492", component: "850", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "383", function_name: "function:handleClosedConnectionByRemoteSide", message: " Start timer timerCheckMsrpQueue: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:34.338046", component: "850", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on msrpPort from system @IPL4asp_Types.ASP_RecvFrom : { connId := 2, remName := \"142.133.142.3\", remPort := 60548, locName := \"142.133.150.169\", locPort := 17076, proto := { tcp := { } }, userData := 0, msg := '4D53525020323739353256415420323030204F4B0D0A546F2D506174683A206D7372703A2F2F3134322E3133332E3135302E3136393A31373037362F53657373696F6E496431385641543B7463700D0A46726F6D2D506174683A206D7372703A2F2F3134322E3133332E3134322E333A363036302F6A39454D647339534C5A645A3B7463700D0A2D2D2D2D2D2D2D3237393532564154240D0A'O (\"MSRP 27952VAT 200 OK\\r\\nTo-Path: msrp://142.133.150.169:17076/SessionId18VAT;tcp\\r\\nFrom-Path: msrp://142.133.142.3:6060/j9EMds9SLZdZ;tcp\\r\\n-------27952VAT$\\r\\n\")} id 6" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.338172", component: "850", peer_component: "BaseMsrpComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "385", function_name: "function:handleClosedConnectionByRemoteSide", message: " Incoming message was mapped to @IPL4_MSRP_demo_types" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.534533", component: "850", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "394", function_name: "function:handleClosedConnectionByRemoteSide", message: " Timeout timerCheckMsrpQueue: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.534724", component: "850", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "287", function_name: "function:baseReceiveMsrpMessage", message: " Start timer timerWaitForMsrpResponse: 15 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.534805", component: "850", peer_component: "BaseMsrpComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "290", function_name: "function:baseReceiveMsrpMessage", message: " Receive operation on port msrpPort succeeded, message from system(" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.534836", component: "850", peer_component: "BaseMsrpComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "290", function_name: "function:baseReceiveMsrpMessage", message: " Message with id 6 was extracted from the queue of msrpPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.534879", component: "850", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "295", function_name: "function:baseReceiveMsrpMessage", message: " Stop timer timerWaitForMsrpResponse: 15 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.535074", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "343", function_name: "function:processCommand", message: " Sent on msrpInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.535155", component: "850", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "79", function_name: "function:msrpRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.535268", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "216", function_name: "function:receiveInternalMessage", message: " Message enqueued on msrpInternalPort[0] from 850 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.535363", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Receive operation on port msrpInternalPort[0] succeeded, message from 850: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.535394", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Message with id 12 was extracted from the queue of msrpInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.535413", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "218", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.537822", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.549742", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "267", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:34.549967", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort[5] to 856 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"11\" } } }, aspHttp := { { httpMessage := { method := \"GET\", url := \"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/channels\", body := \"\", contentType := \"\", statusCode := \"\", header := { } } } }}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:34.550098", component: "856", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort from mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"11\" } } }, aspHttp := { { httpMessage := { method := \"GET\", url := \"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/channels\", body := \"\", contentType := \"\", statusCode := \"\", header := { } } } }} id 3" }
Structured  DataFrame { time: "2014/Oct/24 18:34:34.550179", component: "856", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort succeeded, message from mtc: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"11\" } } }, aspHttp := { { httpMessage := { method := \"GET\", url := \"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/channels\", body := \"\", contentType := \"\", statusCode := \"\", header := { } } } }} id 3" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.550182", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.550210", component: "856", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "67", function_name: "function:httpNodeRun", message: " Message with id 3 was extracted from the queue of httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.550231", component: "856", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "68", function_name: "function:httpNodeRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.550396", component: "856", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "307", function_name: "function:clearHTTPClientPort", message: " Start timer timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.550421", component: "856", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "313", function_name: "function:clearHTTPClientPort", message: " Timeout timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.550496", component: "856", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Sent on clientPort to system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.551290", component: "856", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Message enqueued on clientPort from system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.551321", component: "856", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "243", function_name: "function:sendHTTPClientRequest", message: " Start timer timerWaitForHTTPOpenConnection: 2 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.551345", component: "856", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Receive operation on port clientPort succeeded, message from system(" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.551364", component: "856", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Message with id 5 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.551404", component: "856", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "246", function_name: "function:sendHTTPClientRequest", message: " Stop timer timerWaitForHTTPOpenConnection: 2 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:34.551448", component: "856", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on clientPort to system @HTTPmsg_Types.HTTPMessage : { request := { client_id := 11, method := \"GET\", uri := \"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/channels\", version_major := 1, version_minor := 1, header := { { header_name := \"Host\", header_value := \"142.133.142.3\" }, { header_name := \"Content-Length\", header_value := \"0\" } }, body := \"\" }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.551511", component: "856", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "189", function_name: "function:receiveAnyHTTPClientResponse", message: " Start timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:34.563044", component: "856", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on clientPort from system @HTTPmsg_Types.HTTPMessage : { response := { client_id := 11, version_major := 1, version_minor := 1, statuscode := 200, statustext := \"OK\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:34 GMT\" } }, body := \"{\\n \\\"events\\\": {\\n \\\"list\\\": [ {\\n \\\"eventObject\\\": {\\n \\\"@type\\\": \\\"MessageStatusNotification\\\",\\n \\\"chatMessageStatusNotification\\\": {\\n \\\"link\\\": [ {\\n \\\"href\\\": \\\"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/chat/v1/sip:10014002006@ericsson.se/oneToOne/sip:10014002007@ericsson.se/adhoc\\\",\\n \\\"rel\\\": \\\"ChatSessionInformation\\\"\\n }, {\\n \\\"href\\\": \\\"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/chat/v1/sip:10014002006@ericsson.se/oneToOne/sip:10014002007@ericsson.se/adhoc/messages/QEEEL8pw\\\",\\n \\\"rel\\\": \\\"ChatMessage\\\"\\n } ],\\n \\\"status\\\": \\\"Delivered\\\"\\n },\\n \\\"originalDateTime\\\": \\\"2014-10-24T22:34:32+00:00\\\",\\n \\\"dateTime\\\": \\\"2013-10-01T13:33:33+00:00\\\"\\n }\\n } ]\\n }\\n}\" }} id 6" }
Structured  DataFrame { time: "2014/Oct/24 18:34:34.563172", component: "856", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port clientPort succeeded, message from system(): @HTTPmsg_Types.HTTPMessage : { response := { client_id := 11, version_major := 1, version_minor := 1, statuscode := 200, statustext := \"OK\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:34 GMT\" } }, body := \"{\\n \\\"events\\\": {\\n \\\"list\\\": [ {\\n \\\"eventObject\\\": {\\n \\\"@type\\\": \\\"MessageStatusNotification\\\",\\n \\\"chatMessageStatusNotification\\\": {\\n \\\"link\\\": [ {\\n \\\"href\\\": \\\"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/chat/v1/sip:10014002006@ericsson.se/oneToOne/sip:10014002007@ericsson.se/adhoc\\\",\\n \\\"rel\\\": \\\"ChatSessionInformation\\\"\\n }, {\\n \\\"href\\\": \\\"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/chat/v1/sip:10014002006@ericsson.se/oneToOne/sip:10014002007@ericsson.se/adhoc/messages/QEEEL8pw\\\",\\n \\\"rel\\\": \\\"ChatMessage\\\"\\n } ],\\n \\\"status\\\": \\\"Delivered\\\"\\n },\\n \\\"originalDateTime\\\": \\\"2014-10-24T22:34:32+00:00\\\",\\n \\\"dateTime\\\": \\\"2013-10-01T13:33:33+00:00\\\"\\n }\\n } ]\\n }\\n}\" }} id 6" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.563207", component: "856", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "193", function_name: "function:receiveAnyHTTPClientResponse", message: " Message with id 6 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.563239", component: "856", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "194", function_name: "function:receiveAnyHTTPClientResponse", message: " Stop timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:34.563361", component: "856", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort to mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\n \\\"events\\\": {\\n \\\"list\\\": [ {\\n \\\"eventObject\\\": {\\n \\\"@type\\\": \\\"MessageStatusNotification\\\",\\n \\\"chatMessageStatusNotification\\\": {\\n \\\"link\\\": [ {\\n \\\"href\\\": \\\"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/chat/v1/sip:10014002006@ericsson.se/oneToOne/sip:10014002007@ericsson.se/adhoc\\\",\\n \\\"rel\\\": \\\"ChatSessionInformation\\\"\\n }, {\\n \\\"href\\\": \\\"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/chat/v1/sip:10014002006@ericsson.se/oneToOne/sip:10014002007@ericsson.se/adhoc/messages/QEEEL8pw\\\",\\n \\\"rel\\\": \\\"ChatMessage\\\"\\n } ],\\n \\\"status\\\": \\\"Delivered\\\"\\n },\\n \\\"originalDateTime\\\": \\\"2014-10-24T22:34:32+00:00\\\",\\n \\\"dateTime\\\": \\\"2013-10-01T13:33:33+00:00\\\"\\n }\\n } ]\\n }\\n}\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:34 GMT\" } } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.563424", component: "856", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "62", function_name: "function:httpNodeRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:34.563562", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort[5] from 856 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\n \\\"events\\\": {\\n \\\"list\\\": [ {\\n \\\"eventObject\\\": {\\n \\\"@type\\\": \\\"MessageStatusNotification\\\",\\n \\\"chatMessageStatusNotification\\\": {\\n \\\"link\\\": [ {\\n \\\"href\\\": \\\"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/chat/v1/sip:10014002006@ericsson.se/oneToOne/sip:10014002007@ericsson.se/adhoc\\\",\\n \\\"rel\\\": \\\"ChatSessionInformation\\\"\\n }, {\\n \\\"href\\\": \\\"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/chat/v1/sip:10014002006@ericsson.se/oneToOne/sip:10014002007@ericsson.se/adhoc/messages/QEEEL8pw\\\",\\n \\\"rel\\\": \\\"ChatMessage\\\"\\n } ],\\n \\\"status\\\": \\\"Delivered\\\"\\n },\\n \\\"originalDateTime\\\": \\\"2014-10-24T22:34:32+00:00\\\",\\n \\\"dateTime\\\": \\\"2013-10-01T13:33:33+00:00\\\"\\n }\\n } ]\\n }\\n}\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:34 GMT\" } } } } }} id 4" }
Structured  DataFrame { time: "2014/Oct/24 18:34:34.563679", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort[5] succeeded, message from 856: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\n \\\"events\\\": {\\n \\\"list\\\": [ {\\n \\\"eventObject\\\": {\\n \\\"@type\\\": \\\"MessageStatusNotification\\\",\\n \\\"chatMessageStatusNotification\\\": {\\n \\\"link\\\": [ {\\n \\\"href\\\": \\\"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/chat/v1/sip:10014002006@ericsson.se/oneToOne/sip:10014002007@ericsson.se/adhoc\\\",\\n \\\"rel\\\": \\\"ChatSessionInformation\\\"\\n }, {\\n \\\"href\\\": \\\"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/chat/v1/sip:10014002006@ericsson.se/oneToOne/sip:10014002007@ericsson.se/adhoc/messages/QEEEL8pw\\\",\\n \\\"rel\\\": \\\"ChatMessage\\\"\\n } ],\\n \\\"status\\\": \\\"Delivered\\\"\\n },\\n \\\"originalDateTime\\\": \\\"2014-10-24T22:34:32+00:00\\\",\\n \\\"dateTime\\\": \\\"2013-10-01T13:33:33+00:00\\\"\\n }\\n } ]\\n }\\n}\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:34 GMT\" } } } } }} id 4" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.563724", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Message with id 4 was extracted from the queue of httpNodeInternalPort[5]" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.563755", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "241", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.565889", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.577506", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "267", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:34.577733", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort[3] to 854 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"12\" } } }, aspHttp := { { httpMessage := { method := \"POST\", url := \"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/message/send\", body := \"{ \\\"to\\\": \\\"sip:10014002006@ericsson.se\\\", \\\"body\\\": \\\"Body message 10014002007 to 10014002006\\\", \\\"contentType\\\": \\\"text/plain\\\"} \", contentType := \"application/json\", statusCode := \"\", header := { } } } }}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:34.577904", component: "854", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort from mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"12\" } } }, aspHttp := { { httpMessage := { method := \"POST\", url := \"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/message/send\", body := \"{ \\\"to\\\": \\\"sip:10014002006@ericsson.se\\\", \\\"body\\\": \\\"Body message 10014002007 to 10014002006\\\", \\\"contentType\\\": \\\"text/plain\\\"} \", contentType := \"application/json\", statusCode := \"\", header := { } } } }} id 3" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.577965", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:34.577977", component: "854", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort succeeded, message from mtc: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"12\" } } }, aspHttp := { { httpMessage := { method := \"POST\", url := \"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/message/send\", body := \"{ \\\"to\\\": \\\"sip:10014002006@ericsson.se\\\", \\\"body\\\": \\\"Body message 10014002007 to 10014002006\\\", \\\"contentType\\\": \\\"text/plain\\\"} \", contentType := \"application/json\", statusCode := \"\", header := { } } } }} id 3" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.578001", component: "854", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "67", function_name: "function:httpNodeRun", message: " Message with id 3 was extracted from the queue of httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.578016", component: "854", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "68", function_name: "function:httpNodeRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.578158", component: "854", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "307", function_name: "function:clearHTTPClientPort", message: " Start timer timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.578176", component: "854", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "313", function_name: "function:clearHTTPClientPort", message: " Timeout timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.578245", component: "854", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Sent on clientPort to system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.578976", component: "854", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Message enqueued on clientPort from system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.579006", component: "854", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "243", function_name: "function:sendHTTPClientRequest", message: " Start timer timerWaitForHTTPOpenConnection: 2 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.579029", component: "854", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Receive operation on port clientPort succeeded, message from system(" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.579045", component: "854", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Message with id 5 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.579059", component: "854", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "246", function_name: "function:sendHTTPClientRequest", message: " Stop timer timerWaitForHTTPOpenConnection: 2 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:34.579133", component: "854", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on clientPort to system @HTTPmsg_Types.HTTPMessage : { request := { client_id := 11, method := \"POST\", uri := \"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/message/send\", version_major := 1, version_minor := 1, header := { { header_name := \"Host\", header_value := \"142.133.142.3\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Content-Length\", header_value := \"119\" } }, body := \"{ \\\"to\\\": \\\"sip:10014002006@ericsson.se\\\", \\\"body\\\": \\\"Body message 10014002007 to 10014002006\\\", \\\"contentType\\\": \\\"text/plain\\\"} \" }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.579198", component: "854", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "189", function_name: "function:receiveAnyHTTPClientResponse", message: " Start timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:34.613765", component: "854", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on clientPort from system @HTTPmsg_Types.HTTPMessage : { response := { client_id := 11, version_major := 1, version_minor := 1, statuscode := 200, statustext := \"OK\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:34 GMT\" } }, body := \"{\\n \\\"msgId\\\": \\\"lRZfNWvU\\\"\\n}\" }} id 6" }
Structured  DataFrame { time: "2014/Oct/24 18:34:34.613904", component: "854", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port clientPort succeeded, message from system(): @HTTPmsg_Types.HTTPMessage : { response := { client_id := 11, version_major := 1, version_minor := 1, statuscode := 200, statustext := \"OK\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:34 GMT\" } }, body := \"{\\n \\\"msgId\\\": \\\"lRZfNWvU\\\"\\n}\" }} id 6" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.613949", component: "854", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "193", function_name: "function:receiveAnyHTTPClientResponse", message: " Message with id 6 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.613982", component: "854", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "194", function_name: "function:receiveAnyHTTPClientResponse", message: " Stop timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:34.614086", component: "854", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort to mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\n \\\"msgId\\\": \\\"lRZfNWvU\\\"\\n}\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:34 GMT\" } } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.614155", component: "854", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "62", function_name: "function:httpNodeRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:34.614254", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort[3] from 854 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\n \\\"msgId\\\": \\\"lRZfNWvU\\\"\\n}\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:34 GMT\" } } } } }} id 4" }
Structured  DataFrame { time: "2014/Oct/24 18:34:34.614348", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort[3] succeeded, message from 854: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\n \\\"msgId\\\": \\\"lRZfNWvU\\\"\\n}\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:34 GMT\" } } } } }} id 4" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.614377", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Message with id 4 was extracted from the queue of httpNodeInternalPort[3]" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.614395", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "241", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.615123", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:34.617320", component: "857", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on msrpPort from system @IPL4asp_Types.ASP_RecvFrom : { connId := 1, remName := \"142.133.142.3\", remPort := 6060, locName := \"142.133.150.169\", locPort := 17077, proto := { tcp := { } }, userData := 0, msgt0FCH SEND\\r\\nTo-Path: msrp://142.133.150.169:17077/SessionId18VAT;tcp\\r\\nFrom-Path: msrp://142.133.142.3:6060/rFhqxHwhogoX;tcp\\r\\nByte-Range: 1-296/296\\r\\nMessage-ID: lRZfNWvU\\r\\nContent-Type: message/cpim\\r\\n\\r\\nTo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:34+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: lRZfNWvU\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002007 to 10014002006\\r\\n-------YO8t0FCH$\\r\\n\")} id 6" }
Structured  DataFrame { time: "2014/Oct/24 18:34:34.617680", component: "857", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Incoming message was mapped to @IPL4_MSRP_demo_types.MSRP_RecvFrom : { connId := 1, remName := \"142.133.142.3\", remPort := 6060, locName := \"142.133.150.169\", locPort := 17077, proto := { tcp := { } }, userData := 0, msg := { request := { requestStart := { transactId := \"YO8t0FCH\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17077\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"rFhqxHwhogoX\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"lRZfNWvU\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"296\", total := \"296\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:34+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: lRZfNWvU\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002007 to 10014002006\", binary_message := <unbound> }, endLine := { transactId := \"YO8t0FCH\", continuationFlag := \"$\" } } }, binary_messageo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:34+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: lRZfNWvU\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002007 to 10014002006\")} id 6" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.625496", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.625624", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "168", function_name: "function:sendInternalMessage", message: " Sent on msrpInternalPort[1] to 857 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.625781", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "83", function_name: "function:msrpRun", message: " Message enqueued on msrpInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.625827", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.625851", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Receive operation on port msrpInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.625886", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Message with id 11 was extracted from the queue of msrpInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.625934", component: "857", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "85", function_name: "function:msrpRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.626081", component: "857", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "383", function_name: "function:handleClosedConnectionByRemoteSide", message: " Start timer timerCheckMsrpQueue: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.826107", component: "857", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "394", function_name: "function:handleClosedConnectionByRemoteSide", message: " Timeout timerCheckMsrpQueue: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.826412", component: "857", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "287", function_name: "function:baseReceiveMsrpMessage", message: " Start timer timerWaitForMsrpResponse: 15 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:34.826646", component: "857", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port msrpPort succeeded, message from system(): @IPL4_MSRP_demo_types.MSRP_RecvFrom : { connId := 1, remName := \"142.133.142.3\", remPort := 6060, locName := \"142.133.150.169\", locPort := 17077, proto := { tcp := { } }, userData := 0, msg := { request := { requestStart := { transactId := \"YO8t0FCH\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17077\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"rFhqxHwhogoX\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"lRZfNWvU\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"296\", total := \"296\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:34+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: lRZfNWvU\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002007 to 10014002006\", binary_message := <unbound> }, endLine := { transactId := \"YO8t0FCH\", continuationFlag := \"$\" } } }, binary_messageo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:34+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: lRZfNWvU\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002007 to 10014002006\")} id 6" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.826766", component: "857", peer_component: "BaseMsrpComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "290", function_name: "function:baseReceiveMsrpMessage", message: " Message with id 6 was extracted from the queue of msrpPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.826859", component: "857", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "295", function_name: "function:baseReceiveMsrpMessage", message: " Stop timer timerWaitForMsrpResponse: 15 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:34.827355", component: "857", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on msrpInternalPort to mtc @variables.internalPortMessageWithMsrpMessages : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_MSRP_EXPECT_MESSAGE\" } } }, msrpMessages := { { request := { requestStart := { transactId := \"YO8t0FCH\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17077\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"rFhqxHwhogoX\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"lRZfNWvU\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"296\", total := \"296\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:34+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: lRZfNWvU\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002007 to 10014002006\", binary_messageo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:34+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: lRZfNWvU\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002007 to 10014002006\") }, endLine := { transactId := \"YO8t0FCH\", continuationFlag := \"$\" } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.827526", component: "857", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "79", function_name: "function:msrpRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:34.827812", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on msrpInternalPort[1] from 857 @variables.internalPortMessageWithMsrpMessages : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_MSRP_EXPECT_MESSAGE\" } } }, msrpMessages := { { request := { requestStart := { transactId := \"YO8t0FCH\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17077\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"rFhqxHwhogoX\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"lRZfNWvU\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"296\", total := \"296\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:34+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: lRZfNWvU\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002007 to 10014002006\", binary_messageo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:34+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: lRZfNWvU\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002007 to 10014002006\") }, endLine := { transactId := \"YO8t0FCH\", continuationFlag := \"$\" } } } }} id 12" }
Structured  DataFrame { time: "2014/Oct/24 18:34:34.828130", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port msrpInternalPort[1] succeeded, message from 857: @variables.internalPortMessageWithMsrpMessages : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_MSRP_EXPECT_MESSAGE\" } } }, msrpMessages := { { request := { requestStart := { transactId := \"YO8t0FCH\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17077\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"rFhqxHwhogoX\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"lRZfNWvU\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"296\", total := \"296\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:34+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: lRZfNWvU\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002007 to 10014002006\", binary_messageo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:34+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: lRZfNWvU\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002007 to 10014002006\") }, endLine := { transactId := \"YO8t0FCH\", continuationFlag := \"$\" } } } }} id 12" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.828245", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Message with id 12 was extracted from the queue of msrpInternalPort[1]" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.828298", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "218", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.830239", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.841750", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.841939", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "168", function_name: "function:sendInternalMessage", message: " Sent on msrpInternalPort[1] to 857 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.842256", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "83", function_name: "function:msrpRun", message: " Message enqueued on msrpInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.842271", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.842347", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Receive operation on port msrpInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.842386", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Message with id 12 was extracted from the queue of msrpInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.842411", component: "857", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "85", function_name: "function:msrpRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.842577", component: "857", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "383", function_name: "function:handleClosedConnectionByRemoteSide", message: " Start timer timerCheckMsrpQueue: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.046244", component: "857", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "394", function_name: "function:handleClosedConnectionByRemoteSide", message: " Timeout timerCheckMsrpQueue: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:35.051777", component: "857", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on msrpPort to system @IPL4_MSRP_demo_types.MSRP_Send : { connId := 1, proto := { tcp := { } }, msg := '4D53525020594F38743046434820323030204F4B0D0A546F2D506174683A206D7372703A2F2F3134322E3133332E3134322E333A363036302F72466871784877686F676F583B7463700D0A46726F6D2D506174683A206D7372703A2F2F3134322E3133332E3135302E3136393A31373037372F53657373696F6E496431385641543B7463700D0A2D2D2D2D2D2D2D594F387430464348240D0A'O (\"MSRP YO8t0FCH 200 OK\\r\\nTo-Path: msrp://142.133.142.3:6060/rFhqxHwhogoX;tcp\\r\\nFrom-Path: msrp://142.133.150.169:17077/SessionId18VAT;tcp\\r\\n-------YO8t0FCH$\\r\\n\")}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:35.051908", component: "857", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Outgoing message was mapped to @IPL4asp_Types.ASP_Send : { connId := 1, proto := { tcp := { } }, msg := '4D53525020594F38743046434820323030204F4B0D0A546F2D506174683A206D7372703A2F2F3134322E3133332E3134322E333A363036302F72466871784877686F676F583B7463700D0A46726F6D2D506174683A206D7372703A2F2F3134322E3133332E3135302E3136393A31373037372F53657373696F6E496431385641543B7463700D0A2D2D2D2D2D2D2D594F387430464348240D0A'O (\"MSRP YO8t0FCH 200 OK\\r\\nTo-Path: msrp://142.133.142.3:6060/rFhqxHwhogoX;tcp\\r\\nFrom-Path: msrp://142.133.150.169:17077/SessionId18VAT;tcp\\r\\n-------YO8t0FCH$\\r\\n\")}" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.052080", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "343", function_name: "function:processCommand", message: " Sent on msrpInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.052126", component: "857", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "79", function_name: "function:msrpRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.052212", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "216", function_name: "function:receiveInternalMessage", message: " Message enqueued on msrpInternalPort[1] from 857 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.052326", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Receive operation on port msrpInternalPort[1] succeeded, message from 857: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.052364", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Message with id 13 was extracted from the queue of msrpInternalPort[1]" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.052399", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "218", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.062074", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.073494", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:35.073768", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on msrpInternalPort[0] to 850 @variables.internalPortMessageWithMsrpMessages : { internalMessage := { description := \"COMMAND_MSRP_SEND_MESSAGE\", parameters := { { parameterName := \"LISTENER_PORT\", parameterValue := \"17076\" } } }, msrpMessages := { { request := { requestStart := { transactId := \"YO8t0VAT\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"j9EMds9SLZdZ\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17076\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"lRZfNWvU\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"296\", total := \"296\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:34+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: lRZfNWvU\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002007 to 10014002006\", binary_message := omit }, endLine := { transactId := \"YO8t0VAT\", continuationFlag := \"$\" } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.073975", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:35.074039", component: "850", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on msrpInternalPort from mtc @variables.internalPortMessageWithMsrpMessages : { internalMessage := { description := \"COMMAND_MSRP_SEND_MESSAGE\", parameters := { { parameterName := \"LISTENER_PORT\", parameterValue := \"17076\" } } }, msrpMessages := { { request := { requestStart := { transactId := \"YO8t0VAT\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"j9EMds9SLZdZ\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17076\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"lRZfNWvU\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"296\", total := \"296\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:34+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: lRZfNWvU\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002007 to 10014002006\", binary_message := omit }, endLine := { transactId := \"YO8t0VAT\", continuationFlag := \"$\" } } } }} id 12" }
Structured  DataFrame { time: "2014/Oct/24 18:34:35.074178", component: "850", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port msrpInternalPort succeeded, message from mtc: @variables.internalPortMessageWithMsrpMessages : { internalMessage := { description := \"COMMAND_MSRP_SEND_MESSAGE\", parameters := { { parameterName := \"LISTENER_PORT\", parameterValue := \"17076\" } } }, msrpMessages := { { request := { requestStart := { transactId := \"YO8t0VAT\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"j9EMds9SLZdZ\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17076\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"lRZfNWvU\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"296\", total := \"296\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:34+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: lRZfNWvU\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002007 to 10014002006\", binary_message := omit }, endLine := { transactId := \"YO8t0VAT\", continuationFlag := \"$\" } } } }} id 12" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.074237", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Message with id 12 was extracted from the queue of msrpInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.074279", component: "850", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "85", function_name: "function:msrpRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.074415", component: "850", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "383", function_name: "function:handleClosedConnectionByRemoteSide", message: " Start timer timerCheckMsrpQueue: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.274444", component: "850", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "394", function_name: "function:handleClosedConnectionByRemoteSide", message: " Timeout timerCheckMsrpQueue: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:35.274688", component: "850", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on msrpPort to system @IPL4_MSRP_demo_types.MSRP_Send : { connId := 2, proto := { tcp := { } }, msgt0VAT SEND\\r\\nTo-Path: msrp://142.133.142.3:6060/j9EMds9SLZdZ;tcp\\r\\nFrom-Path: msrp://142.133.150.169:17076/SessionId18VAT;tcp\\r\\nMessage-ID: lRZfNWvU\\r\\nByte-Range: 1-296/296\\r\\nContent-Type: message/cpim\\r\\n\\r\\nTo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:34+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: lRZfNWvU\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002007 to 10014002006\\r\\n-------YO8t0VAT$\\r\\n\")}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:35.274791", component: "850", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Outgoing message was mapped to @IPL4asp_Types.ASP_Send : { connId := 2, proto := { tcp := { } }, msgt0VAT SEND\\r\\nTo-Path: msrp://142.133.142.3:6060/j9EMds9SLZdZ;tcp\\r\\nFrom-Path: msrp://142.133.150.169:17076/SessionId18VAT;tcp\\r\\nMessage-ID: lRZfNWvU\\r\\nByte-Range: 1-296/296\\r\\nContent-Type: message/cpim\\r\\n\\r\\nTo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:34+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: lRZfNWvU\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002007 to 10014002006\\r\\n-------YO8t0VAT$\\r\\n\")}" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.274977", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "343", function_name: "function:processCommand", message: " Sent on msrpInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.275034", component: "850", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "79", function_name: "function:msrpRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.275102", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "216", function_name: "function:receiveInternalMessage", message: " Message enqueued on msrpInternalPort[0] from 850 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.275197", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Receive operation on port msrpInternalPort[0] succeeded, message from 850: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.275236", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Message with id 13 was extracted from the queue of msrpInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.275265", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "218", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.275821", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.285850", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.285946", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "168", function_name: "function:sendInternalMessage", message: " Sent on msrpInternalPort[0] to 850 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.286051", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "83", function_name: "function:msrpRun", message: " Message enqueued on msrpInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.286067", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.286103", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Receive operation on port msrpInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.286124", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Message with id 13 was extracted from the queue of msrpInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.286149", component: "850", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "85", function_name: "function:msrpRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.286258", component: "850", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "383", function_name: "function:handleClosedConnectionByRemoteSide", message: " Start timer timerCheckMsrpQueue: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:35.290422", component: "850", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on msrpPort from system @IPL4asp_Types.ASP_RecvFrom : { connId := 2, remName := \"142.133.142.3\", remPort := 60548, locName := \"142.133.150.169\", locPort := 17076, proto := { tcp := { } }, userData := 0, msg := '4D53525020594F38743056415420323030204F4B0D0A546F2D506174683A206D7372703A2F2F3134322E3133332E3135302E3136393A31373037362F53657373696F6E496431385641543B7463700D0A46726F6D2D506174683A206D7372703A2F2F3134322E3133332E3134322E333A363036302F6A39454D647339534C5A645A3B7463700D0A2D2D2D2D2D2D2D594F387430564154240D0A'O (\"MSRP YO8t0VAT 200 OK\\r\\nTo-Path: msrp://142.133.150.169:17076/SessionId18VAT;tcp\\r\\nFrom-Path: msrp://142.133.142.3:6060/j9EMds9SLZdZ;tcp\\r\\n-------YO8t0VAT$\\r\\n\")} id 7" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.290540", component: "850", peer_component: "BaseMsrpComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "385", function_name: "function:handleClosedConnectionByRemoteSide", message: " Incoming message was mapped to @IPL4_MSRP_demo_types" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.486281", component: "850", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "394", function_name: "function:handleClosedConnectionByRemoteSide", message: " Timeout timerCheckMsrpQueue: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.486437", component: "850", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "287", function_name: "function:baseReceiveMsrpMessage", message: " Start timer timerWaitForMsrpResponse: 15 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.486519", component: "850", peer_component: "BaseMsrpComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "290", function_name: "function:baseReceiveMsrpMessage", message: " Receive operation on port msrpPort succeeded, message from system(" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.486574", component: "850", peer_component: "BaseMsrpComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "290", function_name: "function:baseReceiveMsrpMessage", message: " Message with id 7 was extracted from the queue of msrpPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.486623", component: "850", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "295", function_name: "function:baseReceiveMsrpMessage", message: " Stop timer timerWaitForMsrpResponse: 15 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.486867", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "343", function_name: "function:processCommand", message: " Sent on msrpInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.486953", component: "850", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "79", function_name: "function:msrpRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.487089", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "216", function_name: "function:receiveInternalMessage", message: " Message enqueued on msrpInternalPort[0] from 850 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.487250", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Receive operation on port msrpInternalPort[0] succeeded, message from 850: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.487315", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Message with id 14 was extracted from the queue of msrpInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.487370", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "218", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.500514", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.517754", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "267", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:35.518031", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort[5] to 856 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"13\" } } }, aspHttp := { { httpMessage := { method := \"GET\", url := \"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/channels\", body := \"\", contentType := \"\", statusCode := \"\", header := { } } } }}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:35.518220", component: "856", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort from mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"13\" } } }, aspHttp := { { httpMessage := { method := \"GET\", url := \"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/channels\", body := \"\", contentType := \"\", statusCode := \"\", header := { } } } }} id 4" }
Structured  DataFrame { time: "2014/Oct/24 18:34:35.518293", component: "856", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort succeeded, message from mtc: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"13\" } } }, aspHttp := { { httpMessage := { method := \"GET\", url := \"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/channels\", body := \"\", contentType := \"\", statusCode := \"\", header := { } } } }} id 4" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.518319", component: "856", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "67", function_name: "function:httpNodeRun", message: " Message with id 4 was extracted from the queue of httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.518336", component: "856", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "68", function_name: "function:httpNodeRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.518434", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.518479", component: "856", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "307", function_name: "function:clearHTTPClientPort", message: " Start timer timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.518500", component: "856", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "313", function_name: "function:clearHTTPClientPort", message: " Timeout timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.518575", component: "856", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Sent on clientPort to system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.519416", component: "856", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Message enqueued on clientPort from system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.519450", component: "856", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "243", function_name: "function:sendHTTPClientRequest", message: " Start timer timerWaitForHTTPOpenConnection: 2 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.519476", component: "856", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Receive operation on port clientPort succeeded, message from system(" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.519494", component: "856", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Message with id 7 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.519509", component: "856", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "246", function_name: "function:sendHTTPClientRequest", message: " Stop timer timerWaitForHTTPOpenConnection: 2 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:35.519553", component: "856", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on clientPort to system @HTTPmsg_Types.HTTPMessage : { request := { client_id := 12, method := \"GET\", uri := \"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/channels\", version_major := 1, version_minor := 1, header := { { header_name := \"Host\", header_value := \"142.133.142.3\" }, { header_name := \"Content-Length\", header_value := \"0\" } }, body := \"\" }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.519609", component: "856", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "189", function_name: "function:receiveAnyHTTPClientResponse", message: " Start timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:35.539438", component: "856", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on clientPort from system @HTTPmsg_Types.HTTPMessage : { response := { client_id := 12, version_major := 1, version_minor := 1, statuscode := 200, statustext := \"OK\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:34 GMT\" } }, body := \"{\\n \\\"events\\\": {\\n \\\"list\\\": [ {\\n \\\"eventObject\\\": {\\n \\\"@type\\\": \\\"message\\\",\\n \\\"from\\\": \\\"sip:10014002007@ericsson.se\\\",\\n \\\"contentType\\\": \\\"text/plain\\\",\\n \\\"reportRequest\\\": [ \\\"Delivered\\\" ],\\n \\\"msgId\\\": \\\"lRZfNWvU\\\",\\n \\\"dateTime\\\": \\\"2014-10-24T22:34:34+00:00\\\",\\n \\\"body\\\": \\\"Body message 10014002007 to 10014002006\\\",\\n \\\"type\\\": \\\"session-message\\\"\\n }\\n } ]\\n }\\n}\" }} id 8" }
Structured  DataFrame { time: "2014/Oct/24 18:34:35.539615", component: "856", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port clientPort succeeded, message from system(): @HTTPmsg_Types.HTTPMessage : { response := { client_id := 12, version_major := 1, version_minor := 1, statuscode := 200, statustext := \"OK\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:34 GMT\" } }, body := \"{\\n \\\"events\\\": {\\n \\\"list\\\": [ {\\n \\\"eventObject\\\": {\\n \\\"@type\\\": \\\"message\\\",\\n \\\"from\\\": \\\"sip:10014002007@ericsson.se\\\",\\n \\\"contentType\\\": \\\"text/plain\\\",\\n \\\"reportRequest\\\": [ \\\"Delivered\\\" ],\\n \\\"msgId\\\": \\\"lRZfNWvU\\\",\\n \\\"dateTime\\\": \\\"2014-10-24T22:34:34+00:00\\\",\\n \\\"body\\\": \\\"Body message 10014002007 to 10014002006\\\",\\n \\\"type\\\": \\\"session-message\\\"\\n }\\n } ]\\n }\\n}\" }} id 8" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.539697", component: "856", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "193", function_name: "function:receiveAnyHTTPClientResponse", message: " Message with id 8 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.539736", component: "856", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "194", function_name: "function:receiveAnyHTTPClientResponse", message: " Stop timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:35.539924", component: "856", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort to mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\n \\\"events\\\": {\\n \\\"list\\\": [ {\\n \\\"eventObject\\\": {\\n \\\"@type\\\": \\\"message\\\",\\n \\\"from\\\": \\\"sip:10014002007@ericsson.se\\\",\\n \\\"contentType\\\": \\\"text/plain\\\",\\n \\\"reportRequest\\\": [ \\\"Delivered\\\" ],\\n \\\"msgId\\\": \\\"lRZfNWvU\\\",\\n \\\"dateTime\\\": \\\"2014-10-24T22:34:34+00:00\\\",\\n \\\"body\\\": \\\"Body message 10014002007 to 10014002006\\\",\\n \\\"type\\\": \\\"session-message\\\"\\n }\\n } ]\\n }\\n}\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:34 GMT\" } } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.540020", component: "856", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "62", function_name: "function:httpNodeRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:35.540126", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort[5] from 856 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\n \\\"events\\\": {\\n \\\"list\\\": [ {\\n \\\"eventObject\\\": {\\n \\\"@type\\\": \\\"message\\\",\\n \\\"from\\\": \\\"sip:10014002007@ericsson.se\\\",\\n \\\"contentType\\\": \\\"text/plain\\\",\\n \\\"reportRequest\\\": [ \\\"Delivered\\\" ],\\n \\\"msgId\\\": \\\"lRZfNWvU\\\",\\n \\\"dateTime\\\": \\\"2014-10-24T22:34:34+00:00\\\",\\n \\\"body\\\": \\\"Body message 10014002007 to 10014002006\\\",\\n \\\"type\\\": \\\"session-message\\\"\\n }\\n } ]\\n }\\n}\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:34 GMT\" } } } } }} id 5" }
Structured  DataFrame { time: "2014/Oct/24 18:34:35.540289", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort[5] succeeded, message from 856: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\n \\\"events\\\": {\\n \\\"list\\\": [ {\\n \\\"eventObject\\\": {\\n \\\"@type\\\": \\\"message\\\",\\n \\\"from\\\": \\\"sip:10014002007@ericsson.se\\\",\\n \\\"contentType\\\": \\\"text/plain\\\",\\n \\\"reportRequest\\\": [ \\\"Delivered\\\" ],\\n \\\"msgId\\\": \\\"lRZfNWvU\\\",\\n \\\"dateTime\\\": \\\"2014-10-24T22:34:34+00:00\\\",\\n \\\"body\\\": \\\"Body message 10014002007 to 10014002006\\\",\\n \\\"type\\\": \\\"session-message\\\"\\n }\\n } ]\\n }\\n}\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:34 GMT\" } } } } }} id 5" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.540390", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Message with id 5 was extracted from the queue of httpNodeInternalPort[5]" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.540434", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "241", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.546181", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:35.546646", component: "850", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on msrpPort from system @IPL4asp_Types.ASP_RecvFrom : { connId := 2, remName := \"142.133.142.3\", remPort := 60548, locName := \"142.133.150.169\", locPort := 17076, proto := { tcp := { } }, userData := 0, msgrpk3vM SEND\\r\\nTo-Path: msrp://142.133.150.169:17076/SessionId18VAT;tcp\\r\\nFrom-Path: msrp://142.133.142.3:6060/j9EMds9SLZdZ;tcp\\r\\nByte-Range: 1-578/578\\r\\nMessage-ID: imdn-ciwHnDwe\\r\\nContent-Type: message/cpim\\r\\n\\r\\nTo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:35+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: imdn-ciwHnDwe\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>lRZfNWvU</message-id><datetime>2014-10-24T22:34:34+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\\r\\n-------9Prpk3vM$\\r\\n\")} id 8" }
Structured  DataFrame { time: "2014/Oct/24 18:34:35.547092", component: "850", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Incoming message was mapped to @IPL4_MSRP_demo_types.MSRP_RecvFrom : { connId := 2, remName := \"142.133.142.3\", remPort := 60548, locName := \"142.133.150.169\", locPort := 17076, proto := { tcp := { } }, userData := 0, msg := { request := { requestStart := { transactId := \"9Prpk3vM\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17076\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"j9EMds9SLZdZ\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"imdn-ciwHnDwe\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"578\", total := \"578\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:35+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: imdn-ciwHnDwe\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>lRZfNWvU</message-id><datetime>2014-10-24T22:34:34+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\", binary_message := <unbound> }, endLine := { transactId := \"9Prpk3vM\", continuationFlag := \"$\" } } }, binary_messageo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:35+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: imdn-ciwHnDwe\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>lRZfNWvU</message-id><datetime>2014-10-24T22:34:34+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\")} id 8" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.557729", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.557828", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "168", function_name: "function:sendInternalMessage", message: " Sent on msrpInternalPort[0] to 850 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.557963", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "83", function_name: "function:msrpRun", message: " Message enqueued on msrpInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.557965", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.558029", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Receive operation on port msrpInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.558055", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Message with id 14 was extracted from the queue of msrpInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.558071", component: "850", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "85", function_name: "function:msrpRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.558200", component: "850", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "383", function_name: "function:handleClosedConnectionByRemoteSide", message: " Start timer timerCheckMsrpQueue: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.758225", component: "850", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "394", function_name: "function:handleClosedConnectionByRemoteSide", message: " Timeout timerCheckMsrpQueue: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.758395", component: "850", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "287", function_name: "function:baseReceiveMsrpMessage", message: " Start timer timerWaitForMsrpResponse: 15 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:35.758564", component: "850", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port msrpPort succeeded, message from system(): @IPL4_MSRP_demo_types.MSRP_RecvFrom : { connId := 2, remName := \"142.133.142.3\", remPort := 60548, locName := \"142.133.150.169\", locPort := 17076, proto := { tcp := { } }, userData := 0, msg := { request := { requestStart := { transactId := \"9Prpk3vM\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17076\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"j9EMds9SLZdZ\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"imdn-ciwHnDwe\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"578\", total := \"578\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:35+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: imdn-ciwHnDwe\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>lRZfNWvU</message-id><datetime>2014-10-24T22:34:34+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\", binary_message := <unbound> }, endLine := { transactId := \"9Prpk3vM\", continuationFlag := \"$\" } } }, binary_messageo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:35+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: imdn-ciwHnDwe\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>lRZfNWvU</message-id><datetime>2014-10-24T22:34:34+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\")} id 8" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.758637", component: "850", peer_component: "BaseMsrpComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "290", function_name: "function:baseReceiveMsrpMessage", message: " Message with id 8 was extracted from the queue of msrpPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.758691", component: "850", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "295", function_name: "function:baseReceiveMsrpMessage", message: " Stop timer timerWaitForMsrpResponse: 15 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:35.759083", component: "850", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on msrpInternalPort to mtc @variables.internalPortMessageWithMsrpMessages : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_MSRP_EXPECT_MESSAGE\" } } }, msrpMessages := { { request := { requestStart := { transactId := \"9Prpk3vM\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17076\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"j9EMds9SLZdZ\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"imdn-ciwHnDwe\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"578\", total := \"578\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:35+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: imdn-ciwHnDwe\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>lRZfNWvU</message-id><datetime>2014-10-24T22:34:34+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\", binary_messageo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:35+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: imdn-ciwHnDwe\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>lRZfNWvU</message-id><datetime>2014-10-24T22:34:34+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\") }, endLine := { transactId := \"9Prpk3vM\", continuationFlag := \"$\" } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.759218", component: "850", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "79", function_name: "function:msrpRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:35.759552", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on msrpInternalPort[0] from 850 @variables.internalPortMessageWithMsrpMessages : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_MSRP_EXPECT_MESSAGE\" } } }, msrpMessages := { { request := { requestStart := { transactId := \"9Prpk3vM\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17076\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"j9EMds9SLZdZ\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"imdn-ciwHnDwe\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"578\", total := \"578\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:35+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: imdn-ciwHnDwe\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>lRZfNWvU</message-id><datetime>2014-10-24T22:34:34+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\", binary_messageo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:35+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: imdn-ciwHnDwe\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>lRZfNWvU</message-id><datetime>2014-10-24T22:34:34+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\") }, endLine := { transactId := \"9Prpk3vM\", continuationFlag := \"$\" } } } }} id 15" }
Structured  DataFrame { time: "2014/Oct/24 18:34:35.759852", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port msrpInternalPort[0] succeeded, message from 850: @variables.internalPortMessageWithMsrpMessages : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_MSRP_EXPECT_MESSAGE\" } } }, msrpMessages := { { request := { requestStart := { transactId := \"9Prpk3vM\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17076\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"j9EMds9SLZdZ\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"imdn-ciwHnDwe\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"578\", total := \"578\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:35+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: imdn-ciwHnDwe\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>lRZfNWvU</message-id><datetime>2014-10-24T22:34:34+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\", binary_messageo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:35+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: imdn-ciwHnDwe\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>lRZfNWvU</message-id><datetime>2014-10-24T22:34:34+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\") }, endLine := { transactId := \"9Prpk3vM\", continuationFlag := \"$\" } } } }} id 15" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.759940", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Message with id 15 was extracted from the queue of msrpInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.759980", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "218", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.763716", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.773796", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.774063", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "168", function_name: "function:sendInternalMessage", message: " Sent on msrpInternalPort[0] to 850 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.774243", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.774264", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "83", function_name: "function:msrpRun", message: " Message enqueued on msrpInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.774341", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Receive operation on port msrpInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.774367", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Message with id 15 was extracted from the queue of msrpInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.774381", component: "850", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "85", function_name: "function:msrpRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.774490", component: "850", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "383", function_name: "function:handleClosedConnectionByRemoteSide", message: " Start timer timerCheckMsrpQueue: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.974531", component: "850", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "394", function_name: "function:handleClosedConnectionByRemoteSide", message: " Timeout timerCheckMsrpQueue: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:35.974754", component: "850", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on msrpPort to system @IPL4_MSRP_demo_types.MSRP_Send : { connId := 2, proto := { tcp := { } }, msg := '4D53525020395072706B33764D20323030204F4B0D0A546F2D506174683A206D7372703A2F2F3134322E3133332E3134322E333A363036302F6A39454D647339534C5A645A3B7463700D0A46726F6D2D506174683A206D7372703A2F2F3134322E3133332E3135302E3136393A31373037362F53657373696F6E496431385641543B7463700D0A2D2D2D2D2D2D2D395072706B33764D240D0A'O (\"MSRP 9Prpk3vM 200 OK\\r\\nTo-Path: msrp://142.133.142.3:6060/j9EMds9SLZdZ;tcp\\r\\nFrom-Path: msrp://142.133.150.169:17076/SessionId18VAT;tcp\\r\\n-------9Prpk3vM$\\r\\n\")}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:35.974806", component: "850", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Outgoing message was mapped to @IPL4asp_Types.ASP_Send : { connId := 2, proto := { tcp := { } }, msg := '4D53525020395072706B33764D20323030204F4B0D0A546F2D506174683A206D7372703A2F2F3134322E3133332E3134322E333A363036302F6A39454D647339534C5A645A3B7463700D0A46726F6D2D506174683A206D7372703A2F2F3134322E3133332E3135302E3136393A31373037362F53657373696F6E496431385641543B7463700D0A2D2D2D2D2D2D2D395072706B33764D240D0A'O (\"MSRP 9Prpk3vM 200 OK\\r\\nTo-Path: msrp://142.133.142.3:6060/j9EMds9SLZdZ;tcp\\r\\nFrom-Path: msrp://142.133.150.169:17076/SessionId18VAT;tcp\\r\\n-------9Prpk3vM$\\r\\n\")}" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.974933", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "343", function_name: "function:processCommand", message: " Sent on msrpInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.975046", component: "850", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "79", function_name: "function:msrpRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.975121", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "216", function_name: "function:receiveInternalMessage", message: " Message enqueued on msrpInternalPort[0] from 850 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.975227", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Receive operation on port msrpInternalPort[0] succeeded, message from 850: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.975277", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Message with id 16 was extracted from the queue of msrpInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.975319", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "218", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.979758", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.989820", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:35.990125", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on msrpInternalPort[1] to 857 @variables.internalPortMessageWithMsrpMessages : { internalMessage := { description := \"COMMAND_MSRP_SEND_MESSAGE\", parameters := { { parameterName := \"LISTENER_PORT\", parameterValue := \"17077\" } } }, msrpMessages := { { request := { requestStart := { transactId := \"41724VAT\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"rFhqxHwhogoX\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17077\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"77102VAT\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"*\", total := \"*\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2013-10-01T13:33:33+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: VAT_imdn_xx1xx\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>lRZfNWvU</message-id><datetime>2014-10-24T22:34:34+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\", binary_message := omit }, endLine := { transactId := \"41724VAT\", continuationFlag := \"$\" } } } }}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:35.990425", component: "857", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on msrpInternalPort from mtc @variables.internalPortMessageWithMsrpMessages : { internalMessage := { description := \"COMMAND_MSRP_SEND_MESSAGE\", parameters := { { parameterName := \"LISTENER_PORT\", parameterValue := \"17077\" } } }, msrpMessages := { { request := { requestStart := { transactId := \"41724VAT\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"rFhqxHwhogoX\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17077\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"77102VAT\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"*\", total := \"*\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2013-10-01T13:33:33+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: VAT_imdn_xx1xx\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>lRZfNWvU</message-id><datetime>2014-10-24T22:34:34+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\", binary_message := omit }, endLine := { transactId := \"41724VAT\", continuationFlag := \"$\" } } } }} id 13" }
Structured  DataFrame { time: "2014/Oct/24 18:34:35.990574", component: "857", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port msrpInternalPort succeeded, message from mtc: @variables.internalPortMessageWithMsrpMessages : { internalMessage := { description := \"COMMAND_MSRP_SEND_MESSAGE\", parameters := { { parameterName := \"LISTENER_PORT\", parameterValue := \"17077\" } } }, msrpMessages := { { request := { requestStart := { transactId := \"41724VAT\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"rFhqxHwhogoX\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17077\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"77102VAT\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"*\", total := \"*\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2013-10-01T13:33:33+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: VAT_imdn_xx1xx\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>lRZfNWvU</message-id><datetime>2014-10-24T22:34:34+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\", binary_message := omit }, endLine := { transactId := \"41724VAT\", continuationFlag := \"$\" } } } }} id 13" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.990655", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Message with id 13 was extracted from the queue of msrpInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.990685", component: "857", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "85", function_name: "function:msrpRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.990871", component: "857", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "383", function_name: "function:handleClosedConnectionByRemoteSide", message: " Start timer timerCheckMsrpQueue: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.991033", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.193727", component: "857", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "394", function_name: "function:handleClosedConnectionByRemoteSide", message: " Timeout timerCheckMsrpQueue: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:36.194009", component: "857", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on msrpPort to system @IPL4_MSRP_demo_types.MSRP_Send : { connId := 1, proto := { tcp := { } }, msgr\\nTo-Path: msrp://142.133.142.3:6060/rFhqxHwhogoX;tcp\\r\\nFrom-Path: msrp://142.133.150.169:17077/SessionId18VAT;tcp\\r\\nMessage-ID: 77102VAT\\r\\nByte-Range: 1-*/*\\r\\nContent-Type: message/cpim\\r\\n\\r\\nTo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2013-10-01T13:33:33+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: VAT_imdn_xx1xx\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>lRZfNWvU</message-id><datetime>2014-10-24T22:34:34+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\\r\\n-------41724VAT$\\r\\n\")}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:36.194146", component: "857", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Outgoing message was mapped to @IPL4asp_Types.ASP_Send : { connId := 1, proto := { tcp := { } }, msgr\\nTo-Path: msrp://142.133.142.3:6060/rFhqxHwhogoX;tcp\\r\\nFrom-Path: msrp://142.133.150.169:17077/SessionId18VAT;tcp\\r\\nMessage-ID: 77102VAT\\r\\nByte-Range: 1-*/*\\r\\nContent-Type: message/cpim\\r\\n\\r\\nTo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2013-10-01T13:33:33+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: VAT_imdn_xx1xx\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>lRZfNWvU</message-id><datetime>2014-10-24T22:34:34+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\\r\\n-------41724VAT$\\r\\n\")}" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.194307", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "343", function_name: "function:processCommand", message: " Sent on msrpInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.194370", component: "857", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "79", function_name: "function:msrpRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.194527", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "216", function_name: "function:receiveInternalMessage", message: " Message enqueued on msrpInternalPort[1] from 857 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.194667", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Receive operation on port msrpInternalPort[1] succeeded, message from 857: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.194713", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Message with id 14 was extracted from the queue of msrpInternalPort[1]" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.194737", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "218", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.195257", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.205757", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.205883", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "168", function_name: "function:sendInternalMessage", message: " Sent on msrpInternalPort[1] to 857 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.205971", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "83", function_name: "function:msrpRun", message: " Message enqueued on msrpInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.206026", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Receive operation on port msrpInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.206053", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Message with id 14 was extracted from the queue of msrpInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.206068", component: "857", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "85", function_name: "function:msrpRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.206182", component: "857", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "383", function_name: "function:handleClosedConnectionByRemoteSide", message: " Start timer timerCheckMsrpQueue: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.206276", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:36.213728", component: "857", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on msrpPort from system @IPL4asp_Types.ASP_RecvFrom : { connId := 1, remName := \"142.133.142.3\", remPort := 6060, locName := \"142.133.150.169\", locPort := 17077, proto := { tcp := { } }, userData := 0, msg := '4D53525020343137323456415420323030204F4B0D0A546F2D506174683A206D7372703A2F2F3134322E3133332E3135302E3136393A31373037372F53657373696F6E496431385641543B7463700D0A46726F6D2D506174683A206D7372703A2F2F3134322E3133332E3134322E333A363036302F72466871784877686F676F583B7463700D0A2D2D2D2D2D2D2D3431373234564154240D0A'O (\"MSRP 41724VAT 200 OK\\r\\nTo-Path: msrp://142.133.150.169:17077/SessionId18VAT;tcp\\r\\nFrom-Path: msrp://142.133.142.3:6060/rFhqxHwhogoX;tcp\\r\\n-------41724VAT$\\r\\n\")} id 7" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.213949", component: "857", peer_component: "BaseMsrpComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "385", function_name: "function:handleClosedConnectionByRemoteSide", message: " Incoming message was mapped to @IPL4_MSRP_demo_types" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.406206", component: "857", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "394", function_name: "function:handleClosedConnectionByRemoteSide", message: " Timeout timerCheckMsrpQueue: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.406400", component: "857", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "287", function_name: "function:baseReceiveMsrpMessage", message: " Start timer timerWaitForMsrpResponse: 15 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.406486", component: "857", peer_component: "BaseMsrpComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "290", function_name: "function:baseReceiveMsrpMessage", message: " Receive operation on port msrpPort succeeded, message from system(" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.406528", component: "857", peer_component: "BaseMsrpComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "290", function_name: "function:baseReceiveMsrpMessage", message: " Message with id 7 was extracted from the queue of msrpPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.406604", component: "857", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "295", function_name: "function:baseReceiveMsrpMessage", message: " Stop timer timerWaitForMsrpResponse: 15 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.406872", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "343", function_name: "function:processCommand", message: " Sent on msrpInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.406976", component: "857", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "79", function_name: "function:msrpRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.407089", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "216", function_name: "function:receiveInternalMessage", message: " Message enqueued on msrpInternalPort[1] from 857 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.407183", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Receive operation on port msrpInternalPort[1] succeeded, message from 857: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.407214", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Message with id 15 was extracted from the queue of msrpInternalPort[1]" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.407244", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "218", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.409443", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.421766", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "267", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:36.421947", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort[4] to 855 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"14\" } } }, aspHttp := { { httpMessage := { method := \"GET\", url := \"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/channels\", body := \"\", contentType := \"\", statusCode := \"\", header := { } } } }}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:36.422135", component: "855", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort from mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"14\" } } }, aspHttp := { { httpMessage := { method := \"GET\", url := \"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/channels\", body := \"\", contentType := \"\", statusCode := \"\", header := { } } } }} id 4" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.422196", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:36.422309", component: "855", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort succeeded, message from mtc: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"14\" } } }, aspHttp := { { httpMessage := { method := \"GET\", url := \"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/channels\", body := \"\", contentType := \"\", statusCode := \"\", header := { } } } }} id 4" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.422357", component: "855", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "67", function_name: "function:httpNodeRun", message: " Message with id 4 was extracted from the queue of httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.422391", component: "855", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "68", function_name: "function:httpNodeRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.422622", component: "855", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "307", function_name: "function:clearHTTPClientPort", message: " Start timer timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.422669", component: "855", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "313", function_name: "function:clearHTTPClientPort", message: " Timeout timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.422794", component: "855", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Sent on clientPort to system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.423574", component: "855", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Message enqueued on clientPort from system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.423618", component: "855", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "243", function_name: "function:sendHTTPClientRequest", message: " Start timer timerWaitForHTTPOpenConnection: 2 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.423690", component: "855", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Receive operation on port clientPort succeeded, message from system(" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.423727", component: "855", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Message with id 7 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.423773", component: "855", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "246", function_name: "function:sendHTTPClientRequest", message: " Stop timer timerWaitForHTTPOpenConnection: 2 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:36.423850", component: "855", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on clientPort to system @HTTPmsg_Types.HTTPMessage : { request := { client_id := 12, method := \"GET\", uri := \"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/channels\", version_major := 1, version_minor := 1, header := { { header_name := \"Host\", header_value := \"142.133.142.3\" }, { header_name := \"Content-Length\", header_value := \"0\" } }, body := \"\" }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.423926", component: "855", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "189", function_name: "function:receiveAnyHTTPClientResponse", message: " Start timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:36.435158", component: "855", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on clientPort from system @HTTPmsg_Types.HTTPMessage : { response := { client_id := 12, version_major := 1, version_minor := 1, statuscode := 200, statustext := \"OK\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:36 GMT\" } }, body := \"{\\n \\\"events\\\": {\\n \\\"list\\\": [ {\\n \\\"eventObject\\\": {\\n \\\"@type\\\": \\\"MessageStatusNotification\\\",\\n \\\"chatMessageStatusNotification\\\": {\\n \\\"link\\\": [ {\\n \\\"href\\\": \\\"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/chat/v1/sip:10014002007@ericsson.se/oneToOne/sip:10014002006@ericsson.se/adhoc\\\",\\n \\\"rel\\\": \\\"ChatSessionInformation\\\"\\n }, {\\n \\\"href\\\": \\\"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/chat/v1/sip:10014002007@ericsson.se/oneToOne/sip:10014002006@ericsson.se/adhoc/messages/lRZfNWvU\\\",\\n \\\"rel\\\": \\\"ChatMessage\\\"\\n } ],\\n \\\"status\\\": \\\"Delivered\\\"\\n },\\n \\\"originalDateTime\\\": \\\"2014-10-24T22:34:34+00:00\\\",\\n \\\"dateTime\\\": \\\"2013-10-01T13:33:33+00:00\\\"\\n }\\n } ]\\n }\\n}\" }} id 8" }
Structured  DataFrame { time: "2014/Oct/24 18:34:36.435278", component: "855", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port clientPort succeeded, message from system(): @HTTPmsg_Types.HTTPMessage : { response := { client_id := 12, version_major := 1, version_minor := 1, statuscode := 200, statustext := \"OK\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:36 GMT\" } }, body := \"{\\n \\\"events\\\": {\\n \\\"list\\\": [ {\\n \\\"eventObject\\\": {\\n \\\"@type\\\": \\\"MessageStatusNotification\\\",\\n \\\"chatMessageStatusNotification\\\": {\\n \\\"link\\\": [ {\\n \\\"href\\\": \\\"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/chat/v1/sip:10014002007@ericsson.se/oneToOne/sip:10014002006@ericsson.se/adhoc\\\",\\n \\\"rel\\\": \\\"ChatSessionInformation\\\"\\n }, {\\n \\\"href\\\": \\\"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/chat/v1/sip:10014002007@ericsson.se/oneToOne/sip:10014002006@ericsson.se/adhoc/messages/lRZfNWvU\\\",\\n \\\"rel\\\": \\\"ChatMessage\\\"\\n } ],\\n \\\"status\\\": \\\"Delivered\\\"\\n },\\n \\\"originalDateTime\\\": \\\"2014-10-24T22:34:34+00:00\\\",\\n \\\"dateTime\\\": \\\"2013-10-01T13:33:33+00:00\\\"\\n }\\n } ]\\n }\\n}\" }} id 8" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.435320", component: "855", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "193", function_name: "function:receiveAnyHTTPClientResponse", message: " Message with id 8 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.435338", component: "855", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "194", function_name: "function:receiveAnyHTTPClientResponse", message: " Stop timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:36.435482", component: "855", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort to mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\n \\\"events\\\": {\\n \\\"list\\\": [ {\\n \\\"eventObject\\\": {\\n \\\"@type\\\": \\\"MessageStatusNotification\\\",\\n \\\"chatMessageStatusNotification\\\": {\\n \\\"link\\\": [ {\\n \\\"href\\\": \\\"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/chat/v1/sip:10014002007@ericsson.se/oneToOne/sip:10014002006@ericsson.se/adhoc\\\",\\n \\\"rel\\\": \\\"ChatSessionInformation\\\"\\n }, {\\n \\\"href\\\": \\\"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/chat/v1/sip:10014002007@ericsson.se/oneToOne/sip:10014002006@ericsson.se/adhoc/messages/lRZfNWvU\\\",\\n \\\"rel\\\": \\\"ChatMessage\\\"\\n } ],\\n \\\"status\\\": \\\"Delivered\\\"\\n },\\n \\\"originalDateTime\\\": \\\"2014-10-24T22:34:34+00:00\\\",\\n \\\"dateTime\\\": \\\"2013-10-01T13:33:33+00:00\\\"\\n }\\n } ]\\n }\\n}\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:36 GMT\" } } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.435552", component: "855", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "62", function_name: "function:httpNodeRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:36.435698", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort[4] from 855 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\n \\\"events\\\": {\\n \\\"list\\\": [ {\\n \\\"eventObject\\\": {\\n \\\"@type\\\": \\\"MessageStatusNotification\\\",\\n \\\"chatMessageStatusNotification\\\": {\\n \\\"link\\\": [ {\\n \\\"href\\\": \\\"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/chat/v1/sip:10014002007@ericsson.se/oneToOne/sip:10014002006@ericsson.se/adhoc\\\",\\n \\\"rel\\\": \\\"ChatSessionInformation\\\"\\n }, {\\n \\\"href\\\": \\\"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/chat/v1/sip:10014002007@ericsson.se/oneToOne/sip:10014002006@ericsson.se/adhoc/messages/lRZfNWvU\\\",\\n \\\"rel\\\": \\\"ChatMessage\\\"\\n } ],\\n \\\"status\\\": \\\"Delivered\\\"\\n },\\n \\\"originalDateTime\\\": \\\"2014-10-24T22:34:34+00:00\\\",\\n \\\"dateTime\\\": \\\"2013-10-01T13:33:33+00:00\\\"\\n }\\n } ]\\n }\\n}\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:36 GMT\" } } } } }} id 5" }
Structured  DataFrame { time: "2014/Oct/24 18:34:36.435850", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort[4] succeeded, message from 855: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\n \\\"events\\\": {\\n \\\"list\\\": [ {\\n \\\"eventObject\\\": {\\n \\\"@type\\\": \\\"MessageStatusNotification\\\",\\n \\\"chatMessageStatusNotification\\\": {\\n \\\"link\\\": [ {\\n \\\"href\\\": \\\"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/chat/v1/sip:10014002007@ericsson.se/oneToOne/sip:10014002006@ericsson.se/adhoc\\\",\\n \\\"rel\\\": \\\"ChatSessionInformation\\\"\\n }, {\\n \\\"href\\\": \\\"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/chat/v1/sip:10014002007@ericsson.se/oneToOne/sip:10014002006@ericsson.se/adhoc/messages/lRZfNWvU\\\",\\n \\\"rel\\\": \\\"ChatMessage\\\"\\n } ],\\n \\\"status\\\": \\\"Delivered\\\"\\n },\\n \\\"originalDateTime\\\": \\\"2014-10-24T22:34:34+00:00\\\",\\n \\\"dateTime\\\": \\\"2013-10-01T13:33:33+00:00\\\"\\n }\\n } ]\\n }\\n}\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:36 GMT\" } } } } }} id 5" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.435892", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Message with id 5 was extracted from the queue of httpNodeInternalPort[4]" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.435926", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "241", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.438014", component: "mtc", peer_component: "lib", event_type: "TIMEROP", event_description: "ttcn", port: "114", function_name: "function:sleep", message: " Start timer timerGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.589518", component: "mtc", peer_component: "lib", event_type: "TIMEROP", event_description: "ttcn", port: "115", function_name: "function:sleep", message: " Timeout timerGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.590171", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.601805", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "267", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:36.602301", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort[1] to 852 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"PARAM_PORT_OVERRIDE\", parameterValue := \"8888\" } } }, aspHttp := { { httpMessage := { method := \"POST\", url := \"/jolokia/\", body := \"[ { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,successfulTerminating=successfulTerminating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,successfulOriginating=successfulOriginating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulOriginating=unsuccessfulOriginating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulTerminating=unsuccessfulTerminating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,textMessages=textMessages-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,mediaMessages=mediaMessages-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,MSRPSession=MSRPSession-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=GAUGE,format=INTEGER,MSRPCurrentlyActive=MSRPCurrentlyActive1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } ] \", contentType := \"application/json\", statusCode := \"\", header := omit } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.602668", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:36.602788", component: "852", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort from mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"PARAM_PORT_OVERRIDE\", parameterValue := \"8888\" } } }, aspHttp := { { httpMessage := { method := \"POST\", url := \"/jolokia/\", body := \"[ { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,successfulTerminating=successfulTerminating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,successfulOriginating=successfulOriginating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulOriginating=unsuccessfulOriginating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulTerminating=unsuccessfulTerminating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,textMessages=textMessages-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,mediaMessages=mediaMessages-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,MSRPSession=MSRPSession-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=GAUGE,format=INTEGER,MSRPCurrentlyActive=MSRPCurrentlyActive1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } ] \", contentType := \"application/json\", statusCode := \"\", header := omit } } }} id 4" }
Structured  DataFrame { time: "2014/Oct/24 18:34:36.603135", component: "852", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort succeeded, message from mtc: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"PARAM_PORT_OVERRIDE\", parameterValue := \"8888\" } } }, aspHttp := { { httpMessage := { method := \"POST\", url := \"/jolokia/\", body := \"[ { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,successfulTerminating=successfulTerminating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,successfulOriginating=successfulOriginating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulOriginating=unsuccessfulOriginating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulTerminating=unsuccessfulTerminating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,textMessages=textMessages-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,mediaMessages=mediaMessages-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,MSRPSession=MSRPSession-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=GAUGE,format=INTEGER,MSRPCurrentlyActive=MSRPCurrentlyActive1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } ] \", contentType := \"application/json\", statusCode := \"\", header := omit } } }} id 4" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.603207", component: "852", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "67", function_name: "function:httpNodeRun", message: " Message with id 4 was extracted from the queue of httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.603231", component: "852", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "68", function_name: "function:httpNodeRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.603410", component: "852", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "307", function_name: "function:clearHTTPClientPort", message: " Start timer timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.603456", component: "852", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "313", function_name: "function:clearHTTPClientPort", message: " Timeout timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.603560", component: "852", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Sent on clientPort to system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.604543", component: "852", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Message enqueued on clientPort from system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.604590", component: "852", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "243", function_name: "function:sendHTTPClientRequest", message: " Start timer timerWaitForHTTPOpenConnection: 2 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.604643", component: "852", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Receive operation on port clientPort succeeded, message from system(" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.604686", component: "852", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Message with id 7 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.604712", component: "852", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "246", function_name: "function:sendHTTPClientRequest", message: " Stop timer timerWaitForHTTPOpenConnection: 2 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:36.604953", component: "852", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on clientPort to system @HTTPmsg_Types.HTTPMessage : { request := { client_id := 12, method := \"POST\", uri := \"/jolokia/\", version_major := 1, version_minor := 1, header := { { header_name := \"Host\", header_value := \"142.133.142.3\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Content-Length\", header_value := \"1971\" } }, body := \"[ { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,successfulTerminating=successfulTerminating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,successfulOriginating=successfulOriginating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulOriginating=unsuccessfulOriginating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulTerminating=unsuccessfulTerminating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,textMessages=textMessages-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,mediaMessages=mediaMessages-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,MSRPSession=MSRPSession-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=GAUGE,format=INTEGER,MSRPCurrentlyActive=MSRPCurrentlyActive1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } ] \" }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.605097", component: "852", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "189", function_name: "function:receiveAnyHTTPClientResponse", message: " Start timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:36.613072", component: "852", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on clientPort from system @HTTPmsg_Types.HTTPMessage : { response := { client_id := 12, version_major := 1, version_minor := 1, statuscode := 200, statustext := \"OK\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache\" }, { header_name := \"Pragma\", header_value := \"no-cache\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:36 GMT\" }, { header_name := \"Expires\", header_value := \"Fri, 24 Oct 2014 21:34:36 GMT\" }, { header_name := \"Content-Type\", header_value := \"text/plain;charset=utf-8\" }, { header_name := \"Content-Length\", header_value := \"1762\" } }, body := \"[{\\\"timestamp\\\":1414190076,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,successfulTerminating=successfulTerminating-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":4},{\\\"timestamp\\\":1414190076,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,successfulOriginating=successfulOriginating-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":4},{\\\"timestamp\\\":1414190076,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulOriginating=unsuccessfulOriginating-1\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":1},{\\\"timestamp\\\":1414190076,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulTerminating=unsuccessfulTerminating-1\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":1},{\\\"timestamp\\\":1414190076,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,textMessages=textMessages-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":8},{\\\"timestamp\\\":1414190076,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,mediaMessages=mediaMessages-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190076,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,MSRPSession=MSRPSession-1,interface=WcgChatCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":2},{\\\"timestamp\\\":1414190076,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,MSRPCurrentlyActive=MSRPCurrentlyActive1,format=INTEGER,interface=WcgGlobalCounterGroup,type=GAUGE\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":2}]\" }} id 8" }
Structured  DataFrame { time: "2014/Oct/24 18:34:36.613437", component: "852", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port clientPort succeeded, message from system(): @HTTPmsg_Types.HTTPMessage : { response := { client_id := 12, version_major := 1, version_minor := 1, statuscode := 200, statustext := \"OK\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache\" }, { header_name := \"Pragma\", header_value := \"no-cache\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:36 GMT\" }, { header_name := \"Expires\", header_value := \"Fri, 24 Oct 2014 21:34:36 GMT\" }, { header_name := \"Content-Type\", header_value := \"text/plain;charset=utf-8\" }, { header_name := \"Content-Length\", header_value := \"1762\" } }, body := \"[{\\\"timestamp\\\":1414190076,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,successfulTerminating=successfulTerminating-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":4},{\\\"timestamp\\\":1414190076,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,successfulOriginating=successfulOriginating-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":4},{\\\"timestamp\\\":1414190076,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulOriginating=unsuccessfulOriginating-1\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":1},{\\\"timestamp\\\":1414190076,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulTerminating=unsuccessfulTerminating-1\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":1},{\\\"timestamp\\\":1414190076,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,textMessages=textMessages-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":8},{\\\"timestamp\\\":1414190076,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,mediaMessages=mediaMessages-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190076,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,MSRPSession=MSRPSession-1,interface=WcgChatCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":2},{\\\"timestamp\\\":1414190076,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,MSRPCurrentlyActive=MSRPCurrentlyActive1,format=INTEGER,interface=WcgGlobalCounterGroup,type=GAUGE\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":2}]\" }} id 8" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.613563", component: "852", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "193", function_name: "function:receiveAnyHTTPClientResponse", message: " Message with id 8 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.613609", component: "852", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "194", function_name: "function:receiveAnyHTTPClientResponse", message: " Stop timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:36.614853", component: "852", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort to mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"[{\\\"timestamp\\\":1414190076,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,successfulTerminating=successfulTerminating-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":4},{\\\"timestamp\\\":1414190076,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,successfulOriginating=successfulOriginating-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":4},{\\\"timestamp\\\":1414190076,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulOriginating=unsuccessfulOriginating-1\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":1},{\\\"timestamp\\\":1414190076,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulTerminating=unsuccessfulTerminating-1\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":1},{\\\"timestamp\\\":1414190076,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,textMessages=textMessages-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":8},{\\\"timestamp\\\":1414190076,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,mediaMessages=mediaMessages-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190076,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,MSRPSession=MSRPSession-1,interface=WcgChatCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":2},{\\\"timestamp\\\":1414190076,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,MSRPCurrentlyActive=MSRPCurrentlyActive1,format=INTEGER,interface=WcgGlobalCounterGroup,type=GAUGE\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":2}]\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache\" }, { header_name := \"Pragma\", header_value := \"no-cache\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:36 GMT\" }, { header_name := \"Expires\", header_value := \"Fri, 24 Oct 2014 21:34:36 GMT\" }, { header_name := \"Content-Type\", header_value := \"text/plain;charset=utf-8\" }, { header_name := \"Content-Length\", header_value := \"1762\" } } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.615011", component: "852", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "62", function_name: "function:httpNodeRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:36.615254", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort[1] from 852 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"[{\\\"timestamp\\\":1414190076,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,successfulTerminating=successfulTerminating-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":4},{\\\"timestamp\\\":1414190076,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,successfulOriginating=successfulOriginating-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":4},{\\\"timestamp\\\":1414190076,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulOriginating=unsuccessfulOriginating-1\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":1},{\\\"timestamp\\\":1414190076,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulTerminating=unsuccessfulTerminating-1\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":1},{\\\"timestamp\\\":1414190076,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,textMessages=textMessages-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":8},{\\\"timestamp\\\":1414190076,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,mediaMessages=mediaMessages-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190076,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,MSRPSession=MSRPSession-1,interface=WcgChatCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":2},{\\\"timestamp\\\":1414190076,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,MSRPCurrentlyActive=MSRPCurrentlyActive1,format=INTEGER,interface=WcgGlobalCounterGroup,type=GAUGE\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":2}]\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache\" }, { header_name := \"Pragma\", header_value := \"no-cache\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:36 GMT\" }, { header_name := \"Expires\", header_value := \"Fri, 24 Oct 2014 21:34:36 GMT\" }, { header_name := \"Content-Type\", header_value := \"text/plain;charset=utf-8\" }, { header_name := \"Content-Length\", header_value := \"1762\" } } } } }} id 5" }
Structured  DataFrame { time: "2014/Oct/24 18:34:36.615517", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort[1] succeeded, message from 852: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"[{\\\"timestamp\\\":1414190076,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,successfulTerminating=successfulTerminating-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":4},{\\\"timestamp\\\":1414190076,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,successfulOriginating=successfulOriginating-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":4},{\\\"timestamp\\\":1414190076,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulOriginating=unsuccessfulOriginating-1\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":1},{\\\"timestamp\\\":1414190076,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulTerminating=unsuccessfulTerminating-1\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":1},{\\\"timestamp\\\":1414190076,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,textMessages=textMessages-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":8},{\\\"timestamp\\\":1414190076,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,mediaMessages=mediaMessages-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190076,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,MSRPSession=MSRPSession-1,interface=WcgChatCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":2},{\\\"timestamp\\\":1414190076,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,MSRPCurrentlyActive=MSRPCurrentlyActive1,format=INTEGER,interface=WcgGlobalCounterGroup,type=GAUGE\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":2}]\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache\" }, { header_name := \"Pragma\", header_value := \"no-cache\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:36 GMT\" }, { header_name := \"Expires\", header_value := \"Fri, 24 Oct 2014 21:34:36 GMT\" }, { header_name := \"Content-Type\", header_value := \"text/plain;charset=utf-8\" }, { header_name := \"Content-Length\", header_value := \"1762\" } } } } }} id 5" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.615615", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Message with id 5 was extracted from the queue of httpNodeInternalPort[1]" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.615651", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "241", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.619224", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.629519", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "267", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:36.629862", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort[5] to 856 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"16\" } } }, aspHttp := { { httpMessage := { method := \"GET\", url := \"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/channels\", body := \"\", contentType := \"\", statusCode := \"\", header := { } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.630115", component: "mtc", peer_component: "lib", event_type: "TIMEROP", event_description: "ttcn", port: "114", function_name: "function:sleep", message: " Start timer timerGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:36.630379", component: "856", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort from mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"16\" } } }, aspHttp := { { httpMessage := { method := \"GET\", url := \"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/channels\", body := \"\", contentType := \"\", statusCode := \"\", header := { } } } }} id 5" }
Structured  DataFrame { time: "2014/Oct/24 18:34:36.630477", component: "856", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort succeeded, message from mtc: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"16\" } } }, aspHttp := { { httpMessage := { method := \"GET\", url := \"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/channels\", body := \"\", contentType := \"\", statusCode := \"\", header := { } } } }} id 5" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.630510", component: "856", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "67", function_name: "function:httpNodeRun", message: " Message with id 5 was extracted from the queue of httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.630531", component: "856", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "68", function_name: "function:httpNodeRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.630825", component: "856", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "307", function_name: "function:clearHTTPClientPort", message: " Start timer timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.630853", component: "856", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "313", function_name: "function:clearHTTPClientPort", message: " Timeout timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.630919", component: "856", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Sent on clientPort to system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.631695", component: "856", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Message enqueued on clientPort from system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.631750", component: "856", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "243", function_name: "function:sendHTTPClientRequest", message: " Start timer timerWaitForHTTPOpenConnection: 2 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.631797", component: "856", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Receive operation on port clientPort succeeded, message from system(" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.631827", component: "856", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Message with id 9 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.631847", component: "856", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "246", function_name: "function:sendHTTPClientRequest", message: " Stop timer timerWaitForHTTPOpenConnection: 2 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:36.631899", component: "856", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on clientPort to system @HTTPmsg_Types.HTTPMessage : { request := { client_id := 13, method := \"GET\", uri := \"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/channels\", version_major := 1, version_minor := 1, header := { { header_name := \"Host\", header_value := \"142.133.142.3\" }, { header_name := \"Content-Length\", header_value := \"0\" } }, body := \"\" }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.631969", component: "856", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "189", function_name: "function:receiveAnyHTTPClientResponse", message: " Start timer timerWaitForHTTPResponse: 60 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.130142", component: "mtc", peer_component: "lib", event_type: "TIMEROP", event_description: "ttcn", port: "115", function_name: "function:sleep", message: " Timeout timerGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.130467", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.141590", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "267", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.141866", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort[2] to 853 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"16\" } } }, aspHttp := { { httpMessage := { method := \"DELETE\", url := \"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/register\", body := \"\", contentType := \"\", statusCode := \"\", header := { } } } }}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.142047", component: "853", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort from mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"16\" } } }, aspHttp := { { httpMessage := { method := \"DELETE\", url := \"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/register\", body := \"\", contentType := \"\", statusCode := \"\", header := { } } } }} id 4" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.142133", component: "853", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort succeeded, message from mtc: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"16\" } } }, aspHttp := { { httpMessage := { method := \"DELETE\", url := \"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/register\", body := \"\", contentType := \"\", statusCode := \"\", header := { } } } }} id 4" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.142158", component: "853", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "67", function_name: "function:httpNodeRun", message: " Message with id 4 was extracted from the queue of httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.142190", component: "853", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "68", function_name: "function:httpNodeRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.142309", component: "853", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "307", function_name: "function:clearHTTPClientPort", message: " Start timer timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.142327", component: "853", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "313", function_name: "function:clearHTTPClientPort", message: " Timeout timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.142376", component: "853", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Sent on clientPort to system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.142505", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.143203", component: "853", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Message enqueued on clientPort from system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.143234", component: "853", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "243", function_name: "function:sendHTTPClientRequest", message: " Start timer timerWaitForHTTPOpenConnection: 2 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.143269", component: "853", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Receive operation on port clientPort succeeded, message from system(" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.143294", component: "853", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Message with id 7 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.143322", component: "853", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "246", function_name: "function:sendHTTPClientRequest", message: " Stop timer timerWaitForHTTPOpenConnection: 2 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.143394", component: "853", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on clientPort to system @HTTPmsg_Types.HTTPMessage : { request := { client_id := 12, method := \"DELETE\", uri := \"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/register\", version_major := 1, version_minor := 1, header := { { header_name := \"Host\", header_value := \"142.133.142.3\" }, { header_name := \"Content-Length\", header_value := \"0\" } }, body := \"\" }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.143486", component: "853", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "189", function_name: "function:receiveAnyHTTPClientResponse", message: " Start timer timerWaitForHTTPResponse: 60 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.153494", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "286", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.153597", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "202", function_name: "function:sendInternalMessage", message: " Sent on sipInternalPort[0] to 849 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.153726", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "78", function_name: "function:sipRun", message: " Message enqueued on sipInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.153843", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Receive operation on port sipInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.153852", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.153904", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Message with id 23 was extracted from the queue of sipInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.153962", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "80", function_name: "function:sipRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.154064", component: "849", peer_component: "BaseSipClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "320", function_name: "function:generalReceiveSip", message: " Start timer timerWaitForSipMessage: 15 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.155349", component: "853", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on clientPort from system @HTTPmsg_Types.HTTPMessage : { response := { client_id := 12, version_major := 1, version_minor := 1, statuscode := 204, statustext := \"No Content\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:36 GMT\" } }, body := \"\" }} id 8" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.155428", component: "853", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port clientPort succeeded, message from system(): @HTTPmsg_Types.HTTPMessage : { response := { client_id := 12, version_major := 1, version_minor := 1, statuscode := 204, statustext := \"No Content\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:36 GMT\" } }, body := \"\" }} id 8" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.155453", component: "853", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "193", function_name: "function:receiveAnyHTTPClientResponse", message: " Message with id 8 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.155489", component: "853", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "194", function_name: "function:receiveAnyHTTPClientResponse", message: " Stop timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.155561", component: "853", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort to mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"\", contentType := \"\", statusCode := \"204\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:36 GMT\" } } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.155616", component: "853", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "62", function_name: "function:httpNodeRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.155687", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort[2] from 853 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"\", contentType := \"\", statusCode := \"204\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:36 GMT\" } } } } }} id 5" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.184379", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on sipClientPort from system @IPL4asp_Types.ASP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msgsip:10014002007@142.133.150.169:26720;csid=2838ab5a-e194-4923-81af-c9f0a544f667;transport=TCP;fid=wcg-ft3_1 SIP/2.0\\r\\nAccept-Contact: *;+g.oma.sip-im\\r\\nContribution-Id: CHAT:10014002007@ericsson.se\\r\\nMax-Forwards: 69\\r\\nContent-Length: 0\\r\\nTo: <sip:10014002007@ericsson.se>;tag=to_80618\\r\\nContact: <sip:10014002006@142.133.142.3:5060;csid=8cf72980-08e3-4819-943d-f7260f67318d;transport=TCP;fid=wcg-ft3_1>;+g.oma.sip-im;+g.gsma.rcs.ipcall;+g.3gpp.icsi-ref=\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\";+g.3gpp.cs-voice;+g.3gpp.iari-ref=\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\";video\\r\\nCseq: 2 BYE\\r\\nVia: SIP/2.0/TCP 142.133.142.3:5060;branch=z9hG4bKf1f914d6fd6e47db4a57954c7d5d41839118\\r\\nUser-Agent: H2S\\r\\nFrom: <sip:10014002006@ericsson.se>;tag=i1o4954c-7\\r\\nCall-Id: 142.133.142.3_6_1805558430567465450\\r\\n\\r\\n\")} id 13" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.184903", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Incoming message was mapped to @IPL4_demo_types.SIP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msg := { request := { requestLine := { method := BYE_E (1), requestUri := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" }, { id := \"fid\", paramValue := \"wcg-ft3_1\" } }, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := { fieldName := ACCEPT_CONTACT_E (1), ac_values := { { { id := \"+g.oma.sip-im\", paramValue := omit } } } }, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_6_1805558430567465450\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"8cf72980-08e3-4819-943d-f7260f67318d\" }, { id := \"transport\", paramValue := \"TCP\" }, { id := \"fid\", paramValue := \"wcg-ft3_1\" } }, headers := omit } } }, contactParams := { { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 2, method := \"BYE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o4954c-7\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"to_80618\" } } }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f914d6fd6e47db4a57954c7d5d41839118\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := { { headerName := \"Contribution-Id\", headerValue := \"CHAT:10014002007@ericsson.se\" } }, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } }} id 13" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.185158", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port sipClientPort succeeded, message from system(): @IPL4_demo_types.SIP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msg := { request := { requestLine := { method := BYE_E (1), requestUri := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" }, { id := \"fid\", paramValue := \"wcg-ft3_1\" } }, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := { fieldName := ACCEPT_CONTACT_E (1), ac_values := { { { id := \"+g.oma.sip-im\", paramValue := omit } } } }, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_6_1805558430567465450\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"8cf72980-08e3-4819-943d-f7260f67318d\" }, { id := \"transport\", paramValue := \"TCP\" }, { id := \"fid\", paramValue := \"wcg-ft3_1\" } }, headers := omit } } }, contactParams := { { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 2, method := \"BYE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o4954c-7\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"to_80618\" } } }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f914d6fd6e47db4a57954c7d5d41839118\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := { { headerName := \"Contribution-Id\", headerValue := \"CHAT:10014002007@ericsson.se\" } }, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } }} id 13" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.185237", component: "849", peer_component: "BaseSipClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "345", function_name: "function:generalReceiveSip", message: " Message with id 13 was extracted from the queue of sipClientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.185267", component: "849", peer_component: "BaseSipClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "346", function_name: "function:generalReceiveSip", message: " Stop timer timerWaitForSipMessage: 15 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.187706", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on sipInternalPort to mtc @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspRequest := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, request := { requestLine := { method := BYE_E (1), requestUri := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" }, { id := \"fid\", paramValue := \"wcg-ft3_1\" } }, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := { fieldName := ACCEPT_CONTACT_E (1), ac_values := { { { id := \"+g.oma.sip-im\", paramValue := omit } } } }, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_6_1805558430567465450\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"8cf72980-08e3-4819-943d-f7260f67318d\" }, { id := \"transport\", paramValue := \"TCP\" }, { id := \"fid\", paramValue := \"wcg-ft3_1\" } }, headers := omit } } }, contactParams := { { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 2, method := \"BYE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o4954c-7\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"to_80618\" } } }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f914d6fd6e47db4a57954c7d5d41839118\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := { { headerName := \"Contribution-Id\", headerValue := \"CHAT:10014002007@ericsson.se\" } }, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := { fieldName := CONTRIBUTION_ID_E (117), name_value := \"CHAT:10014002007@ericsson.se\" }, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.187916", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "74", function_name: "function:sipRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.188114", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on sipInternalPort[0] from 849 @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspRequest := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, request := { requestLine := { method := BYE_E (1), requestUri := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" }, { id := \"fid\", paramValue := \"wcg-ft3_1\" } }, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := { fieldName := ACCEPT_CONTACT_E (1), ac_values := { { { id := \"+g.oma.sip-im\", paramValue := omit } } } }, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_6_1805558430567465450\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"8cf72980-08e3-4819-943d-f7260f67318d\" }, { id := \"transport\", paramValue := \"TCP\" }, { id := \"fid\", paramValue := \"wcg-ft3_1\" } }, headers := omit } } }, contactParams := { { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 2, method := \"BYE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o4954c-7\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"to_80618\" } } }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f914d6fd6e47db4a57954c7d5d41839118\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := { { headerName := \"Contribution-Id\", headerValue := \"CHAT:10014002007@ericsson.se\" } }, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := { fieldName := CONTRIBUTION_ID_E (117), name_value := \"CHAT:10014002007@ericsson.se\" }, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 24" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.188332", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port sipInternalPort[0] succeeded, message from 849: @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspRequest := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, request := { requestLine := { method := BYE_E (1), requestUri := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" }, { id := \"fid\", paramValue := \"wcg-ft3_1\" } }, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := { fieldName := ACCEPT_CONTACT_E (1), ac_values := { { { id := \"+g.oma.sip-im\", paramValue := omit } } } }, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_6_1805558430567465450\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"8cf72980-08e3-4819-943d-f7260f67318d\" }, { id := \"transport\", paramValue := \"TCP\" }, { id := \"fid\", paramValue := \"wcg-ft3_1\" } }, headers := omit } } }, contactParams := { { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 2, method := \"BYE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o4954c-7\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"to_80618\" } } }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f914d6fd6e47db4a57954c7d5d41839118\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := { { headerName := \"Contribution-Id\", headerValue := \"CHAT:10014002007@ericsson.se\" } }, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := { fieldName := CONTRIBUTION_ID_E (117), name_value := \"CHAT:10014002007@ericsson.se\" }, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 24" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.188453", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Message with id 24 was extracted from the queue of sipInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.188489", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "255", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.190801", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.201741", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "286", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.202319", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on sipInternalPort[0] to 849 @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMMAND_SIP_SEND_SIP_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"16\" }, { parameterName := \"SUBSCRIBER\", parameterValue := \"11\" } } }, aspsSip := { { aspRequest := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, request := { requestLine := { method := BYE_E (1), requestUri := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" }, { id := \"fid\", paramValue := \"wcg-ft3_1\" } }, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := { fieldName := ACCEPT_CONTACT_E (1), ac_values := { { { id := \"+g.oma.sip-im\", paramValue := omit } } } }, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"VAT_callId_79564\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"8cf72980-08e3-4819-943d-f7260f67318d\" }, { id := \"transport\", paramValue := \"TCP\" }, { id := \"fid\", paramValue := \"wcg-ft3_1\" } }, headers := omit } } }, contactParams := { { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 2, method := \"BYE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"from_50592\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"i1o495cq-8\" } } }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"via_13102\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := { { headerName := \"Contribution-Id\", headerValue := \"CHAT:10014002007@ericsson.se\" } }, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := { fieldName := CONTRIBUTION_ID_E (117), name_value := \"CHAT:10014002007@ericsson.se\" }, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.202611", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.202919", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on sipInternalPort from mtc @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMMAND_SIP_SEND_SIP_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"16\" }, { parameterName := \"SUBSCRIBER\", parameterValue := \"11\" } } }, aspsSip := { { aspRequest := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, request := { requestLine := { method := BYE_E (1), requestUri := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" }, { id := \"fid\", paramValue := \"wcg-ft3_1\" } }, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := { fieldName := ACCEPT_CONTACT_E (1), ac_values := { { { id := \"+g.oma.sip-im\", paramValue := omit } } } }, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"VAT_callId_79564\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"8cf72980-08e3-4819-943d-f7260f67318d\" }, { id := \"transport\", paramValue := \"TCP\" }, { id := \"fid\", paramValue := \"wcg-ft3_1\" } }, headers := omit } } }, contactParams := { { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 2, method := \"BYE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"from_50592\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"i1o495cq-8\" } } }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"via_13102\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := { { headerName := \"Contribution-Id\", headerValue := \"CHAT:10014002007@ericsson.se\" } }, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := { fieldName := CONTRIBUTION_ID_E (117), name_value := \"CHAT:10014002007@ericsson.se\" }, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 24" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.203129", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port sipInternalPort succeeded, message from mtc: @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMMAND_SIP_SEND_SIP_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"16\" }, { parameterName := \"SUBSCRIBER\", parameterValue := \"11\" } } }, aspsSip := { { aspRequest := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, request := { requestLine := { method := BYE_E (1), requestUri := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" }, { id := \"fid\", paramValue := \"wcg-ft3_1\" } }, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := { fieldName := ACCEPT_CONTACT_E (1), ac_values := { { { id := \"+g.oma.sip-im\", paramValue := omit } } } }, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"VAT_callId_79564\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"8cf72980-08e3-4819-943d-f7260f67318d\" }, { id := \"transport\", paramValue := \"TCP\" }, { id := \"fid\", paramValue := \"wcg-ft3_1\" } }, headers := omit } } }, contactParams := { { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 2, method := \"BYE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"from_50592\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"i1o495cq-8\" } } }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"via_13102\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := { { headerName := \"Contribution-Id\", headerValue := \"CHAT:10014002007@ericsson.se\" } }, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := { fieldName := CONTRIBUTION_ID_E (117), name_value := \"CHAT:10014002007@ericsson.se\" }, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 24" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.203209", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Message with id 24 was extracted from the queue of sipInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.203240", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "80", function_name: "function:sipRun", message: " Stop timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.203808", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on sipClientPort to system @IPL4_demo_types.SIP_SendTo : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, proto := { tcp := { } }, msg := { raw := \"BYE sip:10014002007@142.133.150.169:26720;csid=2838ab5a-e194-4923-81af-c9f0a544f667;transport=TCP;fid=wcg-ft3_1 SIP/2.0\\r\\nAccept-Contact:*;+g.oma.sip-im\\r\\nCall-ID:VAT_callId_79564\\r\\nContact:<sip:10014002006@142.133.150.169:26720;csid=8cf72980-08e3-4819-943d-f7260f67318d;transport=TCP;fid=wcg-ft3_1>;+g.oma.sip-im;+g.gsma.rcs.ipcall;+g.3gpp.icsi-ref=\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\";+g.3gpp.cs-voice;+g.3gpp.iari-ref=\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\";video\\r\\nContent-Length:0\\r\\nCSeq:2 BYE\\r\\nFrom:<sip:10014002006@ericsson.se>;tag=from_50592\\r\\nMax-Forwards:69\\r\\nContribution-Id:CHAT:10014002007@ericsson.se\\r\\nTo:<sip:10014002007@ericsson.se>;tag=i1o495cq-8\\r\\nUser-Agent: H2S\\r\\nVia:SIP/2.0/TCP 142.133.142.3:5060;branch=via_13102\\r\\nContribution-Id:CHAT:10014002007@ericsson.se\\r\\n\\r\\n\" }}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.203924", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Outgoing message was mapped to @IPL4asp_Types.ASP_SendTo : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, proto := { tcp := { } }, msgsip:10014002007@142.133.150.169:26720;csid=2838ab5a-e194-4923-81af-c9f0a544f667;transport=TCP;fid=wcg-ft3_1 SIP/2.0\\r\\nAccept-Contact:*;+g.oma.sip-im\\r\\nCall-ID:VAT_callId_79564\\r\\nContact:<sip:10014002006@142.133.150.169:26720;csid=8cf72980-08e3-4819-943d-f7260f67318d;transport=TCP;fid=wcg-ft3_1>;+g.oma.sip-im;+g.gsma.rcs.ipcall;+g.3gpp.icsi-ref=\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\";+g.3gpp.cs-voice;+g.3gpp.iari-ref=\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\";video\\r\\nContent-Length:0\\r\\nCSeq:2 BYE\\r\\nFrom:<sip:10014002006@ericsson.se>;tag=from_50592\\r\\nMax-Forwards:69\\r\\nContribution-Id:CHAT:10014002007@ericsson.se\\r\\nTo:<sip:10014002007@ericsson.se>;tag=i1o495cq-8\\r\\nUser-Agent: H2S\\r\\nVia:SIP/2.0/TCP 142.133.142.3:5060;branch=via_13102\\r\\nContribution-Id:CHAT:10014002007@ericsson.se\\r\\n\\r\\n\")}" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.204090", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "388", function_name: "function:processCommand", message: " Sent on sipInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.204165", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "74", function_name: "function:sipRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.204289", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "253", function_name: "function:receiveInternalMessage", message: " Message enqueued on sipInternalPort[0] from 849 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.204363", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Receive operation on port sipInternalPort[0] succeeded, message from 849: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.204399", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Message with id 25 was extracted from the queue of sipInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.204427", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "255", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.204989", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.217905", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "286", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.218041", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "202", function_name: "function:sendInternalMessage", message: " Sent on sipInternalPort[0] to 849 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.218230", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.218376", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "78", function_name: "function:sipRun", message: " Message enqueued on sipInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.218493", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Receive operation on port sipInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.218531", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Message with id 25 was extracted from the queue of sipInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.218558", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "80", function_name: "function:sipRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.218803", component: "849", peer_component: "BaseSipClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "320", function_name: "function:generalReceiveSip", message: " Start timer timerWaitForSipMessage: 15 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.238968", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on sipClientPort from system @IPL4asp_Types.ASP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msgr\\nContent-Length: 0\\r\\nTo: <sip:10014002007@ericsson.se>;tag=i1o495cq-8\\r\\nCseq: 2 BYE\\r\\nVia: SIP/2.0/TCP 142.133.142.3:5060;branch=via_13102;received=142.133.150.169\\r\\nFrom: <sip:10014002006@ericsson.se>;tag=from_50592\\r\\nCall-Id: VAT_callId_79564\\r\\nServer: H2S\\r\\n\\r\\n\")} id 14" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.239695", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Incoming message was mapped to @IPL4_demo_types.SIP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msg := { response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 200, reasonPhrase := \"OK\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"VAT_callId_79564\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 2, method := \"BYE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"from_50592\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := { fieldName := SERVER_E (90), serverBody := { \"H2S\" } }, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"i1o495cq-8\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"via_13102\" }, { id := \"received\", paramValue := \"142.133.150.169\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } }} id 14" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.239956", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port sipClientPort succeeded, message from system(): @IPL4_demo_types.SIP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msg := { response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 200, reasonPhrase := \"OK\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"VAT_callId_79564\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 2, method := \"BYE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"from_50592\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := { fieldName := SERVER_E (90), serverBody := { \"H2S\" } }, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"i1o495cq-8\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"via_13102\" }, { id := \"received\", paramValue := \"142.133.150.169\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } }} id 14" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.240102", component: "849", peer_component: "BaseSipClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "325", function_name: "function:generalReceiveSip", message: " Message with id 14 was extracted from the queue of sipClientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.240143", component: "849", peer_component: "BaseSipClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "326", function_name: "function:generalReceiveSip", message: " Stop timer timerWaitForSipMessage: 15 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.240874", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on sipInternalPort to mtc @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspResponse := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 200, reasonPhrase := \"OK\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"VAT_callId_79564\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 2, method := \"BYE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"from_50592\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := { fieldName := SERVER_E (90), serverBody := { \"H2S\" } }, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"i1o495cq-8\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"via_13102\" }, { id := \"received\", paramValue := \"142.133.150.169\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.241042", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "74", function_name: "function:sipRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.241165", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on sipInternalPort[0] from 849 @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspResponse := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 200, reasonPhrase := \"OK\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"VAT_callId_79564\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 2, method := \"BYE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"from_50592\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := { fieldName := SERVER_E (90), serverBody := { \"H2S\" } }, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"i1o495cq-8\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"via_13102\" }, { id := \"received\", paramValue := \"142.133.150.169\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 26" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.241395", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port sipInternalPort[0] succeeded, message from 849: @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspResponse := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 200, reasonPhrase := \"OK\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"VAT_callId_79564\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 2, method := \"BYE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"from_50592\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := { fieldName := SERVER_E (90), serverBody := { \"H2S\" } }, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"i1o495cq-8\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"via_13102\" }, { id := \"received\", paramValue := \"142.133.150.169\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 26" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.241500", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Message with id 26 was extracted from the queue of sipInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.241541", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "255", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.244131", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.246887", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "83", function_name: "function:msrpRun", message: " Message enqueued on msrpPort from system @Socket_API_Definitions" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.254184", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "286", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.254731", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on sipInternalPort[0] to 849 @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMMAND_SIP_SEND_SIP_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"16\" }, { parameterName := \"SUBSCRIBER\", parameterValue := \"11\" } } }, aspsSip := { { aspResponse := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 200, reasonPhrase := \"OK\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_6_1805558430567465450\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 2, method := \"BYE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o4954c-7\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := { fieldName := SERVER_E (90), serverBody := { \"H2S\" } }, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"to_80618\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f914d6fd6e47db4a57954c7d5d41839118\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.254996", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.255042", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on sipInternalPort from mtc @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMMAND_SIP_SEND_SIP_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"16\" }, { parameterName := \"SUBSCRIBER\", parameterValue := \"11\" } } }, aspsSip := { { aspResponse := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 200, reasonPhrase := \"OK\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_6_1805558430567465450\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 2, method := \"BYE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o4954c-7\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := { fieldName := SERVER_E (90), serverBody := { \"H2S\" } }, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"to_80618\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f914d6fd6e47db4a57954c7d5d41839118\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 26" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.255183", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port sipInternalPort succeeded, message from mtc: @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMMAND_SIP_SEND_SIP_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"16\" }, { parameterName := \"SUBSCRIBER\", parameterValue := \"11\" } } }, aspsSip := { { aspResponse := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 200, reasonPhrase := \"OK\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_6_1805558430567465450\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 2, method := \"BYE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o4954c-7\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := { fieldName := SERVER_E (90), serverBody := { \"H2S\" } }, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"to_80618\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f914d6fd6e47db4a57954c7d5d41839118\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 26" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.255250", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Message with id 26 was extracted from the queue of sipInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.255289", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "80", function_name: "function:sipRun", message: " Stop timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.255742", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on sipClientPort to system @IPL4_demo_types.SIP_SendTo : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, proto := { tcp := { } }, msg := { raw := \"SIP/2.0 200 OK\\r\\nCall-ID:142.133.142.3_6_1805558430567465450\\r\\nContent-Length:0\\r\\nCSeq:2 BYE\\r\\nFrom:<sip:10014002006@ericsson.se>;tag=i1o4954c-7\\r\\nServer: H2S\\r\\nTo:<sip:10014002007@ericsson.se>;tag=to_80618\\r\\nVia:SIP/2.0/TCP 142.133.142.3:5060;branch=z9hG4bKf1f914d6fd6e47db4a57954c7d5d41839118\\r\\n\\r\\n\" }}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.255814", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Outgoing message was mapped to @IPL4asp_Types.ASP_SendTo : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, proto := { tcp := { } }, msg := '5349502F322E3020323030204F4B0D0A43616C6C2D49443A3134322E3133332E3134322E335F365F313830353535383433303536373436353435300D0A436F6E74656E742D4C656E6774683A300D0A435365713A32204259450D0A46726F6D3A3C7369703A3130303134303032303036406572696373736F6E2E73653E3B7461673D69316F34393534632D370D0A5365727665723A204832530D0A546F3A3C7369703A3130303134303032303037406572696373736F6E2E73653E3B7461673D746F5F38303631380D0A5669613A5349502F322E302F544350203134322E3133332E3134322E333A353036303B6272616E63683D7A39684734624B6631663931346436666436653437646234613537393534633764356434313833393131380D0A0D0A'O (\"SIP/2.0 200 OK\\r\\nCall-ID:142.133.142.3_6_1805558430567465450\\r\\nContent-Length:0\\r\\nCSeq:2 BYE\\r\\nFrom:<sip:10014002006@ericsson.se>;tag=i1o4954c-7\\r\\nServer: H2S\\r\\nTo:<sip:10014002007@ericsson.se>;tag=to_80618\\r\\nVia:SIP/2.0/TCP 142.133.142.3:5060;branch=z9hG4bKf1f914d6fd6e47db4a57954c7d5d41839118\\r\\n\\r\\n\")}" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.255944", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "388", function_name: "function:processCommand", message: " Sent on sipInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.256024", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "74", function_name: "function:sipRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.256048", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "253", function_name: "function:receiveInternalMessage", message: " Message enqueued on sipInternalPort[0] from 849 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.256097", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Receive operation on port sipInternalPort[0] succeeded, message from 849: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.256120", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Message with id 27 was extracted from the queue of sipInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.256137", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "255", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.256442", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.276116", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "83", function_name: "function:msrpRun", message: " Message enqueued on msrpPort from system @Socket_API_Definitions" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.285087", component: "856", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on clientPort from system @HTTPmsg_Types.HTTPMessage : { response := { client_id := 13, version_major := 1, version_minor := 1, statuscode := 204, statustext := \"No Content\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:36 GMT\" } }, body := \"\" }} id 10" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.285198", component: "856", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port clientPort succeeded, message from system(): @HTTPmsg_Types.HTTPMessage : { response := { client_id := 13, version_major := 1, version_minor := 1, statuscode := 204, statustext := \"No Content\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:36 GMT\" } }, body := \"\" }} id 10" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.285245", component: "856", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "193", function_name: "function:receiveAnyHTTPClientResponse", message: " Message with id 10 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.285284", component: "856", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "194", function_name: "function:receiveAnyHTTPClientResponse", message: " Stop timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.285471", component: "856", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort to mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"\", contentType := \"\", statusCode := \"204\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:36 GMT\" } } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.285574", component: "856", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "62", function_name: "function:httpNodeRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.285636", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort[5] from 856 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"\", contentType := \"\", statusCode := \"204\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:36 GMT\" } } } } }} id 6" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.285776", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort[5] succeeded, message from 856: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"\", contentType := \"\", statusCode := \"204\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:36 GMT\" } } } } }} id 6" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.285819", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Message with id 6 was extracted from the queue of httpNodeInternalPort[5]" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.285846", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "241", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.286287", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.297504", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "286", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.297590", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "202", function_name: "function:sendInternalMessage", message: " Sent on sipInternalPort[0] to 849 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.297703", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "78", function_name: "function:sipRun", message: " Message enqueued on sipInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.297791", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Receive operation on port sipInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.297815", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Message with id 27 was extracted from the queue of sipInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.297829", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "80", function_name: "function:sipRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.297831", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.297964", component: "849", peer_component: "BaseSipClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "320", function_name: "function:generalReceiveSip", message: " Start timer timerWaitForSipMessage: 15 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.303192", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on sipClientPort from system @IPL4asp_Types.ASP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msgsip:ericsson.se SIP/2.0\\r\\nMax-Forwards: 69\\r\\nAuthorization: Digest realm=\\\"ericsson.se\\\",username=\\\"10014002006@ericsson.se\\\",uri=\\\"sip:ericsson.se\\\",nonce=\\\"68802944664224158604006517243880\\\",nc=00000002,cnonce=\\\"7465081d992c7338f6f4d15339e5b9b9\\\",qop=auth,response=\\\"889e2c19ca45d463d075739ee8fbe1aa\\\",algorithm=MD5\\r\\nRequire: pref\\r\\nContent-Length: 0\\r\\nTo: <sip:10014002006@ericsson.se>\\r\\nContact: <sip:10014002006@142.133.142.3:5060;csid=8cf72980-08e3-4819-943d-f7260f67318d;transport=TCP>;+g.gsma.rcs.ipcall;+g.3gpp.icsi-ref=\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\";+g.oma.sip-im;+g.gsma.rcs.telephony=\\\"cs\\\";+g.3gpp.cs-voice;+g.3gpp.iari-ref=\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\";video;sip.ice=true;q=0.5\\r\\nExpires: 0\\r\\nCseq: 3 REGISTER\\r\\nVia: SIP/2.0/TCP 142.133.142.3:5060;branch=z9hG4bKf1f9f8934bb505a54267a8ca877b23a2c88d\\r\\nUser-Agent: H2S\\r\\nRoute: <sip:142.133.150.169:26720;lr;transport=TCP>\\r\\nFrom: <sip:10014002006@ericsson.se>;tag=i1o494sa-5\\r\\nCall-Id: 142.133.142.3_4_1575518397039837327\\r\\n\\r\\n\")} id 15" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.303697", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Incoming message was mapped to @IPL4_demo_types.SIP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msg := { request := { requestLine := { method := REGISTER_E (11), requestUri := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := { fieldName := AUTHORIZATION_E (11), body := { digestResponse := { { id := \"realm\", paramValue := \"\\\"ericsson.se\\\"\" }, { id := \"username\", paramValue := \"\\\"10014002006@ericsson.se\\\"\" }, { id := \"uri\", paramValue := \"\\\"sip:ericsson.se\\\"\" }, { id := \"nonce\", paramValue := \"\\\"68802944664224158604006517243880\\\"\" }, { id := \"nc\", paramValue := \"00000002\" }, { id := \"cnonce\", paramValue := \"\\\"7465081d992c7338f6f4d15339e5b9b9\\\"\" }, { id := \"qop\", paramValue := \"auth\" }, { id := \"response\", paramValue := \"\\\"889e2c19ca45d463d075739ee8fbe1aa\\\"\" }, { id := \"algorithm\", paramValue := \"MD5\" } } } }, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_4_1575518397039837327\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"8cf72980-08e3-4819-943d-f7260f67318d\" }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.telephony\", paramValue := \"\\\"cs\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit }, { id := \"sip.ice\", paramValue := \"true\" }, { id := \"q\", paramValue := \"0.5\" } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 3, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := { fieldName := EXPIRES_E (24), deltaSec := \"0\" }, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494sa-5\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := { fieldName := REQUIRE_E (80), optionsTags := { \"pref\" } }, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := { fieldName := ROUTE_E (84), routeBody := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"lr\", paramValue := omit }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } }, rrParam := omit } } }, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f9f8934bb505a54267a8ca877b23a2c88d\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } }} id 15" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.303964", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port sipClientPort succeeded, message from system(): @IPL4_demo_types.SIP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msg := { request := { requestLine := { method := REGISTER_E (11), requestUri := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := { fieldName := AUTHORIZATION_E (11), body := { digestResponse := { { id := \"realm\", paramValue := \"\\\"ericsson.se\\\"\" }, { id := \"username\", paramValue := \"\\\"10014002006@ericsson.se\\\"\" }, { id := \"uri\", paramValue := \"\\\"sip:ericsson.se\\\"\" }, { id := \"nonce\", paramValue := \"\\\"68802944664224158604006517243880\\\"\" }, { id := \"nc\", paramValue := \"00000002\" }, { id := \"cnonce\", paramValue := \"\\\"7465081d992c7338f6f4d15339e5b9b9\\\"\" }, { id := \"qop\", paramValue := \"auth\" }, { id := \"response\", paramValue := \"\\\"889e2c19ca45d463d075739ee8fbe1aa\\\"\" }, { id := \"algorithm\", paramValue := \"MD5\" } } } }, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_4_1575518397039837327\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"8cf72980-08e3-4819-943d-f7260f67318d\" }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.telephony\", paramValue := \"\\\"cs\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit }, { id := \"sip.ice\", paramValue := \"true\" }, { id := \"q\", paramValue := \"0.5\" } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 3, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := { fieldName := EXPIRES_E (24), deltaSec := \"0\" }, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494sa-5\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := { fieldName := REQUIRE_E (80), optionsTags := { \"pref\" } }, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := { fieldName := ROUTE_E (84), routeBody := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"lr\", paramValue := omit }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } }, rrParam := omit } } }, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f9f8934bb505a54267a8ca877b23a2c88d\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } }} id 15" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.304054", component: "849", peer_component: "BaseSipClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "345", function_name: "function:generalReceiveSip", message: " Message with id 15 was extracted from the queue of sipClientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.304075", component: "849", peer_component: "BaseSipClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "346", function_name: "function:generalReceiveSip", message: " Stop timer timerWaitForSipMessage: 15 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.304900", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on sipInternalPort to mtc @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspRequest := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, request := { requestLine := { method := REGISTER_E (11), requestUri := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := { fieldName := AUTHORIZATION_E (11), body := { digestResponse := { { id := \"realm\", paramValue := \"\\\"ericsson.se\\\"\" }, { id := \"username\", paramValue := \"\\\"10014002006@ericsson.se\\\"\" }, { id := \"uri\", paramValue := \"\\\"sip:ericsson.se\\\"\" }, { id := \"nonce\", paramValue := \"\\\"68802944664224158604006517243880\\\"\" }, { id := \"nc\", paramValue := \"00000002\" }, { id := \"cnonce\", paramValue := \"\\\"7465081d992c7338f6f4d15339e5b9b9\\\"\" }, { id := \"qop\", paramValue := \"auth\" }, { id := \"response\", paramValue := \"\\\"889e2c19ca45d463d075739ee8fbe1aa\\\"\" }, { id := \"algorithm\", paramValue := \"MD5\" } } } }, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_4_1575518397039837327\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"8cf72980-08e3-4819-943d-f7260f67318d\" }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.telephony\", paramValue := \"\\\"cs\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit }, { id := \"sip.ice\", paramValue := \"true\" }, { id := \"q\", paramValue := \"0.5\" } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 3, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := { fieldName := EXPIRES_E (24), deltaSec := \"0\" }, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494sa-5\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := { fieldName := REQUIRE_E (80), optionsTags := { \"pref\" } }, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := { fieldName := ROUTE_E (84), routeBody := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"lr\", paramValue := omit }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } }, rrParam := omit } } }, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f9f8934bb505a54267a8ca877b23a2c88d\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.305130", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "74", function_name: "function:sipRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.305402", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on sipInternalPort[0] from 849 @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspRequest := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, request := { requestLine := { method := REGISTER_E (11), requestUri := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := { fieldName := AUTHORIZATION_E (11), body := { digestResponse := { { id := \"realm\", paramValue := \"\\\"ericsson.se\\\"\" }, { id := \"username\", paramValue := \"\\\"10014002006@ericsson.se\\\"\" }, { id := \"uri\", paramValue := \"\\\"sip:ericsson.se\\\"\" }, { id := \"nonce\", paramValue := \"\\\"68802944664224158604006517243880\\\"\" }, { id := \"nc\", paramValue := \"00000002\" }, { id := \"cnonce\", paramValue := \"\\\"7465081d992c7338f6f4d15339e5b9b9\\\"\" }, { id := \"qop\", paramValue := \"auth\" }, { id := \"response\", paramValue := \"\\\"889e2c19ca45d463d075739ee8fbe1aa\\\"\" }, { id := \"algorithm\", paramValue := \"MD5\" } } } }, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_4_1575518397039837327\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"8cf72980-08e3-4819-943d-f7260f67318d\" }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.telephony\", paramValue := \"\\\"cs\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit }, { id := \"sip.ice\", paramValue := \"true\" }, { id := \"q\", paramValue := \"0.5\" } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 3, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := { fieldName := EXPIRES_E (24), deltaSec := \"0\" }, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494sa-5\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := { fieldName := REQUIRE_E (80), optionsTags := { \"pref\" } }, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := { fieldName := ROUTE_E (84), routeBody := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"lr\", paramValue := omit }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } }, rrParam := omit } } }, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f9f8934bb505a54267a8ca877b23a2c88d\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 28" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.305618", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port sipInternalPort[0] succeeded, message from 849: @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspRequest := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, request := { requestLine := { method := REGISTER_E (11), requestUri := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := { fieldName := AUTHORIZATION_E (11), body := { digestResponse := { { id := \"realm\", paramValue := \"\\\"ericsson.se\\\"\" }, { id := \"username\", paramValue := \"\\\"10014002006@ericsson.se\\\"\" }, { id := \"uri\", paramValue := \"\\\"sip:ericsson.se\\\"\" }, { id := \"nonce\", paramValue := \"\\\"68802944664224158604006517243880\\\"\" }, { id := \"nc\", paramValue := \"00000002\" }, { id := \"cnonce\", paramValue := \"\\\"7465081d992c7338f6f4d15339e5b9b9\\\"\" }, { id := \"qop\", paramValue := \"auth\" }, { id := \"response\", paramValue := \"\\\"889e2c19ca45d463d075739ee8fbe1aa\\\"\" }, { id := \"algorithm\", paramValue := \"MD5\" } } } }, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_4_1575518397039837327\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"8cf72980-08e3-4819-943d-f7260f67318d\" }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.telephony\", paramValue := \"\\\"cs\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit }, { id := \"sip.ice\", paramValue := \"true\" }, { id := \"q\", paramValue := \"0.5\" } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 3, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := { fieldName := EXPIRES_E (24), deltaSec := \"0\" }, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494sa-5\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := { fieldName := REQUIRE_E (80), optionsTags := { \"pref\" } }, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := { fieldName := ROUTE_E (84), routeBody := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"lr\", paramValue := omit }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } }, rrParam := omit } } }, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f9f8934bb505a54267a8ca877b23a2c88d\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 28" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.305729", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Message with id 28 was extracted from the queue of sipInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.305754", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "255", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.308238", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.321785", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "286", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.322395", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on sipInternalPort[0] to 849 @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMMAND_SIP_SEND_SIP_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"16\" }, { parameterName := \"SUBSCRIBER\", parameterValue := \"11\" } } }, aspsSip := { { aspResponse := { addr := { remote_host := \"142.133.142.3\", remote_port := 5060, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 200, reasonPhrase := \"OK\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_4_1575518397039837327\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 3, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494sa-5\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"23059259665535492407139151850966236440\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f9f8934bb505a54267a8ca877b23a2c88d\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.322723", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.322825", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on sipInternalPort from mtc @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMMAND_SIP_SEND_SIP_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"16\" }, { parameterName := \"SUBSCRIBER\", parameterValue := \"11\" } } }, aspsSip := { { aspResponse := { addr := { remote_host := \"142.133.142.3\", remote_port := 5060, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 200, reasonPhrase := \"OK\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_4_1575518397039837327\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 3, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494sa-5\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"23059259665535492407139151850966236440\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f9f8934bb505a54267a8ca877b23a2c88d\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 28" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.323073", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port sipInternalPort succeeded, message from mtc: @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMMAND_SIP_SEND_SIP_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"16\" }, { parameterName := \"SUBSCRIBER\", parameterValue := \"11\" } } }, aspsSip := { { aspResponse := { addr := { remote_host := \"142.133.142.3\", remote_port := 5060, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 200, reasonPhrase := \"OK\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_4_1575518397039837327\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 3, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494sa-5\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"23059259665535492407139151850966236440\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f9f8934bb505a54267a8ca877b23a2c88d\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 28" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.323182", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Message with id 28 was extracted from the queue of sipInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.323217", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "80", function_name: "function:sipRun", message: " Stop timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.323965", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on sipClientPort to system @IPL4_demo_types.SIP_SendTo : { connId := 3, remName := \"142.133.142.3\", remPort := 5060, proto := { tcp := { } }, msg := { raw := \"SIP/2.0 200 OK\\r\\nCall-ID:142.133.142.3_4_1575518397039837327\\r\\nContent-Length:0\\r\\nCSeq:3 REGISTER\\r\\nFrom:<sip:10014002006@ericsson.se>;tag=i1o494sa-5\\r\\nTo:<sip:10014002006@ericsson.se>;tag=23059259665535492407139151850966236440\\r\\nVia:SIP/2.0/TCP 142.133.142.3:5060;branch=z9hG4bKf1f9f8934bb505a54267a8ca877b23a2c88d\\r\\n\\r\\n\" }}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.324067", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Outgoing message was mapped to @IPL4asp_Types.ASP_SendTo : { connId := 3, remName := \"142.133.142.3\", remPort := 5060, proto := { tcp := { } }, msg := '5349502F322E3020323030204F4B0D0A43616C6C2D49443A3134322E3133332E3134322E335F345F313537353531383339373033393833373332370D0A436F6E74656E742D4C656E6774683A300D0A435365713A332052454749535445520D0A46726F6D3A3C7369703A3130303134303032303036406572696373736F6E2E73653E3B7461673D69316F34393473612D350D0A546F3A3C7369703A3130303134303032303036406572696373736F6E2E73653E3B7461673D32333035393235393636353533353439323430373133393135313835303936363233363434300D0A5669613A5349502F322E302F544350203134322E3133332E3134322E333A353036303B6272616E63683D7A39684734624B6631663966383933346262353035613534323637613863613837376232336132633838640D0A0D0A'O (\"SIP/2.0 200 OK\\r\\nCall-ID:142.133.142.3_4_1575518397039837327\\r\\nContent-Length:0\\r\\nCSeq:3 REGISTER\\r\\nFrom:<sip:10014002006@ericsson.se>;tag=i1o494sa-5\\r\\nTo:<sip:10014002006@ericsson.se>;tag=23059259665535492407139151850966236440\\r\\nVia:SIP/2.0/TCP 142.133.142.3:5060;branch=z9hG4bKf1f9f8934bb505a54267a8ca877b23a2c88d\\r\\n\\r\\n\")}" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.324290", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "388", function_name: "function:processCommand", message: " Sent on sipInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.324374", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "74", function_name: "function:sipRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.324434", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "253", function_name: "function:receiveInternalMessage", message: " Message enqueued on sipInternalPort[0] from 849 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.324504", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Receive operation on port sipInternalPort[0] succeeded, message from 849: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.324542", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Message with id 29 was extracted from the queue of sipInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.324572", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "255", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.324940", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.325007", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort[2] succeeded, message from 853: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"\", contentType := \"\", statusCode := \"204\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:36 GMT\" } } } } }} id 5" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.325055", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Message with id 5 was extracted from the queue of httpNodeInternalPort[2]" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.325099", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "241", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.325808", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.341744", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "267", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.341899", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort[4] to 855 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"16\" } } }, aspHttp := { { httpMessage := { method := \"GET\", url := \"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/channels\", body := \"\", contentType := \"\", statusCode := \"\", header := { } } } }}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.342102", component: "855", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort from mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"16\" } } }, aspHttp := { { httpMessage := { method := \"GET\", url := \"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/channels\", body := \"\", contentType := \"\", statusCode := \"\", header := { } } } }} id 5" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.342125", component: "mtc", peer_component: "lib", event_type: "TIMEROP", event_description: "ttcn", port: "114", function_name: "function:sleep", message: " Start timer timerGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.342174", component: "855", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort succeeded, message from mtc: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"16\" } } }, aspHttp := { { httpMessage := { method := \"GET\", url := \"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/channels\", body := \"\", contentType := \"\", statusCode := \"\", header := { } } } }} id 5" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.342235", component: "855", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "67", function_name: "function:httpNodeRun", message: " Message with id 5 was extracted from the queue of httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.342279", component: "855", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "68", function_name: "function:httpNodeRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.342427", component: "855", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "307", function_name: "function:clearHTTPClientPort", message: " Start timer timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.342446", component: "855", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "313", function_name: "function:clearHTTPClientPort", message: " Timeout timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.342498", component: "855", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Sent on clientPort to system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.344480", component: "855", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Message enqueued on clientPort from system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.344515", component: "855", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "243", function_name: "function:sendHTTPClientRequest", message: " Start timer timerWaitForHTTPOpenConnection: 2 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.344564", component: "855", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Receive operation on port clientPort succeeded, message from system(" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.344585", component: "855", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Message with id 9 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.344601", component: "855", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "246", function_name: "function:sendHTTPClientRequest", message: " Stop timer timerWaitForHTTPOpenConnection: 2 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.344647", component: "855", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on clientPort to system @HTTPmsg_Types.HTTPMessage : { request := { client_id := 13, method := \"GET\", uri := \"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/channels\", version_major := 1, version_minor := 1, header := { { header_name := \"Host\", header_value := \"142.133.142.3\" }, { header_name := \"Content-Length\", header_value := \"0\" } }, body := \"\" }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.344729", component: "855", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "189", function_name: "function:receiveAnyHTTPClientResponse", message: " Start timer timerWaitForHTTPResponse: 60 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.845766", component: "mtc", peer_component: "lib", event_type: "TIMEROP", event_description: "ttcn", port: "115", function_name: "function:sleep", message: " Timeout timerGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.846437", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.861802", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "267", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.862048", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort[3] to 854 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"16\" } } }, aspHttp := { { httpMessage := { method := \"DELETE\", url := \"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/register\", body := \"\", contentType := \"\", statusCode := \"\", header := { } } } }}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.862257", component: "854", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort from mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"16\" } } }, aspHttp := { { httpMessage := { method := \"DELETE\", url := \"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/register\", body := \"\", contentType := \"\", statusCode := \"\", header := { } } } }} id 4" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.862352", component: "854", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort succeeded, message from mtc: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"16\" } } }, aspHttp := { { httpMessage := { method := \"DELETE\", url := \"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/register\", body := \"\", contentType := \"\", statusCode := \"\", header := { } } } }} id 4" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.862394", component: "854", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "67", function_name: "function:httpNodeRun", message: " Message with id 4 was extracted from the queue of httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.862417", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.862430", component: "854", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "68", function_name: "function:httpNodeRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.862617", component: "854", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "307", function_name: "function:clearHTTPClientPort", message: " Start timer timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.862639", component: "854", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "313", function_name: "function:clearHTTPClientPort", message: " Timeout timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.862698", component: "854", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Sent on clientPort to system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.864388", component: "854", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Message enqueued on clientPort from system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.864437", component: "854", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "243", function_name: "function:sendHTTPClientRequest", message: " Start timer timerWaitForHTTPOpenConnection: 2 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.864481", component: "854", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Receive operation on port clientPort succeeded, message from system(" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.864515", component: "854", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Message with id 7 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.864544", component: "854", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "246", function_name: "function:sendHTTPClientRequest", message: " Stop timer timerWaitForHTTPOpenConnection: 2 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.864617", component: "854", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on clientPort to system @HTTPmsg_Types.HTTPMessage : { request := { client_id := 12, method := \"DELETE\", uri := \"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/register\", version_major := 1, version_minor := 1, header := { { header_name := \"Host\", header_value := \"142.133.142.3\" }, { header_name := \"Content-Length\", header_value := \"0\" } }, body := \"\" }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.864707", component: "854", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "189", function_name: "function:receiveAnyHTTPClientResponse", message: " Start timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.879412", component: "854", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on clientPort from system @HTTPmsg_Types.HTTPMessage : { response := { client_id := 12, version_major := 1, version_minor := 1, statuscode := 204, statustext := \"No Content\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:37 GMT\" } }, body := \"\" }} id 8" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.879495", component: "854", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port clientPort succeeded, message from system(): @HTTPmsg_Types.HTTPMessage : { response := { client_id := 12, version_major := 1, version_minor := 1, statuscode := 204, statustext := \"No Content\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:37 GMT\" } }, body := \"\" }} id 8" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.879525", component: "854", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "193", function_name: "function:receiveAnyHTTPClientResponse", message: " Message with id 8 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.879563", component: "854", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "194", function_name: "function:receiveAnyHTTPClientResponse", message: " Stop timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.879703", component: "854", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort to mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"\", contentType := \"\", statusCode := \"204\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:37 GMT\" } } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.879778", component: "854", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "62", function_name: "function:httpNodeRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.879947", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort[3] from 854 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"\", contentType := \"\", statusCode := \"204\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:37 GMT\" } } } } }} id 5" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.880024", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort[3] succeeded, message from 854: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"\", contentType := \"\", statusCode := \"204\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:37 GMT\" } } } } }} id 5" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.880056", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Message with id 5 was extracted from the queue of httpNodeInternalPort[3]" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.880076", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "241", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.880822", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.882037", component: "855", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on clientPort from system @HTTPmsg_Types.HTTPMessage : { response := { client_id := 13, version_major := 1, version_minor := 1, statuscode := 204, statustext := \"No Content\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:37 GMT\" } }, body := \"\" }} id 10" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.882126", component: "855", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port clientPort succeeded, message from system(): @HTTPmsg_Types.HTTPMessage : { response := { client_id := 13, version_major := 1, version_minor := 1, statuscode := 204, statustext := \"No Content\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:37 GMT\" } }, body := \"\" }} id 10" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.882157", component: "855", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "193", function_name: "function:receiveAnyHTTPClientResponse", message: " Message with id 10 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.882177", component: "855", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "194", function_name: "function:receiveAnyHTTPClientResponse", message: " Stop timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.882315", component: "855", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort to mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"\", contentType := \"\", statusCode := \"204\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:37 GMT\" } } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.882396", component: "855", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "62", function_name: "function:httpNodeRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.882447", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort[4] from 855 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"\", contentType := \"\", statusCode := \"204\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:37 GMT\" } } } } }} id 6" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.894496", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on sipClientPort from system @IPL4asp_Types.ASP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msgsip:ericsson.se SIP/2.0\\r\\nMax-Forwards: 69\\r\\nAuthorization: Digest realm=\\\"ericsson.se\\\",username=\\\"10014002007@ericsson.se\\\",uri=\\\"sip:ericsson.se\\\",nonce=\\\"86738058454623966345207209727360\\\",nc=00000002,cnonce=\\\"f5d8fbdccc84bf5d86dba4a4af036623\\\",qop=auth,response=\\\"1a61610232eaa4ea774aa4c62c42aadf\\\",algorithm=MD5\\r\\nRequire: pref\\r\\nContent-Length: 0\\r\\nTo: <sip:10014002007@ericsson.se>\\r\\nContact: <sip:10014002007@142.133.142.3:5060;csid=2838ab5a-e194-4923-81af-c9f0a544f667;transport=TCP>;+g.gsma.rcs.ipcall;+g.3gpp.icsi-ref=\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\";+g.oma.sip-im;+g.gsma.rcs.telephony=\\\"cs\\\";+g.3gpp.cs-voice;+g.3gpp.iari-ref=\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\";video;sip.ice=true;q=0.5\\r\\nExpires: 0\\r\\nCseq: 3 REGISTER\\r\\nVia: SIP/2.0/TCP 142.133.142.3:5060;branch=z9hG4bKf1f943852a1bab4f483aad87c48e46579ed9\\r\\nUser-Agent: H2S\\r\\nRoute: <sip:142.133.150.169:26720;lr;transport=TCP>\\r\\nFrom: <sip:10014002007@ericsson.se>;tag=i1o494y8-6\\r\\nCall-Id: 142.133.142.3_5_8407814859008826027\\r\\n\\r\\n\")} id 16" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.895176", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Incoming message was mapped to @IPL4_demo_types.SIP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msg := { request := { requestLine := { method := REGISTER_E (11), requestUri := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := { fieldName := AUTHORIZATION_E (11), body := { digestResponse := { { id := \"realm\", paramValue := \"\\\"ericsson.se\\\"\" }, { id := \"username\", paramValue := \"\\\"10014002007@ericsson.se\\\"\" }, { id := \"uri\", paramValue := \"\\\"sip:ericsson.se\\\"\" }, { id := \"nonce\", paramValue := \"\\\"86738058454623966345207209727360\\\"\" }, { id := \"nc\", paramValue := \"00000002\" }, { id := \"cnonce\", paramValue := \"\\\"f5d8fbdccc84bf5d86dba4a4af036623\\\"\" }, { id := \"qop\", paramValue := \"auth\" }, { id := \"response\", paramValue := \"\\\"1a61610232eaa4ea774aa4c62c42aadf\\\"\" }, { id := \"algorithm\", paramValue := \"MD5\" } } } }, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_5_8407814859008826027\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.telephony\", paramValue := \"\\\"cs\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit }, { id := \"sip.ice\", paramValue := \"true\" }, { id := \"q\", paramValue := \"0.5\" } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 3, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := { fieldName := EXPIRES_E (24), deltaSec := \"0\" }, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494y8-6\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := { fieldName := REQUIRE_E (80), optionsTags := { \"pref\" } }, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := { fieldName := ROUTE_E (84), routeBody := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"lr\", paramValue := omit }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } }, rrParam := omit } } }, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f943852a1bab4f483aad87c48e46579ed9\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } }} id 16" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.897745", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "286", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.897927", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "202", function_name: "function:sendInternalMessage", message: " Sent on sipInternalPort[0] to 849 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.898069", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "78", function_name: "function:sipRun", message: " Message enqueued on sipInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.898120", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.898141", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Receive operation on port sipInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.898169", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Message with id 29 was extracted from the queue of sipInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.898186", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "80", function_name: "function:sipRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.898308", component: "849", peer_component: "BaseSipClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "320", function_name: "function:generalReceiveSip", message: " Start timer timerWaitForSipMessage: 15 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.898513", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port sipClientPort succeeded, message from system(): @IPL4_demo_types.SIP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msg := { request := { requestLine := { method := REGISTER_E (11), requestUri := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := { fieldName := AUTHORIZATION_E (11), body := { digestResponse := { { id := \"realm\", paramValue := \"\\\"ericsson.se\\\"\" }, { id := \"username\", paramValue := \"\\\"10014002007@ericsson.se\\\"\" }, { id := \"uri\", paramValue := \"\\\"sip:ericsson.se\\\"\" }, { id := \"nonce\", paramValue := \"\\\"86738058454623966345207209727360\\\"\" }, { id := \"nc\", paramValue := \"00000002\" }, { id := \"cnonce\", paramValue := \"\\\"f5d8fbdccc84bf5d86dba4a4af036623\\\"\" }, { id := \"qop\", paramValue := \"auth\" }, { id := \"response\", paramValue := \"\\\"1a61610232eaa4ea774aa4c62c42aadf\\\"\" }, { id := \"algorithm\", paramValue := \"MD5\" } } } }, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_5_8407814859008826027\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.telephony\", paramValue := \"\\\"cs\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit }, { id := \"sip.ice\", paramValue := \"true\" }, { id := \"q\", paramValue := \"0.5\" } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 3, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := { fieldName := EXPIRES_E (24), deltaSec := \"0\" }, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494y8-6\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := { fieldName := REQUIRE_E (80), optionsTags := { \"pref\" } }, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := { fieldName := ROUTE_E (84), routeBody := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"lr\", paramValue := omit }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } }, rrParam := omit } } }, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f943852a1bab4f483aad87c48e46579ed9\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } }} id 16" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.898635", component: "849", peer_component: "BaseSipClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "345", function_name: "function:generalReceiveSip", message: " Message with id 16 was extracted from the queue of sipClientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.898671", component: "849", peer_component: "BaseSipClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "346", function_name: "function:generalReceiveSip", message: " Stop timer timerWaitForSipMessage: 15 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.899559", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on sipInternalPort to mtc @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspRequest := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, request := { requestLine := { method := REGISTER_E (11), requestUri := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := { fieldName := AUTHORIZATION_E (11), body := { digestResponse := { { id := \"realm\", paramValue := \"\\\"ericsson.se\\\"\" }, { id := \"username\", paramValue := \"\\\"10014002007@ericsson.se\\\"\" }, { id := \"uri\", paramValue := \"\\\"sip:ericsson.se\\\"\" }, { id := \"nonce\", paramValue := \"\\\"86738058454623966345207209727360\\\"\" }, { id := \"nc\", paramValue := \"00000002\" }, { id := \"cnonce\", paramValue := \"\\\"f5d8fbdccc84bf5d86dba4a4af036623\\\"\" }, { id := \"qop\", paramValue := \"auth\" }, { id := \"response\", paramValue := \"\\\"1a61610232eaa4ea774aa4c62c42aadf\\\"\" }, { id := \"algorithm\", paramValue := \"MD5\" } } } }, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_5_8407814859008826027\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.telephony\", paramValue := \"\\\"cs\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit }, { id := \"sip.ice\", paramValue := \"true\" }, { id := \"q\", paramValue := \"0.5\" } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 3, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := { fieldName := EXPIRES_E (24), deltaSec := \"0\" }, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494y8-6\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := { fieldName := REQUIRE_E (80), optionsTags := { \"pref\" } }, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := { fieldName := ROUTE_E (84), routeBody := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"lr\", paramValue := omit }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } }, rrParam := omit } } }, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f943852a1bab4f483aad87c48e46579ed9\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.899804", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "74", function_name: "function:sipRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.900110", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on sipInternalPort[0] from 849 @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspRequest := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, request := { requestLine := { method := REGISTER_E (11), requestUri := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := { fieldName := AUTHORIZATION_E (11), body := { digestResponse := { { id := \"realm\", paramValue := \"\\\"ericsson.se\\\"\" }, { id := \"username\", paramValue := \"\\\"10014002007@ericsson.se\\\"\" }, { id := \"uri\", paramValue := \"\\\"sip:ericsson.se\\\"\" }, { id := \"nonce\", paramValue := \"\\\"86738058454623966345207209727360\\\"\" }, { id := \"nc\", paramValue := \"00000002\" }, { id := \"cnonce\", paramValue := \"\\\"f5d8fbdccc84bf5d86dba4a4af036623\\\"\" }, { id := \"qop\", paramValue := \"auth\" }, { id := \"response\", paramValue := \"\\\"1a61610232eaa4ea774aa4c62c42aadf\\\"\" }, { id := \"algorithm\", paramValue := \"MD5\" } } } }, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_5_8407814859008826027\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.telephony\", paramValue := \"\\\"cs\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit }, { id := \"sip.ice\", paramValue := \"true\" }, { id := \"q\", paramValue := \"0.5\" } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 3, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := { fieldName := EXPIRES_E (24), deltaSec := \"0\" }, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494y8-6\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := { fieldName := REQUIRE_E (80), optionsTags := { \"pref\" } }, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := { fieldName := ROUTE_E (84), routeBody := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"lr\", paramValue := omit }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } }, rrParam := omit } } }, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f943852a1bab4f483aad87c48e46579ed9\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 30" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.900432", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port sipInternalPort[0] succeeded, message from 849: @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspRequest := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, request := { requestLine := { method := REGISTER_E (11), requestUri := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := { fieldName := AUTHORIZATION_E (11), body := { digestResponse := { { id := \"realm\", paramValue := \"\\\"ericsson.se\\\"\" }, { id := \"username\", paramValue := \"\\\"10014002007@ericsson.se\\\"\" }, { id := \"uri\", paramValue := \"\\\"sip:ericsson.se\\\"\" }, { id := \"nonce\", paramValue := \"\\\"86738058454623966345207209727360\\\"\" }, { id := \"nc\", paramValue := \"00000002\" }, { id := \"cnonce\", paramValue := \"\\\"f5d8fbdccc84bf5d86dba4a4af036623\\\"\" }, { id := \"qop\", paramValue := \"auth\" }, { id := \"response\", paramValue := \"\\\"1a61610232eaa4ea774aa4c62c42aadf\\\"\" }, { id := \"algorithm\", paramValue := \"MD5\" } } } }, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_5_8407814859008826027\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.telephony\", paramValue := \"\\\"cs\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit }, { id := \"sip.ice\", paramValue := \"true\" }, { id := \"q\", paramValue := \"0.5\" } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 3, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := { fieldName := EXPIRES_E (24), deltaSec := \"0\" }, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494y8-6\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := { fieldName := REQUIRE_E (80), optionsTags := { \"pref\" } }, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := { fieldName := ROUTE_E (84), routeBody := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"lr\", paramValue := omit }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } }, rrParam := omit } } }, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f943852a1bab4f483aad87c48e46579ed9\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 30" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.900588", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Message with id 30 was extracted from the queue of sipInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.900634", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "255", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.905302", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.921754", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "286", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.922466", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on sipInternalPort[0] to 849 @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMMAND_SIP_SEND_SIP_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"16\" }, { parameterName := \"SUBSCRIBER\", parameterValue := \"11\" } } }, aspsSip := { { aspResponse := { addr := { remote_host := \"142.133.142.3\", remote_port := 5060, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 200, reasonPhrase := \"OK\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := { fieldName := AUTHENTICATION_INFO_E (10), ainfo := { { id := \"qop\", paramValue := \"\\\"auth\\\"\" }, { id := \"rspauth\", paramValue := \"\\\"4e0afd3006175776f901e66eaea9c15a\\\"\" }, { id := \"cnonce\", paramValue := \"\\\"86738058454623966345207209727360\\\"\" }, { id := \"nc\", paramValue := \"\\\"2\\\"\" } } }, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_5_8407814859008826027\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.telephony\", paramValue := \"\\\"cs\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit }, { id := \"sip.ice\", paramValue := \"true\" }, { id := \"q\", paramValue := \"0.5\" }, { id := \"expires\", paramValue := \"0\" } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 3, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494y8-6\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := { fieldName := P_ASSOCIATED_URI (44), p_assoc_uris := { { p_asso_uri := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } }, ai_params := omit }, { p_asso_uri := { displayName := omit, addrSpec := { scheme := \"tel\", userInfo := { userOrTelephoneSubscriber := \"+10014002007\", password := omit }, hostPort := { host := omit, portField := omit }, urlParameters := omit, headers := omit } }, ai_params := omit } } }, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"96377838124618062465364271737466269050\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f943852a1bab4f483aad87c48e46579ed9\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.922838", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.922975", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on sipInternalPort from mtc @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMMAND_SIP_SEND_SIP_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"16\" }, { parameterName := \"SUBSCRIBER\", parameterValue := \"11\" } } }, aspsSip := { { aspResponse := { addr := { remote_host := \"142.133.142.3\", remote_port := 5060, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 200, reasonPhrase := \"OK\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := { fieldName := AUTHENTICATION_INFO_E (10), ainfo := { { id := \"qop\", paramValue := \"\\\"auth\\\"\" }, { id := \"rspauth\", paramValue := \"\\\"4e0afd3006175776f901e66eaea9c15a\\\"\" }, { id := \"cnonce\", paramValue := \"\\\"86738058454623966345207209727360\\\"\" }, { id := \"nc\", paramValue := \"\\\"2\\\"\" } } }, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_5_8407814859008826027\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.telephony\", paramValue := \"\\\"cs\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit }, { id := \"sip.ice\", paramValue := \"true\" }, { id := \"q\", paramValue := \"0.5\" }, { id := \"expires\", paramValue := \"0\" } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 3, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494y8-6\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := { fieldName := P_ASSOCIATED_URI (44), p_assoc_uris := { { p_asso_uri := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } }, ai_params := omit }, { p_asso_uri := { displayName := omit, addrSpec := { scheme := \"tel\", userInfo := { userOrTelephoneSubscriber := \"+10014002007\", password := omit }, hostPort := { host := omit, portField := omit }, urlParameters := omit, headers := omit } }, ai_params := omit } } }, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"96377838124618062465364271737466269050\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f943852a1bab4f483aad87c48e46579ed9\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 30" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.923255", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port sipInternalPort succeeded, message from mtc: @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMMAND_SIP_SEND_SIP_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"16\" }, { parameterName := \"SUBSCRIBER\", parameterValue := \"11\" } } }, aspsSip := { { aspResponse := { addr := { remote_host := \"142.133.142.3\", remote_port := 5060, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 200, reasonPhrase := \"OK\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := { fieldName := AUTHENTICATION_INFO_E (10), ainfo := { { id := \"qop\", paramValue := \"\\\"auth\\\"\" }, { id := \"rspauth\", paramValue := \"\\\"4e0afd3006175776f901e66eaea9c15a\\\"\" }, { id := \"cnonce\", paramValue := \"\\\"86738058454623966345207209727360\\\"\" }, { id := \"nc\", paramValue := \"\\\"2\\\"\" } } }, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_5_8407814859008826027\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.telephony\", paramValue := \"\\\"cs\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit }, { id := \"sip.ice\", paramValue := \"true\" }, { id := \"q\", paramValue := \"0.5\" }, { id := \"expires\", paramValue := \"0\" } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 3, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494y8-6\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := { fieldName := P_ASSOCIATED_URI (44), p_assoc_uris := { { p_asso_uri := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } }, ai_params := omit }, { p_asso_uri := { displayName := omit, addrSpec := { scheme := \"tel\", userInfo := { userOrTelephoneSubscriber := \"+10014002007\", password := omit }, hostPort := { host := omit, portField := omit }, urlParameters := omit, headers := omit } }, ai_params := omit } } }, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"96377838124618062465364271737466269050\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f943852a1bab4f483aad87c48e46579ed9\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 30" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.923364", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Message with id 30 was extracted from the queue of sipInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.923387", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "80", function_name: "function:sipRun", message: " Stop timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.923923", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on sipClientPort to system @IPL4_demo_types.SIP_SendTo : { connId := 3, remName := \"142.133.142.3\", remPort := 5060, proto := { tcp := { } }, msg := { raw := \"SIP/2.0 200 OK\\r\\nAuthentication-Info:qop=\\\"auth\\\", rspauth=\\\"4e0afd3006175776f901e66eaea9c15a\\\", cnonce=\\\"86738058454623966345207209727360\\\", nc=\\\"2\\\"\\r\\nCall-ID:142.133.142.3_5_8407814859008826027\\r\\nContact:<sip:10014002007@142.133.142.3:5060;csid=2838ab5a-e194-4923-81af-c9f0a544f667;transport=TCP>;+g.gsma.rcs.ipcall;+g.3gpp.icsi-ref=\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\";+g.oma.sip-im;+g.gsma.rcs.telephony=\\\"cs\\\";+g.3gpp.cs-voice;+g.3gpp.iari-ref=\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\";video;sip.ice=true;q=0.5;expires=0\\r\\nContent-Length:0\\r\\nCSeq:3 REGISTER\\r\\nFrom:<sip:10014002007@ericsson.se>;tag=i1o494y8-6\\r\\nP-Associated-URI:<sip:10014002007@ericsson.se>\\r\\nP-Associated-URI:<tel:+10014002007>\\r\\nTo:<sip:10014002007@ericsson.se>;tag=96377838124618062465364271737466269050\\r\\nVia:SIP/2.0/TCP 142.133.142.3:5060;branch=z9hG4bKf1f943852a1bab4f483aad87c48e46579ed9\\r\\n\\r\\n\" }}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.924159", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Outgoing message was mapped to @IPL4asp_Types.ASP_SendTo : { connId := 3, remName := \"142.133.142.3\", remPort := 5060, proto := { tcp := { } }, msgr\\nAuthentication-Info:qop=\\\"auth\\\", rspauth=\\\"4e0afd3006175776f901e66eaea9c15a\\\", cnonce=\\\"86738058454623966345207209727360\\\", nc=\\\"2\\\"\\r\\nCall-ID:142.133.142.3_5_8407814859008826027\\r\\nContact:<sip:10014002007@142.133.142.3:5060;csid=2838ab5a-e194-4923-81af-c9f0a544f667;transport=TCP>;+g.gsma.rcs.ipcall;+g.3gpp.icsi-ref=\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\";+g.oma.sip-im;+g.gsma.rcs.telephony=\\\"cs\\\";+g.3gpp.cs-voice;+g.3gpp.iari-ref=\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\";video;sip.ice=true;q=0.5;expires=0\\r\\nContent-Length:0\\r\\nCSeq:3 REGISTER\\r\\nFrom:<sip:10014002007@ericsson.se>;tag=i1o494y8-6\\r\\nP-Associated-URI:<sip:10014002007@ericsson.se>\\r\\nP-Associated-URI:<tel:+10014002007>\\r\\nTo:<sip:10014002007@ericsson.se>;tag=96377838124618062465364271737466269050\\r\\nVia:SIP/2.0/TCP 142.133.142.3:5060;branch=z9hG4bKf1f943852a1bab4f483aad87c48e46579ed9\\r\\n\\r\\n\")}" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.924371", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "388", function_name: "function:processCommand", message: " Sent on sipInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.924446", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "74", function_name: "function:sipRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.924524", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "253", function_name: "function:receiveInternalMessage", message: " Message enqueued on sipInternalPort[0] from 849 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.924584", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Receive operation on port sipInternalPort[0] succeeded, message from 849: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.924613", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Message with id 31 was extracted from the queue of sipInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.924634", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "255", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.925049", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.925111", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort[4] succeeded, message from 855: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"\", contentType := \"\", statusCode := \"204\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:37 GMT\" } } } } }} id 6" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.925171", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Message with id 6 was extracted from the queue of httpNodeInternalPort[4]" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.925195", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "241", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.925451", component: "mtc", peer_component: "lib", event_type: "TIMEROP", event_description: "ttcn", port: "114", function_name: "function:sleep", message: " Start timer timerGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.077753", component: "mtc", peer_component: "lib", event_type: "TIMEROP", event_description: "ttcn", port: "115", function_name: "function:sleep", message: " Timeout timerGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.078516", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.089818", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "267", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:38.090224", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort[1] to 852 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"PARAM_PORT_OVERRIDE\", parameterValue := \"8888\" } } }, aspHttp := { { httpMessage := { method := \"POST\", url := \"/jolokia/\", body := \"[ { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,successfulTerminating=successfulTerminating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,successfulOriginating=successfulOriginating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulOriginating=unsuccessfulOriginating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulTerminating=unsuccessfulTerminating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,textMessages=textMessages-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,mediaMessages=mediaMessages-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,MSRPSession=MSRPSession-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=GAUGE,format=INTEGER,MSRPCurrentlyActive=MSRPCurrentlyActive1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } ] \", contentType := \"application/json\", statusCode := \"\", header := omit } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.090426", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:38.090716", component: "852", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort from mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"PARAM_PORT_OVERRIDE\", parameterValue := \"8888\" } } }, aspHttp := { { httpMessage := { method := \"POST\", url := \"/jolokia/\", body := \"[ { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,successfulTerminating=successfulTerminating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,successfulOriginating=successfulOriginating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulOriginating=unsuccessfulOriginating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulTerminating=unsuccessfulTerminating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,textMessages=textMessages-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,mediaMessages=mediaMessages-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,MSRPSession=MSRPSession-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=GAUGE,format=INTEGER,MSRPCurrentlyActive=MSRPCurrentlyActive1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } ] \", contentType := \"application/json\", statusCode := \"\", header := omit } } }} id 5" }
Structured  DataFrame { time: "2014/Oct/24 18:34:38.091171", component: "852", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort succeeded, message from mtc: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"PARAM_PORT_OVERRIDE\", parameterValue := \"8888\" } } }, aspHttp := { { httpMessage := { method := \"POST\", url := \"/jolokia/\", body := \"[ { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,successfulTerminating=successfulTerminating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,successfulOriginating=successfulOriginating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulOriginating=unsuccessfulOriginating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulTerminating=unsuccessfulTerminating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,textMessages=textMessages-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,mediaMessages=mediaMessages-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,MSRPSession=MSRPSession-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=GAUGE,format=INTEGER,MSRPCurrentlyActive=MSRPCurrentlyActive1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } ] \", contentType := \"application/json\", statusCode := \"\", header := omit } } }} id 5" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.091260", component: "852", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "67", function_name: "function:httpNodeRun", message: " Message with id 5 was extracted from the queue of httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.091308", component: "852", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "68", function_name: "function:httpNodeRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.091635", component: "852", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "307", function_name: "function:clearHTTPClientPort", message: " Start timer timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.091685", component: "852", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "313", function_name: "function:clearHTTPClientPort", message: " Timeout timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.091824", component: "852", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Sent on clientPort to system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.092924", component: "852", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Message enqueued on clientPort from system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.092981", component: "852", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "243", function_name: "function:sendHTTPClientRequest", message: " Start timer timerWaitForHTTPOpenConnection: 2 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.093032", component: "852", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Receive operation on port clientPort succeeded, message from system(" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.093068", component: "852", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Message with id 9 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.093103", component: "852", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "246", function_name: "function:sendHTTPClientRequest", message: " Stop timer timerWaitForHTTPOpenConnection: 2 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:38.093424", component: "852", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on clientPort to system @HTTPmsg_Types.HTTPMessage : { request := { client_id := 13, method := \"POST\", uri := \"/jolokia/\", version_major := 1, version_minor := 1, header := { { header_name := \"Host\", header_value := \"142.133.142.3\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Content-Length\", header_value := \"1971\" } }, body := \"[ { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,successfulTerminating=successfulTerminating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,successfulOriginating=successfulOriginating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulOriginating=unsuccessfulOriginating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulTerminating=unsuccessfulTerminating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,textMessages=textMessages-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,mediaMessages=mediaMessages-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,MSRPSession=MSRPSession-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=GAUGE,format=INTEGER,MSRPCurrentlyActive=MSRPCurrentlyActive1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } ] \" }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.093609", component: "852", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "189", function_name: "function:receiveAnyHTTPClientResponse", message: " Start timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:38.099893", component: "852", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on clientPort from system @HTTPmsg_Types.HTTPMessage : { response := { client_id := 13, version_major := 1, version_minor := 1, statuscode := 200, statustext := \"OK\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache\" }, { header_name := \"Pragma\", header_value := \"no-cache\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:37 GMT\" }, { header_name := \"Expires\", header_value := \"Fri, 24 Oct 2014 21:34:38 GMT\" }, { header_name := \"Content-Type\", header_value := \"text/plain;charset=utf-8\" }, { header_name := \"Content-Length\", header_value := \"1762\" } }, body := \"[{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,successfulTerminating=successfulTerminating-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":4},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,successfulOriginating=successfulOriginating-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":4},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulOriginating=unsuccessfulOriginating-1\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":1},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulTerminating=unsuccessfulTerminating-1\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":1},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,textMessages=textMessages-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":8},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,mediaMessages=mediaMessages-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,MSRPSession=MSRPSession-1,interface=WcgChatCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":2},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,MSRPCurrentlyActive=MSRPCurrentlyActive1,format=INTEGER,interface=WcgGlobalCounterGroup,type=GAUGE\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0}]\" }} id 10" }
Structured  DataFrame { time: "2014/Oct/24 18:34:38.100255", component: "852", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port clientPort succeeded, message from system(): @HTTPmsg_Types.HTTPMessage : { response := { client_id := 13, version_major := 1, version_minor := 1, statuscode := 200, statustext := \"OK\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache\" }, { header_name := \"Pragma\", header_value := \"no-cache\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:37 GMT\" }, { header_name := \"Expires\", header_value := \"Fri, 24 Oct 2014 21:34:38 GMT\" }, { header_name := \"Content-Type\", header_value := \"text/plain;charset=utf-8\" }, { header_name := \"Content-Length\", header_value := \"1762\" } }, body := \"[{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,successfulTerminating=successfulTerminating-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":4},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,successfulOriginating=successfulOriginating-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":4},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulOriginating=unsuccessfulOriginating-1\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":1},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulTerminating=unsuccessfulTerminating-1\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":1},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,textMessages=textMessages-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":8},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,mediaMessages=mediaMessages-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,MSRPSession=MSRPSession-1,interface=WcgChatCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":2},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,MSRPCurrentlyActive=MSRPCurrentlyActive1,format=INTEGER,interface=WcgGlobalCounterGroup,type=GAUGE\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0}]\" }} id 10" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.100363", component: "852", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "193", function_name: "function:receiveAnyHTTPClientResponse", message: " Message with id 10 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.100405", component: "852", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "194", function_name: "function:receiveAnyHTTPClientResponse", message: " Stop timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:38.100773", component: "852", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort to mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"[{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,successfulTerminating=successfulTerminating-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":4},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,successfulOriginating=successfulOriginating-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":4},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulOriginating=unsuccessfulOriginating-1\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":1},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulTerminating=unsuccessfulTerminating-1\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":1},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,textMessages=textMessages-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":8},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,mediaMessages=mediaMessages-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,MSRPSession=MSRPSession-1,interface=WcgChatCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":2},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,MSRPCurrentlyActive=MSRPCurrentlyActive1,format=INTEGER,interface=WcgGlobalCounterGroup,type=GAUGE\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0}]\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache\" }, { header_name := \"Pragma\", header_value := \"no-cache\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:37 GMT\" }, { header_name := \"Expires\", header_value := \"Fri, 24 Oct 2014 21:34:38 GMT\" }, { header_name := \"Content-Type\", header_value := \"text/plain;charset=utf-8\" }, { header_name := \"Content-Length\", header_value := \"1762\" } } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.100938", component: "852", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "62", function_name: "function:httpNodeRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:38.101205", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort[1] from 852 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"[{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,successfulTerminating=successfulTerminating-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":4},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,successfulOriginating=successfulOriginating-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":4},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulOriginating=unsuccessfulOriginating-1\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":1},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulTerminating=unsuccessfulTerminating-1\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":1},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,textMessages=textMessages-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":8},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,mediaMessages=mediaMessages-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,MSRPSession=MSRPSession-1,interface=WcgChatCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":2},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,MSRPCurrentlyActive=MSRPCurrentlyActive1,format=INTEGER,interface=WcgGlobalCounterGroup,type=GAUGE\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0}]\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache\" }, { header_name := \"Pragma\", header_value := \"no-cache\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:37 GMT\" }, { header_name := \"Expires\", header_value := \"Fri, 24 Oct 2014 21:34:38 GMT\" }, { header_name := \"Content-Type\", header_value := \"text/plain;charset=utf-8\" }, { header_name := \"Content-Length\", header_value := \"1762\" } } } } }} id 6" }
Structured  DataFrame { time: "2014/Oct/24 18:34:38.101488", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort[1] succeeded, message from 852: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"[{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,successfulTerminating=successfulTerminating-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":4},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,successfulOriginating=successfulOriginating-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":4},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulOriginating=unsuccessfulOriginating-1\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":1},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulTerminating=unsuccessfulTerminating-1\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":1},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,textMessages=textMessages-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":8},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,mediaMessages=mediaMessages-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,MSRPSession=MSRPSession-1,interface=WcgChatCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":2},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,MSRPCurrentlyActive=MSRPCurrentlyActive1,format=INTEGER,interface=WcgGlobalCounterGroup,type=GAUGE\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0}]\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache\" }, { header_name := \"Pragma\", header_value := \"no-cache\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:37 GMT\" }, { header_name := \"Expires\", header_value := \"Fri, 24 Oct 2014 21:34:38 GMT\" }, { header_name := \"Content-Type\", header_value := \"text/plain;charset=utf-8\" }, { header_name := \"Content-Length\", header_value := \"1762\" } } } } }} id 6" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.101558", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Message with id 6 was extracted from the queue of httpNodeInternalPort[1]" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.101585", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "241", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.104445", component: "mtc", peer_component: "lib", event_type: "TIMEROP", event_description: "ttcn", port: "114", function_name: "function:sleep", message: " Start timer timerGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.254471", component: "mtc", peer_component: "lib", event_type: "TIMEROP", event_description: "ttcn", port: "115", function_name: "function:sleep", message: " Timeout timerGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.254915", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.265532", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "267", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:38.265813", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort[1] to 852 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"PARAM_PORT_OVERRIDE\", parameterValue := \"8888\" } } }, aspHttp := { { httpMessage := { method := \"POST\", url := \"/jolokia/\", body := \"[ { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,successfullyReceivedDeliveryNotification=successfullyReceivedDeliveryNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,successfullyReceivedDisplayNotification=successfullyReceivedDisplayNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,failedReceivedDeliveryNotification=failedReceivedDeliveryNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,failedReceivedDisplayNotification=failedReceivedDisplayNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,successfullySentDisplayNotification=successfullySentDisplayNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,failedSentDisplayNotification=failedSentDisplayNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } ] \", contentType := \"application/json\", statusCode := \"\", header := omit } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.266004", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:38.266130", component: "852", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort from mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"PARAM_PORT_OVERRIDE\", parameterValue := \"8888\" } } }, aspHttp := { { httpMessage := { method := \"POST\", url := \"/jolokia/\", body := \"[ { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,successfullyReceivedDeliveryNotification=successfullyReceivedDeliveryNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,successfullyReceivedDisplayNotification=successfullyReceivedDisplayNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,failedReceivedDeliveryNotification=failedReceivedDeliveryNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,failedReceivedDisplayNotification=failedReceivedDisplayNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,successfullySentDisplayNotification=successfullySentDisplayNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,failedSentDisplayNotification=failedSentDisplayNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } ] \", contentType := \"application/json\", statusCode := \"\", header := omit } } }} id 6" }
Structured  DataFrame { time: "2014/Oct/24 18:34:38.266308", component: "852", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort succeeded, message from mtc: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"PARAM_PORT_OVERRIDE\", parameterValue := \"8888\" } } }, aspHttp := { { httpMessage := { method := \"POST\", url := \"/jolokia/\", body := \"[ { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,successfullyReceivedDeliveryNotification=successfullyReceivedDeliveryNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,successfullyReceivedDisplayNotification=successfullyReceivedDisplayNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,failedReceivedDeliveryNotification=failedReceivedDeliveryNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,failedReceivedDisplayNotification=failedReceivedDisplayNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,successfullySentDisplayNotification=successfullySentDisplayNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,failedSentDisplayNotification=failedSentDisplayNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } ] \", contentType := \"application/json\", statusCode := \"\", header := omit } } }} id 6" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.266380", component: "852", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "67", function_name: "function:httpNodeRun", message: " Message with id 6 was extracted from the queue of httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.266399", component: "852", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "68", function_name: "function:httpNodeRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.266515", component: "852", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "307", function_name: "function:clearHTTPClientPort", message: " Start timer timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.266533", component: "852", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "313", function_name: "function:clearHTTPClientPort", message: " Timeout timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.266584", component: "852", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Sent on clientPort to system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.267493", component: "852", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Message enqueued on clientPort from system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.267533", component: "852", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "243", function_name: "function:sendHTTPClientRequest", message: " Start timer timerWaitForHTTPOpenConnection: 2 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.267560", component: "852", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Receive operation on port clientPort succeeded, message from system(" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.267588", component: "852", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Message with id 11 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.267604", component: "852", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "246", function_name: "function:sendHTTPClientRequest", message: " Stop timer timerWaitForHTTPOpenConnection: 2 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:38.267749", component: "852", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on clientPort to system @HTTPmsg_Types.HTTPMessage : { request := { client_id := 14, method := \"POST\", uri := \"/jolokia/\", version_major := 1, version_minor := 1, header := { { header_name := \"Host\", header_value := \"142.133.142.3\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Content-Length\", header_value := \"1682\" } }, body := \"[ { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,successfullyReceivedDeliveryNotification=successfullyReceivedDeliveryNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,successfullyReceivedDisplayNotification=successfullyReceivedDisplayNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,failedReceivedDeliveryNotification=failedReceivedDeliveryNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,failedReceivedDisplayNotification=failedReceivedDisplayNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,successfullySentDisplayNotification=successfullySentDisplayNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,failedSentDisplayNotification=failedSentDisplayNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } ] \" }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.267821", component: "852", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "189", function_name: "function:receiveAnyHTTPClientResponse", message: " Start timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:38.274516", component: "852", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on clientPort from system @HTTPmsg_Types.HTTPMessage : { response := { client_id := 14, version_major := 1, version_minor := 1, statuscode := 200, statustext := \"OK\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache\" }, { header_name := \"Pragma\", header_value := \"no-cache\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:37 GMT\" }, { header_name := \"Expires\", header_value := \"Fri, 24 Oct 2014 21:34:38 GMT\" }, { header_name := \"Content-Type\", header_value := \"text/plain;charset=utf-8\" }, { header_name := \"Content-Length\", header_value := \"1525\" } }, body := \"[{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,successfullyReceivedDeliveryNotification=successfullyReceivedDeliveryNotification-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":4},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,successfullyReceivedDisplayNotification=successfullyReceivedDisplayNotification-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,failedReceivedDeliveryNotification=failedReceivedDeliveryNotification-1,interface=WcgGlobalCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,failedReceivedDisplayNotification=failedReceivedDisplayNotification-1,interface=WcgGlobalCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,successfullySentDisplayNotification=successfullySentDisplayNotification-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,failedSentDisplayNotification=failedSentDisplayNotification-1,interface=WcgGlobalCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0}]\" }} id 12" }
Structured  DataFrame { time: "2014/Oct/24 18:34:38.274789", component: "852", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port clientPort succeeded, message from system(): @HTTPmsg_Types.HTTPMessage : { response := { client_id := 14, version_major := 1, version_minor := 1, statuscode := 200, statustext := \"OK\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache\" }, { header_name := \"Pragma\", header_value := \"no-cache\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:37 GMT\" }, { header_name := \"Expires\", header_value := \"Fri, 24 Oct 2014 21:34:38 GMT\" }, { header_name := \"Content-Type\", header_value := \"text/plain;charset=utf-8\" }, { header_name := \"Content-Length\", header_value := \"1525\" } }, body := \"[{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,successfullyReceivedDeliveryNotification=successfullyReceivedDeliveryNotification-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":4},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,successfullyReceivedDisplayNotification=successfullyReceivedDisplayNotification-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,failedReceivedDeliveryNotification=failedReceivedDeliveryNotification-1,interface=WcgGlobalCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,failedReceivedDisplayNotification=failedReceivedDisplayNotification-1,interface=WcgGlobalCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,successfullySentDisplayNotification=successfullySentDisplayNotification-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,failedSentDisplayNotification=failedSentDisplayNotification-1,interface=WcgGlobalCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0}]\" }} id 12" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.274859", component: "852", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "193", function_name: "function:receiveAnyHTTPClientResponse", message: " Message with id 12 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.274898", component: "852", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "194", function_name: "function:receiveAnyHTTPClientResponse", message: " Stop timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:38.275184", component: "852", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort to mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"[{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,successfullyReceivedDeliveryNotification=successfullyReceivedDeliveryNotification-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":4},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,successfullyReceivedDisplayNotification=successfullyReceivedDisplayNotification-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,failedReceivedDeliveryNotification=failedReceivedDeliveryNotification-1,interface=WcgGlobalCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,failedReceivedDisplayNotification=failedReceivedDisplayNotification-1,interface=WcgGlobalCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,successfullySentDisplayNotification=successfullySentDisplayNotification-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,failedSentDisplayNotification=failedSentDisplayNotification-1,interface=WcgGlobalCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0}]\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache\" }, { header_name := \"Pragma\", header_value := \"no-cache\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:37 GMT\" }, { header_name := \"Expires\", header_value := \"Fri, 24 Oct 2014 21:34:38 GMT\" }, { header_name := \"Content-Type\", header_value := \"text/plain;charset=utf-8\" }, { header_name := \"Content-Length\", header_value := \"1525\" } } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.275354", component: "852", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "62", function_name: "function:httpNodeRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:38.275528", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort[1] from 852 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"[{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,successfullyReceivedDeliveryNotification=successfullyReceivedDeliveryNotification-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":4},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,successfullyReceivedDisplayNotification=successfullyReceivedDisplayNotification-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,failedReceivedDeliveryNotification=failedReceivedDeliveryNotification-1,interface=WcgGlobalCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,failedReceivedDisplayNotification=failedReceivedDisplayNotification-1,interface=WcgGlobalCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,successfullySentDisplayNotification=successfullySentDisplayNotification-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,failedSentDisplayNotification=failedSentDisplayNotification-1,interface=WcgGlobalCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0}]\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache\" }, { header_name := \"Pragma\", header_value := \"no-cache\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:37 GMT\" }, { header_name := \"Expires\", header_value := \"Fri, 24 Oct 2014 21:34:38 GMT\" }, { header_name := \"Content-Type\", header_value := \"text/plain;charset=utf-8\" }, { header_name := \"Content-Length\", header_value := \"1525\" } } } } }} id 7" }
Structured  DataFrame { time: "2014/Oct/24 18:34:38.275709", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort[1] succeeded, message from 852: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"[{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,successfullyReceivedDeliveryNotification=successfullyReceivedDeliveryNotification-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":4},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,successfullyReceivedDisplayNotification=successfullyReceivedDisplayNotification-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,failedReceivedDeliveryNotification=failedReceivedDeliveryNotification-1,interface=WcgGlobalCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,failedReceivedDisplayNotification=failedReceivedDisplayNotification-1,interface=WcgGlobalCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,successfullySentDisplayNotification=successfullySentDisplayNotification-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,failedSentDisplayNotification=failedSentDisplayNotification-1,interface=WcgGlobalCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0}]\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache\" }, { header_name := \"Pragma\", header_value := \"no-cache\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:37 GMT\" }, { header_name := \"Expires\", header_value := \"Fri, 24 Oct 2014 21:34:38 GMT\" }, { header_name := \"Content-Type\", header_value := \"text/plain;charset=utf-8\" }, { header_name := \"Content-Length\", header_value := \"1525\" } } } } }} id 7" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.275748", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Message with id 7 was extracted from the queue of httpNodeInternalPort[1]" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.275766", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "241", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.277661", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.289581", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "286", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.289771", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "202", function_name: "function:sendInternalMessage", message: " Sent on sipInternalPort[0] to 849 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.289953", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "78", function_name: "function:sipRun", message: " Message enqueued on sipInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.290006", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.290036", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Receive operation on port sipInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.290060", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Message with id 31 was extracted from the queue of sipInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.290074", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "80", function_name: "function:sipRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.290163", component: "849", peer_component: "BaseSipClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "703", function_name: "function:clearSipQueue", message: " Port sipClientPort was cleared" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.290207", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "388", function_name: "function:processCommand", message: " Sent on sipInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.290258", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "74", function_name: "function:sipRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.290318", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "253", function_name: "function:receiveInternalMessage", message: " Message enqueued on sipInternalPort[0] from 849 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.290389", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Receive operation on port sipInternalPort[0] succeeded, message from 849: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.290457", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Message with id 32 was extracted from the queue of sipInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.290497", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "255", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.291011", component: "mtc", peer_component: "lib", event_type: "TIMEROP", event_description: "ttcn", port: "114", function_name: "function:sleep", message: " Start timer timerGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.793830", component: "mtc", peer_component: "lib", event_type: "TIMEROP", event_description: "ttcn", port: "115", function_name: "function:sleep", message: " Timeout timerGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.804192", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 10 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.804560", component: "858", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port clientPort was started." }
Simple DataFrame { time: "2014/Oct/24 18:34:38.804609", component: "858", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port serverPort was started." }
Simple DataFrame { time: "2014/Oct/24 18:34:38.804642", component: "858", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port httpNodeInternalPort was started." }
Simple DataFrame { time: "2014/Oct/24 18:34:38.806080", component: "858", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "130", function_name: "function:httpNodeInitialize", message: " Port clientPort was mapped to system:clientPort[6]" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.806508", component: "858", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "133", function_name: "function:httpNodeInitialize", message: " Port serverPort was mapped to system:serverPort[6]" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.806904", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port httpNodeInternalPort[6] is waiting for connection from 858:httpNodeInternalPort on UNIX pathname /tmp/ttcn3-portconn-200b9f2a." }
Simple DataFrame { time: "2014/Oct/24 18:34:38.807049", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "239", function_name: "function:receiveInternalMessage", message: " Port httpNodeInternalPort[6] has accepted the connection from 858:httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.807107", component: "858", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "136", function_name: "function:httpNodeInitialize", message: " Port httpNodeInternalPort has established the connection with mtc:httpNodeInternalPort[6] using transport type UNIX" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.807310", component: "858", peer_component: "BaseHttpServerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "55", function_name: "function:openServerForListening", message: " Sent on serverPort to system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.807439", component: "858", peer_component: "BaseHttpServerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "55", function_name: "function:openServerForListening", message: " Message enqueued on serverPort from system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.807472", component: "858", peer_component: "BaseHttpServerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "73", function_name: "function:receiveHTTPServerListenResult", message: " Start timer timerWaitForHTTPRequest: 5 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.807510", component: "858", peer_component: "BaseHttpServerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "77", function_name: "function:receiveHTTPServerListenResult", message: " Receive operation on port serverPort succeeded, message from system(" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.807530", component: "858", peer_component: "BaseHttpServerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "77", function_name: "function:receiveHTTPServerListenResult", message: " Message with id 1 was extracted from the queue of serverPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.807555", component: "858", peer_component: "BaseHttpServerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "78", function_name: "function:receiveHTTPServerListenResult", message: " Stop timer timerWaitForHTTPRequest: 5 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.807650", component: "858", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "141", function_name: "function:httpNodeInitialize", message: " Sent on httpNodeInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.807719", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "239", function_name: "function:receiveInternalMessage", message: " Message enqueued on httpNodeInternalPort[6] from 858 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.807766", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Receive operation on port httpNodeInternalPort[6] succeeded, message from 858: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.807790", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Message with id 1 was extracted from the queue of httpNodeInternalPort[6]" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.807808", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "241", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 10 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.808016", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.808096", component: "858", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "62", function_name: "function:httpNodeRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.818055", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "267", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.818213", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "191", function_name: "function:sendInternalMessage", message: " Sent on httpNodeInternalPort[6] to 858 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.818402", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.818494", component: "858", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "66", function_name: "function:httpNodeRun", message: " Message enqueued on httpNodeInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.818550", component: "858", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "67", function_name: "function:httpNodeRun", message: " Receive operation on port httpNodeInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.818574", component: "858", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "67", function_name: "function:httpNodeRun", message: " Message with id 1 was extracted from the queue of httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.818598", component: "858", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "68", function_name: "function:httpNodeRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.818774", component: "858", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "307", function_name: "function:clearHTTPClientPort", message: " Start timer timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.818794", component: "858", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "313", function_name: "function:clearHTTPClientPort", message: " Timeout timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.818848", component: "858", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Sent on clientPort to system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.819654", component: "858", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Message enqueued on clientPort from system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.819697", component: "858", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "243", function_name: "function:sendHTTPClientRequest", message: " Start timer timerWaitForHTTPOpenConnection: 2 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.819727", component: "858", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Receive operation on port clientPort succeeded, message from system(" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.819743", component: "858", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Message with id 1 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.819757", component: "858", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "246", function_name: "function:sendHTTPClientRequest", message: " Stop timer timerWaitForHTTPOpenConnection: 2 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:38.819828", component: "858", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on clientPort to system @HTTPmsg_Types.HTTPMessage : { request := { client_id := 9, method := \"GET\", uri := \"/jolokia/read/com.ericsson.kalki:Type=ClientSession,Name=*\", version_major := 1, version_minor := 1, header := { { header_name := \"Host\", header_value := \"142.133.142.3\" }, { header_name := \"Content-Length\", header_value := \"0\" } }, body := \"\" }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.819918", component: "858", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "189", function_name: "function:receiveAnyHTTPClientResponse", message: " Start timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:38.826820", component: "858", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on clientPort from system @HTTPmsg_Types.HTTPMessage : { response := { client_id := 9, version_major := 1, version_minor := 1, statuscode := 200, statustext := \"OK\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache\" }, { header_name := \"Pragma\", header_value := \"no-cache\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:37 GMT\" }, { header_name := \"Expires\", header_value := \"Fri, 24 Oct 2014 21:34:38 GMT\" }, { header_name := \"Content-Type\", header_value := \"text/plain;charset=utf-8\" }, { header_name := \"Content-Length\", header_value := \"3187\" } }, body := \"{\\\"error_type\\\":\\\"javax.management.InstanceNotFoundException\\\",\\\"error\\\":\\\"javax.management.InstanceNotFoundException : No MBean with pattern com.ericsson.kalki:Type=ClientSession,Name=* found for reading attributes\\\",\\\"status\\\":404,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.kalki:Name=*,Type=ClientSession\\\",\\\"type\\\":\\\"read\\\"},\\\"stacktrace\\\":\\\"javax.management.InstanceNotFoundException: No MBean with pattern com.ericsson.kalki:Type=ClientSession,Name=* found for reading attributes\\\\n\\\\tat org.jolokia.handler.ReadHandler.searchMBeans(ReadHandler.java:155)\\\\n\\\\tat org.jolokia.handler.ReadHandler.fetchAttributesForMBeanPattern(ReadHandler.java:127)\\\\n\\\\tat org.jolokia.handler.ReadHandler.doHandleRequest(ReadHandler.java:117)\\\\n\\\\tat org.jolokia.handler.ReadHandler.doHandleRequest(ReadHandler.java:37)\\\\n\\\\tat org.jolokia.handler.JsonRequestHandler.handleRequest(JsonRequestHandler.java:160)\\\\n\\\\tat org.jolokia.backend.MBeanServerHandler.dispatchRequest(MBeanServerHandler.java:97)\\\\n\\\\tat org.jolokia.backend.LocalRequestDispatcher.dispatchRequest(LocalRequestDispatcher.java:91)\\\\n\\\\tat org.jolokia.backend.BackendManager.callRequestDispatcher(BackendManager.java:388)\\\\n\\\\tat org.jolokia.backend.BackendManager.handleRequest(BackendManager.java:150)\\\\n\\\\tat org.jolokia.http.HttpRequestHandler.executeRequest(HttpRequestHandler.java:197)\\\\n\\\\tat org.jolokia.http.HttpRequestHandler.handleGetRequest(HttpRequestHandler.java:86)\\\\n\\\\tat org.jolokia.http.AgentServlet$3.handleRequest(AgentServlet.java:294)\\\\n\\\\tat org.jolokia.http.AgentServlet.handle(AgentServlet.java:225)\\\\n\\\\tat org.jolokia.http.AgentServlet.doGet(AgentServlet.java:190)\\\\n\\\\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:734)\\\\n\\\\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:847)\\\\n\\\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:295)\\\\n\\\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:214)\\\\n\\\\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:230)\\\\n\\\\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:149)\\\\n\\\\tat org.jboss.modcluster.container.jbossweb.JBossWebContext$RequestListenerValve.event(JBossWebContext.java:91)\\\\n\\\\tat org.jboss.modcluster.container.jbossweb.JBossWebContext$RequestListenerValve.invoke(JBossWebContext.java:72)\\\\n\\\\tat org.jboss.as.web.security.SecurityContextAssociationValve.invoke(SecurityContextAssociationValve.java:169)\\\\n\\\\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:145)\\\\n\\\\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:97)\\\\n\\\\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:102)\\\\n\\\\tat com.ericsson.container.clb.proxy.http.util.ClbHttpValve.invoke(ClbHttpValve.java:51)\\\\n\\\\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:336)\\\\n\\\\tat org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:856)\\\\n\\\\tat org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:653)\\\\n\\\\tat org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:920)\\\\n\\\\tat java.lang.Thread.run(Thread.java:744)\\\\n\\\"}\" }} id 2" }
Structured  DataFrame { time: "2014/Oct/24 18:34:38.827142", component: "858", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port clientPort succeeded, message from system(): @HTTPmsg_Types.HTTPMessage : { response := { client_id := 9, version_major := 1, version_minor := 1, statuscode := 200, statustext := \"OK\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache\" }, { header_name := \"Pragma\", header_value := \"no-cache\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:37 GMT\" }, { header_name := \"Expires\", header_value := \"Fri, 24 Oct 2014 21:34:38 GMT\" }, { header_name := \"Content-Type\", header_value := \"text/plain;charset=utf-8\" }, { header_name := \"Content-Length\", header_value := \"3187\" } }, body := \"{\\\"error_type\\\":\\\"javax.management.InstanceNotFoundException\\\",\\\"error\\\":\\\"javax.management.InstanceNotFoundException : No MBean with pattern com.ericsson.kalki:Type=ClientSession,Name=* found for reading attributes\\\",\\\"status\\\":404,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.kalki:Name=*,Type=ClientSession\\\",\\\"type\\\":\\\"read\\\"},\\\"stacktrace\\\":\\\"javax.management.InstanceNotFoundException: No MBean with pattern com.ericsson.kalki:Type=ClientSession,Name=* found for reading attributes\\\\n\\\\tat org.jolokia.handler.ReadHandler.searchMBeans(ReadHandler.java:155)\\\\n\\\\tat org.jolokia.handler.ReadHandler.fetchAttributesForMBeanPattern(ReadHandler.java:127)\\\\n\\\\tat org.jolokia.handler.ReadHandler.doHandleRequest(ReadHandler.java:117)\\\\n\\\\tat org.jolokia.handler.ReadHandler.doHandleRequest(ReadHandler.java:37)\\\\n\\\\tat org.jolokia.handler.JsonRequestHandler.handleRequest(JsonRequestHandler.java:160)\\\\n\\\\tat org.jolokia.backend.MBeanServerHandler.dispatchRequest(MBeanServerHandler.java:97)\\\\n\\\\tat org.jolokia.backend.LocalRequestDispatcher.dispatchRequest(LocalRequestDispatcher.java:91)\\\\n\\\\tat org.jolokia.backend.BackendManager.callRequestDispatcher(BackendManager.java:388)\\\\n\\\\tat org.jolokia.backend.BackendManager.handleRequest(BackendManager.java:150)\\\\n\\\\tat org.jolokia.http.HttpRequestHandler.executeRequest(HttpRequestHandler.java:197)\\\\n\\\\tat org.jolokia.http.HttpRequestHandler.handleGetRequest(HttpRequestHandler.java:86)\\\\n\\\\tat org.jolokia.http.AgentServlet$3.handleRequest(AgentServlet.java:294)\\\\n\\\\tat org.jolokia.http.AgentServlet.handle(AgentServlet.java:225)\\\\n\\\\tat org.jolokia.http.AgentServlet.doGet(AgentServlet.java:190)\\\\n\\\\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:734)\\\\n\\\\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:847)\\\\n\\\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:295)\\\\n\\\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:214)\\\\n\\\\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:230)\\\\n\\\\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:149)\\\\n\\\\tat org.jboss.modcluster.container.jbossweb.JBossWebContext$RequestListenerValve.event(JBossWebContext.java:91)\\\\n\\\\tat org.jboss.modcluster.container.jbossweb.JBossWebContext$RequestListenerValve.invoke(JBossWebContext.java:72)\\\\n\\\\tat org.jboss.as.web.security.SecurityContextAssociationValve.invoke(SecurityContextAssociationValve.java:169)\\\\n\\\\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:145)\\\\n\\\\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:97)\\\\n\\\\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:102)\\\\n\\\\tat com.ericsson.container.clb.proxy.http.util.ClbHttpValve.invoke(ClbHttpValve.java:51)\\\\n\\\\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:336)\\\\n\\\\tat org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:856)\\\\n\\\\tat org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:653)\\\\n\\\\tat org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:920)\\\\n\\\\tat java.lang.Thread.run(Thread.java:744)\\\\n\\\"}\" }} id 2" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.827202", component: "858", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "193", function_name: "function:receiveAnyHTTPClientResponse", message: " Message with id 2 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.827230", component: "858", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "194", function_name: "function:receiveAnyHTTPClientResponse", message: " Stop timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:38.827556", component: "858", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort to mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\\"error_type\\\":\\\"javax.management.InstanceNotFoundException\\\",\\\"error\\\":\\\"javax.management.InstanceNotFoundException : No MBean with pattern com.ericsson.kalki:Type=ClientSession,Name=* found for reading attributes\\\",\\\"status\\\":404,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.kalki:Name=*,Type=ClientSession\\\",\\\"type\\\":\\\"read\\\"},\\\"stacktrace\\\":\\\"javax.management.InstanceNotFoundException: No MBean with pattern com.ericsson.kalki:Type=ClientSession,Name=* found for reading attributes\\\\n\\\\tat org.jolokia.handler.ReadHandler.searchMBeans(ReadHandler.java:155)\\\\n\\\\tat org.jolokia.handler.ReadHandler.fetchAttributesForMBeanPattern(ReadHandler.java:127)\\\\n\\\\tat org.jolokia.handler.ReadHandler.doHandleRequest(ReadHandler.java:117)\\\\n\\\\tat org.jolokia.handler.ReadHandler.doHandleRequest(ReadHandler.java:37)\\\\n\\\\tat org.jolokia.handler.JsonRequestHandler.handleRequest(JsonRequestHandler.java:160)\\\\n\\\\tat org.jolokia.backend.MBeanServerHandler.dispatchRequest(MBeanServerHandler.java:97)\\\\n\\\\tat org.jolokia.backend.LocalRequestDispatcher.dispatchRequest(LocalRequestDispatcher.java:91)\\\\n\\\\tat org.jolokia.backend.BackendManager.callRequestDispatcher(BackendManager.java:388)\\\\n\\\\tat org.jolokia.backend.BackendManager.handleRequest(BackendManager.java:150)\\\\n\\\\tat org.jolokia.http.HttpRequestHandler.executeRequest(HttpRequestHandler.java:197)\\\\n\\\\tat org.jolokia.http.HttpRequestHandler.handleGetRequest(HttpRequestHandler.java:86)\\\\n\\\\tat org.jolokia.http.AgentServlet$3.handleRequest(AgentServlet.java:294)\\\\n\\\\tat org.jolokia.http.AgentServlet.handle(AgentServlet.java:225)\\\\n\\\\tat org.jolokia.http.AgentServlet.doGet(AgentServlet.java:190)\\\\n\\\\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:734)\\\\n\\\\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:847)\\\\n\\\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:295)\\\\n\\\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:214)\\\\n\\\\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:230)\\\\n\\\\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:149)\\\\n\\\\tat org.jboss.modcluster.container.jbossweb.JBossWebContext$RequestListenerValve.event(JBossWebContext.java:91)\\\\n\\\\tat org.jboss.modcluster.container.jbossweb.JBossWebContext$RequestListenerValve.invoke(JBossWebContext.java:72)\\\\n\\\\tat org.jboss.as.web.security.SecurityContextAssociationValve.invoke(SecurityContextAssociationValve.java:169)\\\\n\\\\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:145)\\\\n\\\\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:97)\\\\n\\\\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:102)\\\\n\\\\tat com.ericsson.container.clb.proxy.http.util.ClbHttpValve.invoke(ClbHttpValve.java:51)\\\\n\\\\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:336)\\\\n\\\\tat org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:856)\\\\n\\\\tat org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:653)\\\\n\\\\tat org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:920)\\\\n\\\\tat java.lang.Thread.run(Thread.java:744)\\\\n\\\"}\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache\" }, { header_name := \"Pragma\", header_value := \"no-cache\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:37 GMT\" }, { header_name := \"Expires\", header_value := \"Fri, 24 Oct 2014 21:34:38 GMT\" }, { header_name := \"Content-Type\", header_value := \"text/plain;charset=utf-8\" }, { header_name := \"Content-Length\", header_value := \"3187\" } } } } }}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:38.827965", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort[6] from 858 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\\"error_type\\\":\\\"javax.management.InstanceNotFoundException\\\",\\\"error\\\":\\\"javax.management.InstanceNotFoundException : No MBean with pattern com.ericsson.kalki:Type=ClientSession,Name=* found for reading attributes\\\",\\\"status\\\":404,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.kalki:Name=*,Type=ClientSession\\\",\\\"type\\\":\\\"read\\\"},\\\"stacktrace\\\":\\\"javax.management.InstanceNotFoundException: No MBean with pattern com.ericsson.kalki:Type=ClientSession,Name=* found for reading attributes\\\\n\\\\tat org.jolokia.handler.ReadHandler.searchMBeans(ReadHandler.java:155)\\\\n\\\\tat org.jolokia.handler.ReadHandler.fetchAttributesForMBeanPattern(ReadHandler.java:127)\\\\n\\\\tat org.jolokia.handler.ReadHandler.doHandleRequest(ReadHandler.java:117)\\\\n\\\\tat org.jolokia.handler.ReadHandler.doHandleRequest(ReadHandler.java:37)\\\\n\\\\tat org.jolokia.handler.JsonRequestHandler.handleRequest(JsonRequestHandler.java:160)\\\\n\\\\tat org.jolokia.backend.MBeanServerHandler.dispatchRequest(MBeanServerHandler.java:97)\\\\n\\\\tat org.jolokia.backend.LocalRequestDispatcher.dispatchRequest(LocalRequestDispatcher.java:91)\\\\n\\\\tat org.jolokia.backend.BackendManager.callRequestDispatcher(BackendManager.java:388)\\\\n\\\\tat org.jolokia.backend.BackendManager.handleRequest(BackendManager.java:150)\\\\n\\\\tat org.jolokia.http.HttpRequestHandler.executeRequest(HttpRequestHandler.java:197)\\\\n\\\\tat org.jolokia.http.HttpRequestHandler.handleGetRequest(HttpRequestHandler.java:86)\\\\n\\\\tat org.jolokia.http.AgentServlet$3.handleRequest(AgentServlet.java:294)\\\\n\\\\tat org.jolokia.http.AgentServlet.handle(AgentServlet.java:225)\\\\n\\\\tat org.jolokia.http.AgentServlet.doGet(AgentServlet.java:190)\\\\n\\\\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:734)\\\\n\\\\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:847)\\\\n\\\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:295)\\\\n\\\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:214)\\\\n\\\\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:230)\\\\n\\\\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:149)\\\\n\\\\tat org.jboss.modcluster.container.jbossweb.JBossWebContext$RequestListenerValve.event(JBossWebContext.java:91)\\\\n\\\\tat org.jboss.modcluster.container.jbossweb.JBossWebContext$RequestListenerValve.invoke(JBossWebContext.java:72)\\\\n\\\\tat org.jboss.as.web.security.SecurityContextAssociationValve.invoke(SecurityContextAssociationValve.java:169)\\\\n\\\\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:145)\\\\n\\\\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:97)\\\\n\\\\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:102)\\\\n\\\\tat com.ericsson.container.clb.proxy.http.util.ClbHttpValve.invoke(ClbHttpValve.java:51)\\\\n\\\\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:336)\\\\n\\\\tat org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:856)\\\\n\\\\tat org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:653)\\\\n\\\\tat org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:920)\\\\n\\\\tat java.lang.Thread.run(Thread.java:744)\\\\n\\\"}\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache\" }, { header_name := \"Pragma\", header_value := \"no-cache\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:37 GMT\" }, { header_name := \"Expires\", header_value := \"Fri, 24 Oct 2014 21:34:38 GMT\" }, { header_name := \"Content-Type\", header_value := \"text/plain;charset=utf-8\" }, { header_name := \"Content-Length\", header_value := \"3187\" } } } } }} id 2" }
Structured  DataFrame { time: "2014/Oct/24 18:34:38.828290", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort[6] succeeded, message from 858: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\\"error_type\\\":\\\"javax.management.InstanceNotFoundException\\\",\\\"error\\\":\\\"javax.management.InstanceNotFoundException : No MBean with pattern com.ericsson.kalki:Type=ClientSession,Name=* found for reading attributes\\\",\\\"status\\\":404,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.kalki:Name=*,Type=ClientSession\\\",\\\"type\\\":\\\"read\\\"},\\\"stacktrace\\\":\\\"javax.management.InstanceNotFoundException: No MBean with pattern com.ericsson.kalki:Type=ClientSession,Name=* found for reading attributes\\\\n\\\\tat org.jolokia.handler.ReadHandler.searchMBeans(ReadHandler.java:155)\\\\n\\\\tat org.jolokia.handler.ReadHandler.fetchAttributesForMBeanPattern(ReadHandler.java:127)\\\\n\\\\tat org.jolokia.handler.ReadHandler.doHandleRequest(ReadHandler.java:117)\\\\n\\\\tat org.jolokia.handler.ReadHandler.doHandleRequest(ReadHandler.java:37)\\\\n\\\\tat org.jolokia.handler.JsonRequestHandler.handleRequest(JsonRequestHandler.java:160)\\\\n\\\\tat org.jolokia.backend.MBeanServerHandler.dispatchRequest(MBeanServerHandler.java:97)\\\\n\\\\tat org.jolokia.backend.LocalRequestDispatcher.dispatchRequest(LocalRequestDispatcher.java:91)\\\\n\\\\tat org.jolokia.backend.BackendManager.callRequestDispatcher(BackendManager.java:388)\\\\n\\\\tat org.jolokia.backend.BackendManager.handleRequest(BackendManager.java:150)\\\\n\\\\tat org.jolokia.http.HttpRequestHandler.executeRequest(HttpRequestHandler.java:197)\\\\n\\\\tat org.jolokia.http.HttpRequestHandler.handleGetRequest(HttpRequestHandler.java:86)\\\\n\\\\tat org.jolokia.http.AgentServlet$3.handleRequest(AgentServlet.java:294)\\\\n\\\\tat org.jolokia.http.AgentServlet.handle(AgentServlet.java:225)\\\\n\\\\tat org.jolokia.http.AgentServlet.doGet(AgentServlet.java:190)\\\\n\\\\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:734)\\\\n\\\\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:847)\\\\n\\\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:295)\\\\n\\\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:214)\\\\n\\\\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:230)\\\\n\\\\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:149)\\\\n\\\\tat org.jboss.modcluster.container.jbossweb.JBossWebContext$RequestListenerValve.event(JBossWebContext.java:91)\\\\n\\\\tat org.jboss.modcluster.container.jbossweb.JBossWebContext$RequestListenerValve.invoke(JBossWebContext.java:72)\\\\n\\\\tat org.jboss.as.web.security.SecurityContextAssociationValve.invoke(SecurityContextAssociationValve.java:169)\\\\n\\\\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:145)\\\\n\\\\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:97)\\\\n\\\\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:102)\\\\n\\\\tat com.ericsson.container.clb.proxy.http.util.ClbHttpValve.invoke(ClbHttpValve.java:51)\\\\n\\\\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:336)\\\\n\\\\tat org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:856)\\\\n\\\\tat org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:653)\\\\n\\\\tat org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:920)\\\\n\\\\tat java.lang.Thread.run(Thread.java:744)\\\\n\\\"}\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache\" }, { header_name := \"Pragma\", header_value := \"no-cache\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:37 GMT\" }, { header_name := \"Expires\", header_value := \"Fri, 24 Oct 2014 21:34:38 GMT\" }, { header_name := \"Content-Type\", header_value := \"text/plain;charset=utf-8\" }, { header_name := \"Content-Length\", header_value := \"3187\" } } } } }} id 2" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.828382", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Message with id 2 was extracted from the queue of httpNodeInternalPort[6]" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.828418", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "241", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.830529", component: "858", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "62", function_name: "function:httpNodeRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.836143", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.846493", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "267", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.846624", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "191", function_name: "function:sendInternalMessage", message: " Sent on httpNodeInternalPort[0] to 851 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.846779", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.846784", component: "851", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "66", function_name: "function:httpNodeRun", message: " Message enqueued on httpNodeInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.846859", component: "851", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "67", function_name: "function:httpNodeRun", message: " Receive operation on port httpNodeInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.846885", component: "851", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "67", function_name: "function:httpNodeRun", message: " Message with id 1 was extracted from the queue of httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.846902", component: "851", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "68", function_name: "function:httpNodeRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.847170", component: "851", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "173", function_name: "function:httpNodeFinalize", message: " Port clientPort was unmapped from system:clientPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.847408", component: "851", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "176", function_name: "function:httpNodeFinalize", message: " Port serverPort was unmapped from system:serverPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.847570", component: "851", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "182", function_name: "function:httpNodeFinalize", message: " Sent on httpNodeInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.847657", component: "851", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port clientPort was stopped." }
Simple DataFrame { time: "2014/Oct/24 18:34:38.847684", component: "851", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port serverPort was stopped." }
Simple DataFrame { time: "2014/Oct/24 18:34:38.847685", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "239", function_name: "function:receiveInternalMessage", message: " Message enqueued on httpNodeInternalPort[0] from 851 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.847702", component: "851", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Removing unterminated connection between port httpNodeInternalPort and mtc:httpNodeInternalPort[0]." }
Simple DataFrame { time: "2014/Oct/24 18:34:38.847740", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Receive operation on port httpNodeInternalPort[0] succeeded, message from 851: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.847741", component: "851", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port httpNodeInternalPort was stopped." }
Simple DataFrame { time: "2014/Oct/24 18:34:38.847764", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Message with id 2 was extracted from the queue of httpNodeInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.847783", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "241", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.847957", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.848011", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "239", function_name: "function:receiveInternalMessage", message: " Connection of port httpNodeInternalPort[0] to 851:httpNodeInternalPort was closed unexpectedly by the peer" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.848038", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "239", function_name: "function:receiveInternalMessage", message: " Port httpNodeInternalPort[0] was disconnected from 851:httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.858537", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "267", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.858658", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "191", function_name: "function:sendInternalMessage", message: " Sent on httpNodeInternalPort[1] to 852 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.858818", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.858833", component: "852", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "66", function_name: "function:httpNodeRun", message: " Message enqueued on httpNodeInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.858931", component: "852", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "67", function_name: "function:httpNodeRun", message: " Receive operation on port httpNodeInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.858955", component: "852", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "67", function_name: "function:httpNodeRun", message: " Message with id 7 was extracted from the queue of httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.858971", component: "852", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "68", function_name: "function:httpNodeRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.859541", component: "852", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "173", function_name: "function:httpNodeFinalize", message: " Port clientPort was unmapped from system:clientPort[1]" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.860048", component: "852", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "176", function_name: "function:httpNodeFinalize", message: " Port serverPort was unmapped from system:serverPort[1]" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.860253", component: "852", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "182", function_name: "function:httpNodeFinalize", message: " Sent on httpNodeInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.860323", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "239", function_name: "function:receiveInternalMessage", message: " Message enqueued on httpNodeInternalPort[1] from 852 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.860346", component: "852", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port clientPort was stopped." }
Simple DataFrame { time: "2014/Oct/24 18:34:38.860361", component: "852", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port serverPort was stopped." }
Simple DataFrame { time: "2014/Oct/24 18:34:38.860372", component: "852", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Removing unterminated connection between port httpNodeInternalPort and mtc:httpNodeInternalPort[1]." }
Simple DataFrame { time: "2014/Oct/24 18:34:38.860373", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Receive operation on port httpNodeInternalPort[1] succeeded, message from 852: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.860397", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Message with id 8 was extracted from the queue of httpNodeInternalPort[1]" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.860428", component: "852", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port httpNodeInternalPort was stopped." }
Simple DataFrame { time: "2014/Oct/24 18:34:38.860429", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "241", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.860576", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.860610", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "239", function_name: "function:receiveInternalMessage", message: " Connection of port httpNodeInternalPort[1] to 852:httpNodeInternalPort was closed unexpectedly by the peer" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.860634", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "239", function_name: "function:receiveInternalMessage", message: " Port httpNodeInternalPort[1] was disconnected from 852:httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.873033", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "267", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.873212", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "191", function_name: "function:sendInternalMessage", message: " Sent on httpNodeInternalPort[2] to 853 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.873379", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.873390", component: "853", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "66", function_name: "function:httpNodeRun", message: " Message enqueued on httpNodeInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.873495", component: "853", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "67", function_name: "function:httpNodeRun", message: " Receive operation on port httpNodeInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.873540", component: "853", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "67", function_name: "function:httpNodeRun", message: " Message with id 5 was extracted from the queue of httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.873575", component: "853", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "68", function_name: "function:httpNodeRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.874077", component: "853", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "173", function_name: "function:httpNodeFinalize", message: " Port clientPort was unmapped from system:clientPort[2]" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.874475", component: "853", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "176", function_name: "function:httpNodeFinalize", message: " Port serverPort was unmapped from system:serverPort[2]" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.874817", component: "853", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "182", function_name: "function:httpNodeFinalize", message: " Sent on httpNodeInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.875028", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "239", function_name: "function:receiveInternalMessage", message: " Message enqueued on httpNodeInternalPort[2] from 853 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.875077", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Receive operation on port httpNodeInternalPort[2] succeeded, message from 853: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.875100", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Message with id 6 was extracted from the queue of httpNodeInternalPort[2]" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.875119", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "241", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.875125", component: "853", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port clientPort was stopped." }
Simple DataFrame { time: "2014/Oct/24 18:34:38.875156", component: "853", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port serverPort was stopped." }
Simple DataFrame { time: "2014/Oct/24 18:34:38.875185", component: "853", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Removing unterminated connection between port httpNodeInternalPort and mtc:httpNodeInternalPort[2]." }
Simple DataFrame { time: "2014/Oct/24 18:34:38.875253", component: "853", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port httpNodeInternalPort was stopped." }
Simple DataFrame { time: "2014/Oct/24 18:34:38.875317", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.875354", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "239", function_name: "function:receiveInternalMessage", message: " Connection of port httpNodeInternalPort[2] to 853:httpNodeInternalPort was closed unexpectedly by the peer" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.875380", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "239", function_name: "function:receiveInternalMessage", message: " Port httpNodeInternalPort[2] was disconnected from 853:httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.886477", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "267", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.886567", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "191", function_name: "function:sendInternalMessage", message: " Sent on httpNodeInternalPort[3] to 854 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.886706", component: "854", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "66", function_name: "function:httpNodeRun", message: " Message enqueued on httpNodeInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.886718", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.886803", component: "854", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "67", function_name: "function:httpNodeRun", message: " Receive operation on port httpNodeInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.886827", component: "854", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "67", function_name: "function:httpNodeRun", message: " Message with id 5 was extracted from the queue of httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.886843", component: "854", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "68", function_name: "function:httpNodeRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.887209", component: "854", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "173", function_name: "function:httpNodeFinalize", message: " Port clientPort was unmapped from system:clientPort[3]" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.887607", component: "854", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "176", function_name: "function:httpNodeFinalize", message: " Port serverPort was unmapped from system:serverPort[3]" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.887871", component: "854", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "182", function_name: "function:httpNodeFinalize", message: " Sent on httpNodeInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.887943", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "239", function_name: "function:receiveInternalMessage", message: " Message enqueued on httpNodeInternalPort[3] from 854 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.887968", component: "854", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port clientPort was stopped." }
Simple DataFrame { time: "2014/Oct/24 18:34:38.887982", component: "854", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port serverPort was stopped." }
Simple DataFrame { time: "2014/Oct/24 18:34:38.887989", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Receive operation on port httpNodeInternalPort[3] succeeded, message from 854: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.887994", component: "854", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Removing unterminated connection between port httpNodeInternalPort and mtc:httpNodeInternalPort[3]." }
Simple DataFrame { time: "2014/Oct/24 18:34:38.888013", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Message with id 6 was extracted from the queue of httpNodeInternalPort[3]" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.888031", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "241", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.888034", component: "854", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port httpNodeInternalPort was stopped." }
Simple DataFrame { time: "2014/Oct/24 18:34:38.888178", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.888210", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "239", function_name: "function:receiveInternalMessage", message: " Connection of port httpNodeInternalPort[3] to 854:httpNodeInternalPort was closed unexpectedly by the peer" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.888233", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "239", function_name: "function:receiveInternalMessage", message: " Port httpNodeInternalPort[3] was disconnected from 854:httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.900469", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "267", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.900639", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "191", function_name: "function:sendInternalMessage", message: " Sent on httpNodeInternalPort[4] to 855 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.900793", component: "855", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "66", function_name: "function:httpNodeRun", message: " Message enqueued on httpNodeInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.900811", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.900878", component: "855", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "67", function_name: "function:httpNodeRun", message: " Receive operation on port httpNodeInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.900903", component: "855", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "67", function_name: "function:httpNodeRun", message: " Message with id 6 was extracted from the queue of httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.900918", component: "855", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "68", function_name: "function:httpNodeRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.901265", component: "855", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "173", function_name: "function:httpNodeFinalize", message: " Port clientPort was unmapped from system:clientPort[4]" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.901708", component: "855", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "176", function_name: "function:httpNodeFinalize", message: " Port serverPort was unmapped from system:serverPort[4]" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.901942", component: "855", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "182", function_name: "function:httpNodeFinalize", message: " Sent on httpNodeInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.902030", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "239", function_name: "function:receiveInternalMessage", message: " Message enqueued on httpNodeInternalPort[4] from 855 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.902077", component: "855", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port clientPort was stopped." }
Simple DataFrame { time: "2014/Oct/24 18:34:38.902078", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Receive operation on port httpNodeInternalPort[4] succeeded, message from 855: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.902099", component: "855", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port serverPort was stopped." }
Simple DataFrame { time: "2014/Oct/24 18:34:38.902102", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Message with id 7 was extracted from the queue of httpNodeInternalPort[4]" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.902120", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "241", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.902179", component: "855", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Removing unterminated connection between port httpNodeInternalPort and mtc:httpNodeInternalPort[4]." }
Simple DataFrame { time: "2014/Oct/24 18:34:38.902263", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.902268", component: "855", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port httpNodeInternalPort was stopped." }
Simple DataFrame { time: "2014/Oct/24 18:34:38.902298", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "239", function_name: "function:receiveInternalMessage", message: " Connection of port httpNodeInternalPort[4] to 855:httpNodeInternalPort was closed unexpectedly by the peer" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.902323", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "239", function_name: "function:receiveInternalMessage", message: " Port httpNodeInternalPort[4] was disconnected from 855:httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.914473", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "267", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.914577", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "191", function_name: "function:sendInternalMessage", message: " Sent on httpNodeInternalPort[5] to 856 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.914710", component: "856", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "66", function_name: "function:httpNodeRun", message: " Message enqueued on httpNodeInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.914710", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.914849", component: "856", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "67", function_name: "function:httpNodeRun", message: " Receive operation on port httpNodeInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.914886", component: "856", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "67", function_name: "function:httpNodeRun", message: " Message with id 6 was extracted from the queue of httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.914910", component: "856", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "68", function_name: "function:httpNodeRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.915356", component: "856", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "173", function_name: "function:httpNodeFinalize", message: " Port clientPort was unmapped from system:clientPort[5]" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.915679", component: "856", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "176", function_name: "function:httpNodeFinalize", message: " Port serverPort was unmapped from system:serverPort[5]" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.915887", component: "856", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "182", function_name: "function:httpNodeFinalize", message: " Sent on httpNodeInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.915992", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "239", function_name: "function:receiveInternalMessage", message: " Message enqueued on httpNodeInternalPort[5] from 856 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.916037", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Receive operation on port httpNodeInternalPort[5] succeeded, message from 856: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.916053", component: "856", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port clientPort was stopped." }
Simple DataFrame { time: "2014/Oct/24 18:34:38.916060", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Message with id 7 was extracted from the queue of httpNodeInternalPort[5]" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.916078", component: "856", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port serverPort was stopped." }
Simple DataFrame { time: "2014/Oct/24 18:34:38.916079", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "241", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.916158", component: "856", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Removing unterminated connection between port httpNodeInternalPort and mtc:httpNodeInternalPort[5]." }
Simple DataFrame { time: "2014/Oct/24 18:34:38.916222", component: "856", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port httpNodeInternalPort was stopped." }
Simple DataFrame { time: "2014/Oct/24 18:34:38.916222", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.916256", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "239", function_name: "function:receiveInternalMessage", message: " Connection of port httpNodeInternalPort[5] to 856:httpNodeInternalPort was closed unexpectedly by the peer" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.916280", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "239", function_name: "function:receiveInternalMessage", message: " Port httpNodeInternalPort[5] was disconnected from 856:httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.926479", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "267", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.926570", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "191", function_name: "function:sendInternalMessage", message: " Sent on httpNodeInternalPort[6] to 858 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.926682", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.926767", component: "858", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "66", function_name: "function:httpNodeRun", message: " Message enqueued on httpNodeInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.926827", component: "858", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "67", function_name: "function:httpNodeRun", message: " Receive operation on port httpNodeInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.926847", component: "858", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "67", function_name: "function:httpNodeRun", message: " Message with id 2 was extracted from the queue of httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.926861", component: "858", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "68", function_name: "function:httpNodeRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.927045", component: "858", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "173", function_name: "function:httpNodeFinalize", message: " Port clientPort was unmapped from system:clientPort[6]" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.927200", component: "858", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "176", function_name: "function:httpNodeFinalize", message: " Port serverPort was unmapped from system:serverPort[6]" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.927310", component: "858", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "182", function_name: "function:httpNodeFinalize", message: " Sent on httpNodeInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.927350", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "239", function_name: "function:receiveInternalMessage", message: " Message enqueued on httpNodeInternalPort[6] from 858 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.927396", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Receive operation on port httpNodeInternalPort[6] succeeded, message from 858: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.927428", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Message with id 3 was extracted from the queue of httpNodeInternalPort[6]" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.927445", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "241", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.927551", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.927632", component: "858", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port clientPort was stopped." }
Simple DataFrame { time: "2014/Oct/24 18:34:38.927645", component: "858", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port serverPort was stopped." }
Simple DataFrame { time: "2014/Oct/24 18:34:38.927655", component: "858", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Removing unterminated connection between port httpNodeInternalPort and mtc:httpNodeInternalPort[6]." }
Simple DataFrame { time: "2014/Oct/24 18:34:38.927723", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "253", function_name: "function:receiveInternalMessage", message: " Connection of port httpNodeInternalPort[6] to 858:httpNodeInternalPort was closed unexpectedly by the peer" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.927759", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "253", function_name: "function:receiveInternalMessage", message: " Port httpNodeInternalPort[6] was disconnected from 858:httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.927824", component: "858", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port httpNodeInternalPort was stopped." }
Simple DataFrame { time: "2014/Oct/24 18:34:38.938506", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "286", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.938655", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "202", function_name: "function:sendInternalMessage", message: " Sent on sipInternalPort[0] to 849 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.938776", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.938795", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "78", function_name: "function:sipRun", message: " Message enqueued on sipInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.938888", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Receive operation on port sipInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.938913", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Message with id 32 was extracted from the queue of sipInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.938929", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "80", function_name: "function:sipRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.939254", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "181", function_name: "function:sipFinalize", message: " Port sipClientPort was unmapped from system:sipClientPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.939542", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "187", function_name: "function:sipFinalize", message: " Sent on sipInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.939620", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "253", function_name: "function:receiveInternalMessage", message: " Message enqueued on sipInternalPort[0] from 849 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.939647", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port sipClientPort was stopped." }
Simple DataFrame { time: "2014/Oct/24 18:34:38.939661", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Removing unterminated connection between port sipInternalPort and mtc:sipInternalPort[0]." }
Simple DataFrame { time: "2014/Oct/24 18:34:38.939680", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Receive operation on port sipInternalPort[0] succeeded, message from 849: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.939699", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port sipInternalPort was stopped." }
Simple DataFrame { time: "2014/Oct/24 18:34:38.939730", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Message with id 33 was extracted from the queue of sipInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.939751", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "255", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.939927", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.939969", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "216", function_name: "function:receiveInternalMessage", message: " Connection of port sipInternalPort[0] to 849:sipInternalPort was closed unexpectedly by the peer" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.939993", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "216", function_name: "function:receiveInternalMessage", message: " Port sipInternalPort[0] was disconnected from 849:sipInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.950492", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.950563", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "168", function_name: "function:sendInternalMessage", message: " Sent on msrpInternalPort[0] to 850 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.950664", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.951584", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "83", function_name: "function:msrpRun", message: " Message enqueued on msrpInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.951702", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Receive operation on port msrpInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.951740", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Message with id 16 was extracted from the queue of msrpInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.951758", component: "850", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "85", function_name: "function:msrpRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.952026", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "188", function_name: "function:msrpFinalize", message: " Port msrpPort was unmapped from system:msrpPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.952294", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "194", function_name: "function:msrpFinalize", message: " Sent on msrpInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.952379", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "216", function_name: "function:receiveInternalMessage", message: " Message enqueued on msrpInternalPort[0] from 850 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.952425", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Receive operation on port msrpInternalPort[0] succeeded, message from 850: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.952431", component: "850", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message with id 9 was extracted from the queue of msrpPort." }
Simple DataFrame { time: "2014/Oct/24 18:34:38.952448", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Message with id 17 was extracted from the queue of msrpInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.952455", component: "850", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port msrpPort was stopped." }
Simple DataFrame { time: "2014/Oct/24 18:34:38.952465", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "218", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.952477", component: "850", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Removing unterminated connection between port msrpInternalPort and mtc:msrpInternalPort[0]." }
Simple DataFrame { time: "2014/Oct/24 18:34:38.952530", component: "850", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port msrpInternalPort was stopped." }
Simple DataFrame { time: "2014/Oct/24 18:34:38.952620", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.952656", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "216", function_name: "function:receiveInternalMessage", message: " Connection of port msrpInternalPort[0] to 850:msrpInternalPort was closed unexpectedly by the peer" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.952680", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "216", function_name: "function:receiveInternalMessage", message: " Port msrpInternalPort[0] was disconnected from 850:msrpInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.963863", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.963995", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "168", function_name: "function:sendInternalMessage", message: " Sent on msrpInternalPort[1] to 857 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.964166", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.964170", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "83", function_name: "function:msrpRun", message: " Message enqueued on msrpInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.964263", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Receive operation on port msrpInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.964340", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Message with id 15 was extracted from the queue of msrpInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.964375", component: "857", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "85", function_name: "function:msrpRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.964741", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "188", function_name: "function:msrpFinalize", message: " Port msrpPort was unmapped from system:msrpPort[1]" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.965055", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "194", function_name: "function:msrpFinalize", message: " Sent on msrpInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.965158", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "216", function_name: "function:receiveInternalMessage", message: " Message enqueued on msrpInternalPort[1] from 857 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.965212", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Receive operation on port msrpInternalPort[1] succeeded, message from 857: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.965226", component: "857", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message with id 8 was extracted from the queue of msrpPort." }
Simple DataFrame { time: "2014/Oct/24 18:34:38.965241", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Message with id 16 was extracted from the queue of msrpInternalPort[1]" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.965259", component: "857", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port msrpPort was stopped." }
Simple DataFrame { time: "2014/Oct/24 18:34:38.965263", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "218", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.965290", component: "857", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Removing unterminated connection between port msrpInternalPort and mtc:msrpInternalPort[1]." }
Simple DataFrame { time: "2014/Oct/24 18:34:38.965356", component: "857", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port msrpInternalPort was stopped." }
Simple DataFrame { time: "2014/Oct/24 18:34:38.965408", component: "mtc", peer_component: "SshClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "38", function_name: "function:sshClientFinalize", message: " Connection of port msrpInternalPort[1] to 857:msrpInternalPort was closed unexpectedly by the peer" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.965455", component: "mtc", peer_component: "SshClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "38", function_name: "function:sshClientFinalize", message: " Port msrpInternalPort[1] was disconnected from 857:msrpInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.965756", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "129", function_name: "testcase:WCG100140020", message: " Port dnsInternalPort[0] was stopped" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.965773", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "129", function_name: "testcase:WCG100140020", message: " Port dnsInternalPort[1] was stopped" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.965788", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "129", function_name: "testcase:WCG100140020", message: " Port dnsInternalPort[2] was stopped" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.965803", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "129", function_name: "testcase:WCG100140020", message: " Port dnsInternalPort[3] was stopped" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.965817", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "129", function_name: "testcase:WCG100140020", message: " Port httpNodeInternalPort[0] was stopped" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.965832", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "129", function_name: "testcase:WCG100140020", message: " Port httpNodeInternalPort[1] was stopped" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.965847", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "129", function_name: "testcase:WCG100140020", message: " Port httpNodeInternalPort[2] was stopped" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.965861", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "129", function_name: "testcase:WCG100140020", message: " Port httpNodeInternalPort[3] was stopped" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.965876", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "129", function_name: "testcase:WCG100140020", message: " Port httpNodeInternalPort[4] was stopped" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.965890", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "129", function_name: "testcase:WCG100140020", message: " Port httpNodeInternalPort[5] was stopped" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.965905", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "129", function_name: "testcase:WCG100140020", message: " Port httpNodeInternalPort[6] was stopped" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.965919", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "129", function_name: "testcase:WCG100140020", message: " Port httpNodeInternalPort[7] was stopped" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.965934", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "129", function_name: "testcase:WCG100140020", message: " Port httpNodeInternalPort[8] was stopped" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.965948", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "129", function_name: "testcase:WCG100140020", message: " Port httpNodeInternalPort[9] was stopped" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.965963", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "129", function_name: "testcase:WCG100140020", message: " Port httpNodeInternalPort[10] was stopped" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.965977", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "129", function_name: "testcase:WCG100140020", message: " Port httpNodeInternalPort[11] was stopped" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.965992", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "129", function_name: "testcase:WCG100140020", message: " Port httpNodeInternalPort[12] was stopped" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.966007", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "129", function_name: "testcase:WCG100140020", message: " Port httpNodeInternalPort[13] was stopped" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.966022", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "129", function_name: "testcase:WCG100140020", message: " Port httpNodeInternalPort[14] was stopped" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.966036", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "129", function_name: "testcase:WCG100140020", message: " Port httpNodeInternalPort[15] was stopped" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.966059", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "129", function_name: "testcase:WCG100140020", message: " Port msrpInternalPort[0] was stopped" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.966101", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "129", function_name: "testcase:WCG100140020", message: " Port msrpInternalPort[1] was stopped" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.966121", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "129", function_name: "testcase:WCG100140020", message: " Port msrpInternalPort[2] was stopped" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.966137", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "129", function_name: "testcase:WCG100140020", message: " Port msrpInternalPort[3] was stopped" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.966151", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "129", function_name: "testcase:WCG100140020", message: " Port msrpInternalPort[4] was stopped" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.966166", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "129", function_name: "testcase:WCG100140020", message: " Port msrpInternalPort[5] was stopped" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.966181", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "129", function_name: "testcase:WCG100140020", message: " Port msrpInternalPort[6] was stopped" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.966196", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "129", function_name: "testcase:WCG100140020", message: " Port msrpInternalPort[7] was stopped" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.966210", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "129", function_name: "testcase:WCG100140020", message: " Port sipInternalPort[0] was stopped" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.966226", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "129", function_name: "testcase:WCG100140020", message: " Port sipInternalPort[1] was stopped" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.966241", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "129", function_name: "testcase:WCG100140020", message: " Port sipInternalPort[2] was stopped" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.966255", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "129", function_name: "testcase:WCG100140020", message: " Port sipInternalPort[3] was stopped" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.966270", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "129", function_name: "testcase:WCG100140020", message: " Port sipInternalPort[4] was stopped" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.966285", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "129", function_name: "testcase:WCG100140020", message: " Port sipInternalPort[5] was stopped" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.966300", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "129", function_name: "testcase:WCG100140020", message: " Port sipInternalPort[6] was stopped" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.966315", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "129", function_name: "testcase:WCG100140020", message: " Port sipInternalPort[7] was stopped" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.966333", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "129", function_name: "testcase:WCG100140020", message: " Port sshClientPort was stopped" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.966352", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "129", function_name: "testcase:WCG100140020", message: " Port tcpClientPort was stopped" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.666455", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "53", function_name: "testcase:WCG100140020", message: " Port dnsInternalPort[0] was started" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.666490", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "53", function_name: "testcase:WCG100140020", message: " Port dnsInternalPort[1] was started" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.666506", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "53", function_name: "testcase:WCG100140020", message: " Port dnsInternalPort[2] was started" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.666520", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "53", function_name: "testcase:WCG100140020", message: " Port dnsInternalPort[3] was started" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.666534", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "53", function_name: "testcase:WCG100140020", message: " Port httpNodeInternalPort[0] was started" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.666548", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "53", function_name: "testcase:WCG100140020", message: " Port httpNodeInternalPort[1] was started" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.666562", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "53", function_name: "testcase:WCG100140020", message: " Port httpNodeInternalPort[2] was started" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.666588", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "53", function_name: "testcase:WCG100140020", message: " Port httpNodeInternalPort[3] was started" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.666615", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "53", function_name: "testcase:WCG100140020", message: " Port httpNodeInternalPort[4] was started" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.666633", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "53", function_name: "testcase:WCG100140020", message: " Port httpNodeInternalPort[5] was started" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.666647", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "53", function_name: "testcase:WCG100140020", message: " Port httpNodeInternalPort[6] was started" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.666661", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "53", function_name: "testcase:WCG100140020", message: " Port httpNodeInternalPort[7] was started" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.666723", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "53", function_name: "testcase:WCG100140020", message: " Port httpNodeInternalPort[8] was started" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.666742", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "53", function_name: "testcase:WCG100140020", message: " Port httpNodeInternalPort[9] was started" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.666756", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "53", function_name: "testcase:WCG100140020", message: " Port httpNodeInternalPort[10] was started" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.666781", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "53", function_name: "testcase:WCG100140020", message: " Port httpNodeInternalPort[11] was started" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.666806", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "53", function_name: "testcase:WCG100140020", message: " Port httpNodeInternalPort[12] was started" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.666824", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "53", function_name: "testcase:WCG100140020", message: " Port httpNodeInternalPort[13] was started" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.666839", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "53", function_name: "testcase:WCG100140020", message: " Port httpNodeInternalPort[14] was started" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.666852", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "53", function_name: "testcase:WCG100140020", message: " Port httpNodeInternalPort[15] was started" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.666866", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "53", function_name: "testcase:WCG100140020", message: " Port msrpInternalPort[0] was started" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.666880", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "53", function_name: "testcase:WCG100140020", message: " Port msrpInternalPort[1] was started" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.666894", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "53", function_name: "testcase:WCG100140020", message: " Port msrpInternalPort[2] was started" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.666908", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "53", function_name: "testcase:WCG100140020", message: " Port msrpInternalPort[3] was started" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.666922", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "53", function_name: "testcase:WCG100140020", message: " Port msrpInternalPort[4] was started" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.666936", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "53", function_name: "testcase:WCG100140020", message: " Port msrpInternalPort[5] was started" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.666949", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "53", function_name: "testcase:WCG100140020", message: " Port msrpInternalPort[6] was started" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.666963", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "53", function_name: "testcase:WCG100140020", message: " Port msrpInternalPort[7] was started" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.666978", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "53", function_name: "testcase:WCG100140020", message: " Port sipInternalPort[0] was started" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.666992", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "53", function_name: "testcase:WCG100140020", message: " Port sipInternalPort[1] was started" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.667006", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "53", function_name: "testcase:WCG100140020", message: " Port sipInternalPort[2] was started" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.667019", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "53", function_name: "testcase:WCG100140020", message: " Port sipInternalPort[3] was started" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.667033", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "53", function_name: "testcase:WCG100140020", message: " Port sipInternalPort[4] was started" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.667047", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "53", function_name: "testcase:WCG100140020", message: " Port sipInternalPort[5] was started" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.667061", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "53", function_name: "testcase:WCG100140020", message: " Port sipInternalPort[6] was started" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.667075", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "53", function_name: "testcase:WCG100140020", message: " Port sipInternalPort[7] was started" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.667089", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "53", function_name: "testcase:WCG100140020", message: " Port sshClientPort was started" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.667104", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "53", function_name: "testcase:WCG100140020", message: " Port tcpClientPort was started" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.680829", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 10 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.681237", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port sipClientPort was started." }
Simple DataFrame { time: "2014/Oct/24 18:34:28.681304", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port sipInternalPort was started." }
Simple DataFrame { time: "2014/Oct/24 18:34:28.683427", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port sipInternalPort[0] is waiting for connection from 849:sipInternalPort on UNIX pathname /tmp/ttcn3-portconn-2256f413." }
Simple DataFrame { time: "2014/Oct/24 18:34:28.683552", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "146", function_name: "function:sipInitialize", message: " Port sipInternalPort has established the connection with mtc:sipInternalPort[0] using transport type UNIX" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.683618", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "253", function_name: "function:receiveInternalMessage", message: " Port sipInternalPort[0] has accepted the connection from 849:sipInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.683908", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "149", function_name: "function:sipInitialize", message: " Port sipClientPort was mapped to system:sipClientPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.684126", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "152", function_name: "function:sipInitialize", message: " Sent on sipInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.684238", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "74", function_name: "function:sipRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.684245", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "253", function_name: "function:receiveInternalMessage", message: " Message enqueued on sipInternalPort[0] from 849 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.684307", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Receive operation on port sipInternalPort[0] succeeded, message from 849: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.684364", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Message with id 1 was extracted from the queue of sipInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.684390", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "255", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 10 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.684552", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.694982", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "286", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.695096", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "202", function_name: "function:sendInternalMessage", message: " Sent on sipInternalPort[0] to 849 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.695225", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.695242", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "78", function_name: "function:sipRun", message: " Message enqueued on sipInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.695334", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Receive operation on port sipInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.695375", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Message with id 1 was extracted from the queue of sipInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.695402", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "80", function_name: "function:sipRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.696199", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "388", function_name: "function:processCommand", message: " Sent on sipInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.696280", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "74", function_name: "function:sipRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.696328", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "253", function_name: "function:receiveInternalMessage", message: " Message enqueued on sipInternalPort[0] from 849 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.696403", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Receive operation on port sipInternalPort[0] succeeded, message from 849: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.696441", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Message with id 2 was extracted from the queue of sipInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.696471", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "255", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.698309", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 10 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.698461", component: "850", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port msrpPort was started." }
Simple DataFrame { time: "2014/Oct/24 18:34:28.698497", component: "850", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port msrpInternalPort was started." }
Simple DataFrame { time: "2014/Oct/24 18:34:28.699602", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port msrpInternalPort[0] is waiting for connection from 850:msrpInternalPort on UNIX pathname /tmp/ttcn3-portconn-6019304." }
Simple DataFrame { time: "2014/Oct/24 18:34:28.699706", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "155", function_name: "function:msrpInitialize", message: " Port msrpInternalPort has established the connection with mtc:msrpInternalPort[0] using transport type UNIX" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.699788", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "216", function_name: "function:receiveInternalMessage", message: " Port msrpInternalPort[0] has accepted the connection from 850:msrpInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.700083", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "158", function_name: "function:msrpInitialize", message: " Port msrpPort was mapped to system:msrpPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.700272", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "161", function_name: "function:msrpInitialize", message: " Sent on msrpInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.700355", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "216", function_name: "function:receiveInternalMessage", message: " Message enqueued on msrpInternalPort[0] from 850 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.700409", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Receive operation on port msrpInternalPort[0] succeeded, message from 850: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.700437", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Message with id 1 was extracted from the queue of msrpInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.700459", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "218", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 10 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.700633", component: "850", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "79", function_name: "function:msrpRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.700680", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.711068", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.711152", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "168", function_name: "function:sendInternalMessage", message: " Sent on msrpInternalPort[0] to 850 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.711276", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "83", function_name: "function:msrpRun", message: " Message enqueued on msrpInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.711336", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Receive operation on port msrpInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.711368", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Message with id 1 was extracted from the queue of msrpInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.711384", component: "850", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "85", function_name: "function:msrpRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.711886", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "343", function_name: "function:processCommand", message: " Sent on msrpInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.711950", component: "850", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "79", function_name: "function:msrpRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.711989", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "68", function_name: "function:createPtc", message: " Message enqueued on msrpInternalPort[0] from 850 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.722402", component: "851", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port clientPort was started." }
Simple DataFrame { time: "2014/Oct/24 18:34:28.722445", component: "851", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port serverPort was started." }
Simple DataFrame { time: "2014/Oct/24 18:34:28.722478", component: "851", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port httpNodeInternalPort was started." }
Simple DataFrame { time: "2014/Oct/24 18:34:28.722490", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 10 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.723925", component: "851", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "130", function_name: "function:httpNodeInitialize", message: " Port clientPort was mapped to system:clientPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.724205", component: "851", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "133", function_name: "function:httpNodeInitialize", message: " Port serverPort was mapped to system:serverPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.724577", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port httpNodeInternalPort[0] is waiting for connection from 851:httpNodeInternalPort on UNIX pathname /tmp/ttcn3-portconn-290b992a." }
Simple DataFrame { time: "2014/Oct/24 18:34:28.724663", component: "851", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "136", function_name: "function:httpNodeInitialize", message: " Port httpNodeInternalPort has established the connection with mtc:httpNodeInternalPort[0] using transport type UNIX" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.724734", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "239", function_name: "function:receiveInternalMessage", message: " Port httpNodeInternalPort[0] has accepted the connection from 851:httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.724993", component: "851", peer_component: "BaseHttpServerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "55", function_name: "function:openServerForListening", message: " Sent on serverPort to system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.725119", component: "851", peer_component: "BaseHttpServerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "55", function_name: "function:openServerForListening", message: " Message enqueued on serverPort from system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.725168", component: "851", peer_component: "BaseHttpServerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "73", function_name: "function:receiveHTTPServerListenResult", message: " Start timer timerWaitForHTTPRequest: 5 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.725234", component: "851", peer_component: "BaseHttpServerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "77", function_name: "function:receiveHTTPServerListenResult", message: " Receive operation on port serverPort succeeded, message from system(" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.725259", component: "851", peer_component: "BaseHttpServerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "77", function_name: "function:receiveHTTPServerListenResult", message: " Message with id 1 was extracted from the queue of serverPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.725276", component: "851", peer_component: "BaseHttpServerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "78", function_name: "function:receiveHTTPServerListenResult", message: " Stop timer timerWaitForHTTPRequest: 5 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.725357", component: "851", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "141", function_name: "function:httpNodeInitialize", message: " Sent on httpNodeInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.725462", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "239", function_name: "function:receiveInternalMessage", message: " Message enqueued on httpNodeInternalPort[0] from 851 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.725489", component: "851", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "62", function_name: "function:httpNodeRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.725536", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Receive operation on port httpNodeInternalPort[0] succeeded, message from 851: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.725566", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Message with id 1 was extracted from the queue of httpNodeInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.725587", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "241", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 10 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.727239", component: "852", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port clientPort was started." }
Simple DataFrame { time: "2014/Oct/24 18:34:28.727285", component: "852", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port serverPort was started." }
Simple DataFrame { time: "2014/Oct/24 18:34:28.727315", component: "852", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port httpNodeInternalPort was started." }
Simple DataFrame { time: "2014/Oct/24 18:34:28.727376", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 10 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.728539", component: "852", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "130", function_name: "function:httpNodeInitialize", message: " Port clientPort was mapped to system:clientPort[1]" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.728787", component: "852", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "133", function_name: "function:httpNodeInitialize", message: " Port serverPort was mapped to system:serverPort[1]" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.729118", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port httpNodeInternalPort[1] is waiting for connection from 852:httpNodeInternalPort on UNIX pathname /tmp/ttcn3-portconn-2e0b982a." }
Simple DataFrame { time: "2014/Oct/24 18:34:28.729269", component: "852", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "136", function_name: "function:httpNodeInitialize", message: " Port httpNodeInternalPort has established the connection with mtc:httpNodeInternalPort[1] using transport type UNIX" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.729340", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "239", function_name: "function:receiveInternalMessage", message: " Port httpNodeInternalPort[1] has accepted the connection from 852:httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.729562", component: "852", peer_component: "BaseHttpServerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "55", function_name: "function:openServerForListening", message: " Sent on serverPort to system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.729658", component: "852", peer_component: "BaseHttpServerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "55", function_name: "function:openServerForListening", message: " Message enqueued on serverPort from system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.729697", component: "852", peer_component: "BaseHttpServerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "73", function_name: "function:receiveHTTPServerListenResult", message: " Start timer timerWaitForHTTPRequest: 5 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.729756", component: "852", peer_component: "BaseHttpServerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "77", function_name: "function:receiveHTTPServerListenResult", message: " Receive operation on port serverPort succeeded, message from system(" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.729780", component: "852", peer_component: "BaseHttpServerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "77", function_name: "function:receiveHTTPServerListenResult", message: " Message with id 1 was extracted from the queue of serverPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.729797", component: "852", peer_component: "BaseHttpServerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "78", function_name: "function:receiveHTTPServerListenResult", message: " Stop timer timerWaitForHTTPRequest: 5 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.729867", component: "852", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "141", function_name: "function:httpNodeInitialize", message: " Sent on httpNodeInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.729956", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "239", function_name: "function:receiveInternalMessage", message: " Message enqueued on httpNodeInternalPort[1] from 852 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.730010", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Receive operation on port httpNodeInternalPort[1] succeeded, message from 852: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.730012", component: "852", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "62", function_name: "function:httpNodeRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.730058", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Message with id 1 was extracted from the queue of httpNodeInternalPort[1]" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.730084", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "241", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 10 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.730308", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.742992", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "267", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:28.743314", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort[1] to 852 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"PARAM_PORT_OVERRIDE\", parameterValue := \"8888\" } } }, aspHttp := { { httpMessage := { method := \"POST\", url := \"/jolokia/\", body := \"[ { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,successfulTerminating=successfulTerminating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,successfulOriginating=successfulOriginating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulOriginating=unsuccessfulOriginating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulTerminating=unsuccessfulTerminating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,textMessages=textMessages-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,mediaMessages=mediaMessages-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,MSRPSession=MSRPSession-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=GAUGE,format=INTEGER,MSRPCurrentlyActive=MSRPCurrentlyActive1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } ] \", contentType := \"application/json\", statusCode := \"\", header := omit } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.743533", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:28.743673", component: "852", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort from mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"PARAM_PORT_OVERRIDE\", parameterValue := \"8888\" } } }, aspHttp := { { httpMessage := { method := \"POST\", url := \"/jolokia/\", body := \"[ { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,successfulTerminating=successfulTerminating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,successfulOriginating=successfulOriginating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulOriginating=unsuccessfulOriginating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulTerminating=unsuccessfulTerminating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,textMessages=textMessages-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,mediaMessages=mediaMessages-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,MSRPSession=MSRPSession-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=GAUGE,format=INTEGER,MSRPCurrentlyActive=MSRPCurrentlyActive1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } ] \", contentType := \"application/json\", statusCode := \"\", header := omit } } }} id 1" }
Structured  DataFrame { time: "2014/Oct/24 18:34:28.743984", component: "852", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort succeeded, message from mtc: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"PARAM_PORT_OVERRIDE\", parameterValue := \"8888\" } } }, aspHttp := { { httpMessage := { method := \"POST\", url := \"/jolokia/\", body := \"[ { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,successfulTerminating=successfulTerminating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,successfulOriginating=successfulOriginating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulOriginating=unsuccessfulOriginating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulTerminating=unsuccessfulTerminating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,textMessages=textMessages-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,mediaMessages=mediaMessages-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,MSRPSession=MSRPSession-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=GAUGE,format=INTEGER,MSRPCurrentlyActive=MSRPCurrentlyActive1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } ] \", contentType := \"application/json\", statusCode := \"\", header := omit } } }} id 1" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.744047", component: "852", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "67", function_name: "function:httpNodeRun", message: " Message with id 1 was extracted from the queue of httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.744067", component: "852", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "68", function_name: "function:httpNodeRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.744239", component: "852", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "307", function_name: "function:clearHTTPClientPort", message: " Start timer timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.744261", component: "852", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "313", function_name: "function:clearHTTPClientPort", message: " Timeout timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.744357", component: "852", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Sent on clientPort to system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.745156", component: "852", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Message enqueued on clientPort from system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.745202", component: "852", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "243", function_name: "function:sendHTTPClientRequest", message: " Start timer timerWaitForHTTPOpenConnection: 2 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.745234", component: "852", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Receive operation on port clientPort succeeded, message from system(" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.745252", component: "852", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Message with id 1 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.745268", component: "852", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "246", function_name: "function:sendHTTPClientRequest", message: " Stop timer timerWaitForHTTPOpenConnection: 2 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:28.745526", component: "852", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on clientPort to system @HTTPmsg_Types.HTTPMessage : { request := { client_id := 9, method := \"POST\", uri := \"/jolokia/\", version_major := 1, version_minor := 1, header := { { header_name := \"Host\", header_value := \"142.133.142.3\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Content-Length\", header_value := \"1971\" } }, body := \"[ { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,successfulTerminating=successfulTerminating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,successfulOriginating=successfulOriginating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulOriginating=unsuccessfulOriginating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulTerminating=unsuccessfulTerminating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,textMessages=textMessages-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,mediaMessages=mediaMessages-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,MSRPSession=MSRPSession-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=GAUGE,format=INTEGER,MSRPCurrentlyActive=MSRPCurrentlyActive1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } ] \" }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.745690", component: "852", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "189", function_name: "function:receiveAnyHTTPClientResponse", message: " Start timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:28.767124", component: "852", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on clientPort from system @HTTPmsg_Types.HTTPMessage : { response := { client_id := 9, version_major := 1, version_minor := 1, statuscode := 200, statustext := \"OK\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache\" }, { header_name := \"Pragma\", header_value := \"no-cache\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:28 GMT\" }, { header_name := \"Expires\", header_value := \"Fri, 24 Oct 2014 21:34:28 GMT\" }, { header_name := \"Content-Type\", header_value := \"text/plain;charset=utf-8\" }, { header_name := \"Content-Length\", header_value := \"1762\" } }, body := \"[{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,successfulTerminating=successfulTerminating-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,successfulOriginating=successfulOriginating-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulOriginating=unsuccessfulOriginating-1\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":1},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulTerminating=unsuccessfulTerminating-1\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":1},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,textMessages=textMessages-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,mediaMessages=mediaMessages-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,MSRPSession=MSRPSession-1,interface=WcgChatCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,MSRPCurrentlyActive=MSRPCurrentlyActive1,format=INTEGER,interface=WcgGlobalCounterGroup,type=GAUGE\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0}]\" }} id 2" }
Structured  DataFrame { time: "2014/Oct/24 18:34:28.767376", component: "852", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port clientPort succeeded, message from system(): @HTTPmsg_Types.HTTPMessage : { response := { client_id := 9, version_major := 1, version_minor := 1, statuscode := 200, statustext := \"OK\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache\" }, { header_name := \"Pragma\", header_value := \"no-cache\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:28 GMT\" }, { header_name := \"Expires\", header_value := \"Fri, 24 Oct 2014 21:34:28 GMT\" }, { header_name := \"Content-Type\", header_value := \"text/plain;charset=utf-8\" }, { header_name := \"Content-Length\", header_value := \"1762\" } }, body := \"[{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,successfulTerminating=successfulTerminating-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,successfulOriginating=successfulOriginating-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulOriginating=unsuccessfulOriginating-1\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":1},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulTerminating=unsuccessfulTerminating-1\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":1},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,textMessages=textMessages-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,mediaMessages=mediaMessages-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,MSRPSession=MSRPSession-1,interface=WcgChatCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,MSRPCurrentlyActive=MSRPCurrentlyActive1,format=INTEGER,interface=WcgGlobalCounterGroup,type=GAUGE\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0}]\" }} id 2" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.767433", component: "852", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "193", function_name: "function:receiveAnyHTTPClientResponse", message: " Message with id 2 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.767469", component: "852", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "194", function_name: "function:receiveAnyHTTPClientResponse", message: " Stop timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:28.767811", component: "852", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort to mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"[{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,successfulTerminating=successfulTerminating-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,successfulOriginating=successfulOriginating-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulOriginating=unsuccessfulOriginating-1\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":1},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulTerminating=unsuccessfulTerminating-1\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":1},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,textMessages=textMessages-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,mediaMessages=mediaMessages-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,MSRPSession=MSRPSession-1,interface=WcgChatCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,MSRPCurrentlyActive=MSRPCurrentlyActive1,format=INTEGER,interface=WcgGlobalCounterGroup,type=GAUGE\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0}]\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache\" }, { header_name := \"Pragma\", header_value := \"no-cache\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:28 GMT\" }, { header_name := \"Expires\", header_value := \"Fri, 24 Oct 2014 21:34:28 GMT\" }, { header_name := \"Content-Type\", header_value := \"text/plain;charset=utf-8\" }, { header_name := \"Content-Length\", header_value := \"1762\" } } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.767948", component: "852", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "62", function_name: "function:httpNodeRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:28.768236", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort[1] from 852 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"[{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,successfulTerminating=successfulTerminating-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,successfulOriginating=successfulOriginating-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulOriginating=unsuccessfulOriginating-1\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":1},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulTerminating=unsuccessfulTerminating-1\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":1},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,textMessages=textMessages-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,mediaMessages=mediaMessages-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,MSRPSession=MSRPSession-1,interface=WcgChatCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,MSRPCurrentlyActive=MSRPCurrentlyActive1,format=INTEGER,interface=WcgGlobalCounterGroup,type=GAUGE\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0}]\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache\" }, { header_name := \"Pragma\", header_value := \"no-cache\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:28 GMT\" }, { header_name := \"Expires\", header_value := \"Fri, 24 Oct 2014 21:34:28 GMT\" }, { header_name := \"Content-Type\", header_value := \"text/plain;charset=utf-8\" }, { header_name := \"Content-Length\", header_value := \"1762\" } } } } }} id 2" }
Structured  DataFrame { time: "2014/Oct/24 18:34:28.768503", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort[1] succeeded, message from 852: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"[{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,successfulTerminating=successfulTerminating-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,successfulOriginating=successfulOriginating-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulOriginating=unsuccessfulOriginating-1\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":1},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulTerminating=unsuccessfulTerminating-1\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":1},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,textMessages=textMessages-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,mediaMessages=mediaMessages-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,MSRPSession=MSRPSession-1,interface=WcgChatCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,MSRPCurrentlyActive=MSRPCurrentlyActive1,format=INTEGER,interface=WcgGlobalCounterGroup,type=GAUGE\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0}]\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache\" }, { header_name := \"Pragma\", header_value := \"no-cache\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:28 GMT\" }, { header_name := \"Expires\", header_value := \"Fri, 24 Oct 2014 21:34:28 GMT\" }, { header_name := \"Content-Type\", header_value := \"text/plain;charset=utf-8\" }, { header_name := \"Content-Length\", header_value := \"1762\" } } } } }} id 2" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.768568", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Message with id 2 was extracted from the queue of httpNodeInternalPort[1]" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.768612", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "241", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.770901", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.781500", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "267", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:28.781806", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort[1] to 852 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"PARAM_PORT_OVERRIDE\", parameterValue := \"8888\" } } }, aspHttp := { { httpMessage := { method := \"POST\", url := \"/jolokia/\", body := \"[ { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,successfullyReceivedDeliveryNotification=successfullyReceivedDeliveryNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,successfullyReceivedDisplayNotification=successfullyReceivedDisplayNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,failedReceivedDeliveryNotification=failedReceivedDeliveryNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,failedReceivedDisplayNotification=failedReceivedDisplayNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,successfullySentDisplayNotification=successfullySentDisplayNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,failedSentDisplayNotification=failedSentDisplayNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } ] \", contentType := \"application/json\", statusCode := \"\", header := omit } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.781997", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:28.782129", component: "852", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort from mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"PARAM_PORT_OVERRIDE\", parameterValue := \"8888\" } } }, aspHttp := { { httpMessage := { method := \"POST\", url := \"/jolokia/\", body := \"[ { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,successfullyReceivedDeliveryNotification=successfullyReceivedDeliveryNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,successfullyReceivedDisplayNotification=successfullyReceivedDisplayNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,failedReceivedDeliveryNotification=failedReceivedDeliveryNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,failedReceivedDisplayNotification=failedReceivedDisplayNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,successfullySentDisplayNotification=successfullySentDisplayNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,failedSentDisplayNotification=failedSentDisplayNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } ] \", contentType := \"application/json\", statusCode := \"\", header := omit } } }} id 2" }
Structured  DataFrame { time: "2014/Oct/24 18:34:28.782359", component: "852", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort succeeded, message from mtc: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"PARAM_PORT_OVERRIDE\", parameterValue := \"8888\" } } }, aspHttp := { { httpMessage := { method := \"POST\", url := \"/jolokia/\", body := \"[ { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,successfullyReceivedDeliveryNotification=successfullyReceivedDeliveryNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,successfullyReceivedDisplayNotification=successfullyReceivedDisplayNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,failedReceivedDeliveryNotification=failedReceivedDeliveryNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,failedReceivedDisplayNotification=failedReceivedDisplayNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,successfullySentDisplayNotification=successfullySentDisplayNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,failedSentDisplayNotification=failedSentDisplayNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } ] \", contentType := \"application/json\", statusCode := \"\", header := omit } } }} id 2" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.782398", component: "852", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "67", function_name: "function:httpNodeRun", message: " Message with id 2 was extracted from the queue of httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.782415", component: "852", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "68", function_name: "function:httpNodeRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.782544", component: "852", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "307", function_name: "function:clearHTTPClientPort", message: " Start timer timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.782563", component: "852", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "313", function_name: "function:clearHTTPClientPort", message: " Timeout timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.782631", component: "852", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Sent on clientPort to system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.783538", component: "852", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Message enqueued on clientPort from system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.783573", component: "852", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "243", function_name: "function:sendHTTPClientRequest", message: " Start timer timerWaitForHTTPOpenConnection: 2 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.783599", component: "852", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Receive operation on port clientPort succeeded, message from system(" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.783617", component: "852", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Message with id 3 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.783633", component: "852", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "246", function_name: "function:sendHTTPClientRequest", message: " Stop timer timerWaitForHTTPOpenConnection: 2 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:28.783853", component: "852", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on clientPort to system @HTTPmsg_Types.HTTPMessage : { request := { client_id := 10, method := \"POST\", uri := \"/jolokia/\", version_major := 1, version_minor := 1, header := { { header_name := \"Host\", header_value := \"142.133.142.3\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Content-Length\", header_value := \"1682\" } }, body := \"[ { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,successfullyReceivedDeliveryNotification=successfullyReceivedDeliveryNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,successfullyReceivedDisplayNotification=successfullyReceivedDisplayNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,failedReceivedDeliveryNotification=failedReceivedDeliveryNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,failedReceivedDisplayNotification=failedReceivedDisplayNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,successfullySentDisplayNotification=successfullySentDisplayNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,failedSentDisplayNotification=failedSentDisplayNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } ] \" }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.783993", component: "852", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "189", function_name: "function:receiveAnyHTTPClientResponse", message: " Start timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:28.795127", component: "852", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on clientPort from system @HTTPmsg_Types.HTTPMessage : { response := { client_id := 10, version_major := 1, version_minor := 1, statuscode := 200, statustext := \"OK\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache\" }, { header_name := \"Pragma\", header_value := \"no-cache\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:28 GMT\" }, { header_name := \"Expires\", header_value := \"Fri, 24 Oct 2014 21:34:28 GMT\" }, { header_name := \"Content-Type\", header_value := \"text/plain;charset=utf-8\" }, { header_name := \"Content-Length\", header_value := \"1525\" } }, body := \"[{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,successfullyReceivedDeliveryNotification=successfullyReceivedDeliveryNotification-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,successfullyReceivedDisplayNotification=successfullyReceivedDisplayNotification-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,failedReceivedDeliveryNotification=failedReceivedDeliveryNotification-1,interface=WcgGlobalCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,failedReceivedDisplayNotification=failedReceivedDisplayNotification-1,interface=WcgGlobalCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,successfullySentDisplayNotification=successfullySentDisplayNotification-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,failedSentDisplayNotification=failedSentDisplayNotification-1,interface=WcgGlobalCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0}]\" }} id 4" }
Structured  DataFrame { time: "2014/Oct/24 18:34:28.795327", component: "852", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port clientPort succeeded, message from system(): @HTTPmsg_Types.HTTPMessage : { response := { client_id := 10, version_major := 1, version_minor := 1, statuscode := 200, statustext := \"OK\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache\" }, { header_name := \"Pragma\", header_value := \"no-cache\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:28 GMT\" }, { header_name := \"Expires\", header_value := \"Fri, 24 Oct 2014 21:34:28 GMT\" }, { header_name := \"Content-Type\", header_value := \"text/plain;charset=utf-8\" }, { header_name := \"Content-Length\", header_value := \"1525\" } }, body := \"[{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,successfullyReceivedDeliveryNotification=successfullyReceivedDeliveryNotification-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,successfullyReceivedDisplayNotification=successfullyReceivedDisplayNotification-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,failedReceivedDeliveryNotification=failedReceivedDeliveryNotification-1,interface=WcgGlobalCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,failedReceivedDisplayNotification=failedReceivedDisplayNotification-1,interface=WcgGlobalCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,successfullySentDisplayNotification=successfullySentDisplayNotification-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,failedSentDisplayNotification=failedSentDisplayNotification-1,interface=WcgGlobalCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0}]\" }} id 4" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.795391", component: "852", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "193", function_name: "function:receiveAnyHTTPClientResponse", message: " Message with id 4 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.795412", component: "852", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "194", function_name: "function:receiveAnyHTTPClientResponse", message: " Stop timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:28.795605", component: "852", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort to mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"[{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,successfullyReceivedDeliveryNotification=successfullyReceivedDeliveryNotification-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,successfullyReceivedDisplayNotification=successfullyReceivedDisplayNotification-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,failedReceivedDeliveryNotification=failedReceivedDeliveryNotification-1,interface=WcgGlobalCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,failedReceivedDisplayNotification=failedReceivedDisplayNotification-1,interface=WcgGlobalCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,successfullySentDisplayNotification=successfullySentDisplayNotification-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,failedSentDisplayNotification=failedSentDisplayNotification-1,interface=WcgGlobalCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0}]\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache\" }, { header_name := \"Pragma\", header_value := \"no-cache\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:28 GMT\" }, { header_name := \"Expires\", header_value := \"Fri, 24 Oct 2014 21:34:28 GMT\" }, { header_name := \"Content-Type\", header_value := \"text/plain;charset=utf-8\" }, { header_name := \"Content-Length\", header_value := \"1525\" } } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.795696", component: "852", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "62", function_name: "function:httpNodeRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:28.795979", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort[1] from 852 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"[{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,successfullyReceivedDeliveryNotification=successfullyReceivedDeliveryNotification-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,successfullyReceivedDisplayNotification=successfullyReceivedDisplayNotification-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,failedReceivedDeliveryNotification=failedReceivedDeliveryNotification-1,interface=WcgGlobalCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,failedReceivedDisplayNotification=failedReceivedDisplayNotification-1,interface=WcgGlobalCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,successfullySentDisplayNotification=successfullySentDisplayNotification-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,failedSentDisplayNotification=failedSentDisplayNotification-1,interface=WcgGlobalCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0}]\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache\" }, { header_name := \"Pragma\", header_value := \"no-cache\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:28 GMT\" }, { header_name := \"Expires\", header_value := \"Fri, 24 Oct 2014 21:34:28 GMT\" }, { header_name := \"Content-Type\", header_value := \"text/plain;charset=utf-8\" }, { header_name := \"Content-Length\", header_value := \"1525\" } } } } }} id 3" }
Structured  DataFrame { time: "2014/Oct/24 18:34:28.796230", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort[1] succeeded, message from 852: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"[{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,successfullyReceivedDeliveryNotification=successfullyReceivedDeliveryNotification-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,successfullyReceivedDisplayNotification=successfullyReceivedDisplayNotification-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,failedReceivedDeliveryNotification=failedReceivedDeliveryNotification-1,interface=WcgGlobalCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,failedReceivedDisplayNotification=failedReceivedDisplayNotification-1,interface=WcgGlobalCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,successfullySentDisplayNotification=successfullySentDisplayNotification-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190068,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,failedSentDisplayNotification=failedSentDisplayNotification-1,interface=WcgGlobalCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0}]\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache\" }, { header_name := \"Pragma\", header_value := \"no-cache\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:28 GMT\" }, { header_name := \"Expires\", header_value := \"Fri, 24 Oct 2014 21:34:28 GMT\" }, { header_name := \"Content-Type\", header_value := \"text/plain;charset=utf-8\" }, { header_name := \"Content-Length\", header_value := \"1525\" } } } } }} id 3" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.796295", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Message with id 3 was extracted from the queue of httpNodeInternalPort[1]" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.796320", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "241", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.800051", component: "853", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port clientPort was started." }
Simple DataFrame { time: "2014/Oct/24 18:34:28.800071", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 10 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.800090", component: "853", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port serverPort was started." }
Simple DataFrame { time: "2014/Oct/24 18:34:28.800112", component: "853", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port httpNodeInternalPort was started." }
Simple DataFrame { time: "2014/Oct/24 18:34:28.801517", component: "853", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "130", function_name: "function:httpNodeInitialize", message: " Port clientPort was mapped to system:clientPort[2]" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.801970", component: "853", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "133", function_name: "function:httpNodeInitialize", message: " Port serverPort was mapped to system:serverPort[2]" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.802354", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port httpNodeInternalPort[2] is waiting for connection from 853:httpNodeInternalPort on UNIX pathname /tmp/ttcn3-portconn-2f0b9b2a." }
Simple DataFrame { time: "2014/Oct/24 18:34:28.802482", component: "853", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "136", function_name: "function:httpNodeInitialize", message: " Port httpNodeInternalPort has established the connection with mtc:httpNodeInternalPort[2] using transport type UNIX" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.802549", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "239", function_name: "function:receiveInternalMessage", message: " Port httpNodeInternalPort[2] has accepted the connection from 853:httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.802830", component: "853", peer_component: "BaseHttpServerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "55", function_name: "function:openServerForListening", message: " Sent on serverPort to system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.802961", component: "853", peer_component: "BaseHttpServerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "55", function_name: "function:openServerForListening", message: " Message enqueued on serverPort from system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.802998", component: "853", peer_component: "BaseHttpServerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "73", function_name: "function:receiveHTTPServerListenResult", message: " Start timer timerWaitForHTTPRequest: 5 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.803037", component: "853", peer_component: "BaseHttpServerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "77", function_name: "function:receiveHTTPServerListenResult", message: " Receive operation on port serverPort succeeded, message from system(" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.803059", component: "853", peer_component: "BaseHttpServerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "77", function_name: "function:receiveHTTPServerListenResult", message: " Message with id 1 was extracted from the queue of serverPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.803076", component: "853", peer_component: "BaseHttpServerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "78", function_name: "function:receiveHTTPServerListenResult", message: " Stop timer timerWaitForHTTPRequest: 5 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.803152", component: "853", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "141", function_name: "function:httpNodeInitialize", message: " Sent on httpNodeInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.803238", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "239", function_name: "function:receiveInternalMessage", message: " Message enqueued on httpNodeInternalPort[2] from 853 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.803244", component: "853", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "62", function_name: "function:httpNodeRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.803294", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Receive operation on port httpNodeInternalPort[2] succeeded, message from 853: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.803341", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Message with id 1 was extracted from the queue of httpNodeInternalPort[2]" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.803364", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "241", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 10 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.803537", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.814999", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "267", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:28.815184", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort[2] to 853 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"1\" } } }, aspHttp := { { httpMessage := { method := \"POST\", url := \"/14A/v3/register\", body := \"{ \\\"username\\\": \\\"10014002006@ericsson.se\\\", \\\"password\\\": \\\"10014002006\\\", \\\"mediaType\\\": \\\"rtp\\\", \\\"services\\\": [ \\\"im_chat\\\", \\\"file_transfer\\\", \\\"video_share\\\", \\\"ip_voice_call\\\", \\\"ip_video_call\\\", \\\"im_standalone\\\", \\\"cs\\\", \\\"ab\\\", \\\"+custom-valid-feature\\\", \\\"custom-invalid-feature\\\"] } \", contentType := \"application/json\", statusCode := \"\", header := { } } } }}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:28.815341", component: "853", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort from mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"1\" } } }, aspHttp := { { httpMessage := { method := \"POST\", url := \"/14A/v3/register\", body := \"{ \\\"username\\\": \\\"10014002006@ericsson.se\\\", \\\"password\\\": \\\"10014002006\\\", \\\"mediaType\\\": \\\"rtp\\\", \\\"services\\\": [ \\\"im_chat\\\", \\\"file_transfer\\\", \\\"video_share\\\", \\\"ip_voice_call\\\", \\\"ip_video_call\\\", \\\"im_standalone\\\", \\\"cs\\\", \\\"ab\\\", \\\"+custom-valid-feature\\\", \\\"custom-invalid-feature\\\"] } \", contentType := \"application/json\", statusCode := \"\", header := { } } } }} id 1" }
Structured  DataFrame { time: "2014/Oct/24 18:34:28.815432", component: "853", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort succeeded, message from mtc: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"1\" } } }, aspHttp := { { httpMessage := { method := \"POST\", url := \"/14A/v3/register\", body := \"{ \\\"username\\\": \\\"10014002006@ericsson.se\\\", \\\"password\\\": \\\"10014002006\\\", \\\"mediaType\\\": \\\"rtp\\\", \\\"services\\\": [ \\\"im_chat\\\", \\\"file_transfer\\\", \\\"video_share\\\", \\\"ip_voice_call\\\", \\\"ip_video_call\\\", \\\"im_standalone\\\", \\\"cs\\\", \\\"ab\\\", \\\"+custom-valid-feature\\\", \\\"custom-invalid-feature\\\"] } \", contentType := \"application/json\", statusCode := \"\", header := { } } } }} id 1" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.815478", component: "853", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "67", function_name: "function:httpNodeRun", message: " Message with id 1 was extracted from the queue of httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.815510", component: "853", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "68", function_name: "function:httpNodeRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.815720", component: "853", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "307", function_name: "function:clearHTTPClientPort", message: " Start timer timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.815743", component: "853", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "313", function_name: "function:clearHTTPClientPort", message: " Timeout timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.815811", component: "853", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Sent on clientPort to system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.816021", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.816543", component: "853", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Message enqueued on clientPort from system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.816577", component: "853", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "243", function_name: "function:sendHTTPClientRequest", message: " Start timer timerWaitForHTTPOpenConnection: 2 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.816605", component: "853", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Receive operation on port clientPort succeeded, message from system(" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.816623", component: "853", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Message with id 1 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.816638", component: "853", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "246", function_name: "function:sendHTTPClientRequest", message: " Stop timer timerWaitForHTTPOpenConnection: 2 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:28.816740", component: "853", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on clientPort to system @HTTPmsg_Types.HTTPMessage : { request := { client_id := 9, method := \"POST\", uri := \"/14A/v3/register\", version_major := 1, version_minor := 1, header := { { header_name := \"Host\", header_value := \"142.133.142.3\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Content-Length\", header_value := \"261\" } }, body := \"{ \\\"username\\\": \\\"10014002006@ericsson.se\\\", \\\"password\\\": \\\"10014002006\\\", \\\"mediaType\\\": \\\"rtp\\\", \\\"services\\\": [ \\\"im_chat\\\", \\\"file_transfer\\\", \\\"video_share\\\", \\\"ip_voice_call\\\", \\\"ip_video_call\\\", \\\"im_standalone\\\", \\\"cs\\\", \\\"ab\\\", \\\"+custom-valid-feature\\\", \\\"custom-invalid-feature\\\"] } \" }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.816845", component: "853", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "189", function_name: "function:receiveAnyHTTPClientResponse", message: " Start timer timerWaitForHTTPResponse: 60 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.826134", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "286", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.826248", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "202", function_name: "function:sendInternalMessage", message: " Sent on sipInternalPort[0] to 849 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.826373", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "78", function_name: "function:sipRun", message: " Message enqueued on sipInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.826418", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.826469", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Receive operation on port sipInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.826530", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Message with id 2 was extracted from the queue of sipInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.826565", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "80", function_name: "function:sipRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.827072", component: "849", peer_component: "BaseSipClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "320", function_name: "function:generalReceiveSip", message: " Start timer timerWaitForSipMessage: 15 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.886699", component: "849", peer_component: "BaseSipClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "322", function_name: "function:generalReceiveSip", message: " Message enqueued on sipClientPort from system @Socket_API_Definitions" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.886815", component: "849", peer_component: "BaseSipClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "363", function_name: "function:generalReceiveSip", message: " Receive operation on port sipClientPort succeeded, message from system(" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.886852", component: "849", peer_component: "BaseSipClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "363", function_name: "function:generalReceiveSip", message: " Message with id 1 was extracted from the queue of sipClientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.886902", component: "849", peer_component: "BaseSipClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "365", function_name: "function:generalReceiveSip", message: " Stop timer timerWaitForSipMessage: 15 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.886934", component: "849", peer_component: "BaseSipClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "320", function_name: "function:generalReceiveSip", message: " Start timer timerWaitForSipMessage: 15 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:28.893295", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on sipClientPort from system @IPL4asp_Types.ASP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msgsip:ericsson.se SIP/2.0\\r\\nMax-Forwards: 69\\r\\nAuthorization: Digest realm=\\\"ericsson.se\\\",username=\\\"10014002006@ericsson.se\\\",uri=\\\"sip:ericsson.se\\\",nonce=\\\"\\\",response=\\\"\\\"\\r\\nRequire: pref\\r\\nContent-Length: 0\\r\\nTo: <sip:10014002006@ericsson.se>\\r\\nExpires: 600000\\r\\nContact: <sip:10014002006@142.133.142.3:5060;csid=8cf72980-08e3-4819-943d-f7260f67318d;transport=TCP>;+g.gsma.rcs.ipcall;+g.3gpp.icsi-ref=\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\";+g.oma.sip-im;+g.gsma.rcs.telephony=\\\"cs\\\";+g.3gpp.cs-voice;+g.3gpp.iari-ref=\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\";video;sip.ice=true;q=0.5\\r\\nCseq: 1 REGISTER\\r\\nVia: SIP/2.0/TCP 142.133.142.3:5060;branch=z9hG4bKf1f94d7cead7c7a3435784500c2ba6fc176b\\r\\nUser-Agent: H2S\\r\\nRoute: <sip:142.133.150.169:26720;lr;transport=TCP>\\r\\nCall-Id: 142.133.142.3_4_1575518397039837327\\r\\nFrom: <sip:10014002006@ericsson.se>;tag=i1o494sa-5\\r\\n\\r\\n\")} id 2" }
Structured  DataFrame { time: "2014/Oct/24 18:34:28.894492", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Incoming message was mapped to @IPL4_demo_types.SIP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msg := { request := { requestLine := { method := REGISTER_E (11), requestUri := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := { fieldName := AUTHORIZATION_E (11), body := { digestResponse := { { id := \"realm\", paramValue := \"\\\"ericsson.se\\\"\" }, { id := \"username\", paramValue := \"\\\"10014002006@ericsson.se\\\"\" }, { id := \"uri\", paramValue := \"\\\"sip:ericsson.se\\\"\" }, { id := \"nonce\", paramValue := \"\\\"\\\"\" }, { id := \"response\", paramValue := \"\\\"\\\"\" } } } }, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_4_1575518397039837327\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"8cf72980-08e3-4819-943d-f7260f67318d\" }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.telephony\", paramValue := \"\\\"cs\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit }, { id := \"sip.ice\", paramValue := \"true\" }, { id := \"q\", paramValue := \"0.5\" } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := { fieldName := EXPIRES_E (24), deltaSec := \"600000\" }, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494sa-5\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := { fieldName := REQUIRE_E (80), optionsTags := { \"pref\" } }, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := { fieldName := ROUTE_E (84), routeBody := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"lr\", paramValue := omit }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } }, rrParam := omit } } }, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f94d7cead7c7a3435784500c2ba6fc176b\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } }} id 2" }
Structured  DataFrame { time: "2014/Oct/24 18:34:28.894848", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port sipClientPort succeeded, message from system(): @IPL4_demo_types.SIP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msg := { request := { requestLine := { method := REGISTER_E (11), requestUri := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := { fieldName := AUTHORIZATION_E (11), body := { digestResponse := { { id := \"realm\", paramValue := \"\\\"ericsson.se\\\"\" }, { id := \"username\", paramValue := \"\\\"10014002006@ericsson.se\\\"\" }, { id := \"uri\", paramValue := \"\\\"sip:ericsson.se\\\"\" }, { id := \"nonce\", paramValue := \"\\\"\\\"\" }, { id := \"response\", paramValue := \"\\\"\\\"\" } } } }, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_4_1575518397039837327\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"8cf72980-08e3-4819-943d-f7260f67318d\" }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.telephony\", paramValue := \"\\\"cs\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit }, { id := \"sip.ice\", paramValue := \"true\" }, { id := \"q\", paramValue := \"0.5\" } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := { fieldName := EXPIRES_E (24), deltaSec := \"600000\" }, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494sa-5\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := { fieldName := REQUIRE_E (80), optionsTags := { \"pref\" } }, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := { fieldName := ROUTE_E (84), routeBody := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"lr\", paramValue := omit }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } }, rrParam := omit } } }, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f94d7cead7c7a3435784500c2ba6fc176b\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } }} id 2" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.894973", component: "849", peer_component: "BaseSipClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "345", function_name: "function:generalReceiveSip", message: " Message with id 2 was extracted from the queue of sipClientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.895006", component: "849", peer_component: "BaseSipClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "346", function_name: "function:generalReceiveSip", message: " Stop timer timerWaitForSipMessage: 15 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:28.896146", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on sipInternalPort to mtc @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspRequest := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, request := { requestLine := { method := REGISTER_E (11), requestUri := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := { fieldName := AUTHORIZATION_E (11), body := { digestResponse := { { id := \"realm\", paramValue := \"\\\"ericsson.se\\\"\" }, { id := \"username\", paramValue := \"\\\"10014002006@ericsson.se\\\"\" }, { id := \"uri\", paramValue := \"\\\"sip:ericsson.se\\\"\" }, { id := \"nonce\", paramValue := \"\\\"\\\"\" }, { id := \"response\", paramValue := \"\\\"\\\"\" } } } }, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_4_1575518397039837327\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"8cf72980-08e3-4819-943d-f7260f67318d\" }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.telephony\", paramValue := \"\\\"cs\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit }, { id := \"sip.ice\", paramValue := \"true\" }, { id := \"q\", paramValue := \"0.5\" } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := { fieldName := EXPIRES_E (24), deltaSec := \"600000\" }, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494sa-5\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := { fieldName := REQUIRE_E (80), optionsTags := { \"pref\" } }, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := { fieldName := ROUTE_E (84), routeBody := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"lr\", paramValue := omit }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } }, rrParam := omit } } }, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f94d7cead7c7a3435784500c2ba6fc176b\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.896457", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "74", function_name: "function:sipRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:28.896698", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on sipInternalPort[0] from 849 @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspRequest := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, request := { requestLine := { method := REGISTER_E (11), requestUri := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := { fieldName := AUTHORIZATION_E (11), body := { digestResponse := { { id := \"realm\", paramValue := \"\\\"ericsson.se\\\"\" }, { id := \"username\", paramValue := \"\\\"10014002006@ericsson.se\\\"\" }, { id := \"uri\", paramValue := \"\\\"sip:ericsson.se\\\"\" }, { id := \"nonce\", paramValue := \"\\\"\\\"\" }, { id := \"response\", paramValue := \"\\\"\\\"\" } } } }, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_4_1575518397039837327\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"8cf72980-08e3-4819-943d-f7260f67318d\" }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.telephony\", paramValue := \"\\\"cs\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit }, { id := \"sip.ice\", paramValue := \"true\" }, { id := \"q\", paramValue := \"0.5\" } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := { fieldName := EXPIRES_E (24), deltaSec := \"600000\" }, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494sa-5\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := { fieldName := REQUIRE_E (80), optionsTags := { \"pref\" } }, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := { fieldName := ROUTE_E (84), routeBody := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"lr\", paramValue := omit }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } }, rrParam := omit } } }, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f94d7cead7c7a3435784500c2ba6fc176b\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 3" }
Structured  DataFrame { time: "2014/Oct/24 18:34:28.896990", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port sipInternalPort[0] succeeded, message from 849: @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspRequest := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, request := { requestLine := { method := REGISTER_E (11), requestUri := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := { fieldName := AUTHORIZATION_E (11), body := { digestResponse := { { id := \"realm\", paramValue := \"\\\"ericsson.se\\\"\" }, { id := \"username\", paramValue := \"\\\"10014002006@ericsson.se\\\"\" }, { id := \"uri\", paramValue := \"\\\"sip:ericsson.se\\\"\" }, { id := \"nonce\", paramValue := \"\\\"\\\"\" }, { id := \"response\", paramValue := \"\\\"\\\"\" } } } }, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_4_1575518397039837327\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"8cf72980-08e3-4819-943d-f7260f67318d\" }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.telephony\", paramValue := \"\\\"cs\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit }, { id := \"sip.ice\", paramValue := \"true\" }, { id := \"q\", paramValue := \"0.5\" } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := { fieldName := EXPIRES_E (24), deltaSec := \"600000\" }, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494sa-5\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := { fieldName := REQUIRE_E (80), optionsTags := { \"pref\" } }, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := { fieldName := ROUTE_E (84), routeBody := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"lr\", paramValue := omit }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } }, rrParam := omit } } }, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f94d7cead7c7a3435784500c2ba6fc176b\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 3" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.897077", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Message with id 3 was extracted from the queue of sipInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.897108", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "255", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.900870", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.910996", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "286", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:28.911356", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on sipInternalPort[0] to 849 @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMMAND_SIP_SEND_SIP_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"1\" }, { parameterName := \"SUBSCRIBER\", parameterValue := \"11\" } } }, aspsSip := { { aspResponse := { addr := { remote_host := \"142.133.142.3\", remote_port := 5060, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 401, reasonPhrase := \"Unauthorized\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_4_1575518397039837327\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494sa-5\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"93068738936275990859113464440233379922\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f94d7cead7c7a3435784500c2ba6fc176b\" } } } } }, warning := omit, wwwAuthenticate := { fieldName := WWW_AUTHENTICATE_E (104), challenge := { { digestCln := { { id := \"nonce\", paramValue := \"\\\"68802944664224158604006517243880\\\"\" }, { id := \"realm\", paramValue := \"\\\"ericsson.se\\\"\" }, { id := \"stale\", paramValue := \"false\" }, { id := \"algorithm\", paramValue := \"MD5\" }, { id := \"qop\", paramValue := \"\\\"auth\\\"\" } } } } }, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.911612", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:28.911673", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on sipInternalPort from mtc @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMMAND_SIP_SEND_SIP_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"1\" }, { parameterName := \"SUBSCRIBER\", parameterValue := \"11\" } } }, aspsSip := { { aspResponse := { addr := { remote_host := \"142.133.142.3\", remote_port := 5060, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 401, reasonPhrase := \"Unauthorized\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_4_1575518397039837327\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494sa-5\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"93068738936275990859113464440233379922\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f94d7cead7c7a3435784500c2ba6fc176b\" } } } } }, warning := omit, wwwAuthenticate := { fieldName := WWW_AUTHENTICATE_E (104), challenge := { { digestCln := { { id := \"nonce\", paramValue := \"\\\"68802944664224158604006517243880\\\"\" }, { id := \"realm\", paramValue := \"\\\"ericsson.se\\\"\" }, { id := \"stale\", paramValue := \"false\" }, { id := \"algorithm\", paramValue := \"MD5\" }, { id := \"qop\", paramValue := \"\\\"auth\\\"\" } } } } }, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 3" }
Structured  DataFrame { time: "2014/Oct/24 18:34:28.911846", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port sipInternalPort succeeded, message from mtc: @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMMAND_SIP_SEND_SIP_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"1\" }, { parameterName := \"SUBSCRIBER\", parameterValue := \"11\" } } }, aspsSip := { { aspResponse := { addr := { remote_host := \"142.133.142.3\", remote_port := 5060, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 401, reasonPhrase := \"Unauthorized\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_4_1575518397039837327\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494sa-5\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"93068738936275990859113464440233379922\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f94d7cead7c7a3435784500c2ba6fc176b\" } } } } }, warning := omit, wwwAuthenticate := { fieldName := WWW_AUTHENTICATE_E (104), challenge := { { digestCln := { { id := \"nonce\", paramValue := \"\\\"68802944664224158604006517243880\\\"\" }, { id := \"realm\", paramValue := \"\\\"ericsson.se\\\"\" }, { id := \"stale\", paramValue := \"false\" }, { id := \"algorithm\", paramValue := \"MD5\" }, { id := \"qop\", paramValue := \"\\\"auth\\\"\" } } } } }, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 3" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.911917", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Message with id 3 was extracted from the queue of sipInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.911943", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "80", function_name: "function:sipRun", message: " Stop timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:28.912373", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on sipClientPort to system @IPL4_demo_types.SIP_SendTo : { connId := 3, remName := \"142.133.142.3\", remPort := 5060, proto := { tcp := { } }, msg := { raw := \"SIP/2.0 401 Unauthorized\\r\\nCall-ID:142.133.142.3_4_1575518397039837327\\r\\nContent-Length:0\\r\\nCSeq:1 REGISTER\\r\\nFrom:<sip:10014002006@ericsson.se>;tag=i1o494sa-5\\r\\nTo:<sip:10014002006@ericsson.se>;tag=93068738936275990859113464440233379922\\r\\nVia:SIP/2.0/TCP 142.133.142.3:5060;branch=z9hG4bKf1f94d7cead7c7a3435784500c2ba6fc176b\\r\\nWWW-Authenticate:Digest nonce=\\\"68802944664224158604006517243880\\\", realm=\\\"ericsson.se\\\", stale=false, algorithm=MD5, qop=\\\"auth\\\"\\r\\n\\r\\n\" }}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:28.912452", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Outgoing message was mapped to @IPL4asp_Types.ASP_SendTo : { connId := 3, remName := \"142.133.142.3\", remPort := 5060, proto := { tcp := { } }, msgnauthorized\\r\\nCall-ID:142.133.142.3_4_1575518397039837327\\r\\nContent-Length:0\\r\\nCSeq:1 REGISTER\\r\\nFrom:<sip:10014002006@ericsson.se>;tag=i1o494sa-5\\r\\nTo:<sip:10014002006@ericsson.se>;tag=93068738936275990859113464440233379922\\r\\nVia:SIP/2.0/TCP 142.133.142.3:5060;branch=z9hG4bKf1f94d7cead7c7a3435784500c2ba6fc176b\\r\\nWWW-Authenticate:Digest nonce=\\\"68802944664224158604006517243880\\\", realm=\\\"ericsson.se\\\", stale=false, algorithm=MD5, qop=\\\"auth\\\"\\r\\n\\r\\n\")}" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.912574", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "388", function_name: "function:processCommand", message: " Sent on sipInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.912633", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "74", function_name: "function:sipRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.912676", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "253", function_name: "function:receiveInternalMessage", message: " Message enqueued on sipInternalPort[0] from 849 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.912747", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Receive operation on port sipInternalPort[0] succeeded, message from 849: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.912772", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Message with id 4 was extracted from the queue of sipInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.912804", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "255", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.913372", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.926994", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "286", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.927072", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "202", function_name: "function:sendInternalMessage", message: " Sent on sipInternalPort[0] to 849 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.927198", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "78", function_name: "function:sipRun", message: " Message enqueued on sipInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.927258", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.927274", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Receive operation on port sipInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.927299", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Message with id 4 was extracted from the queue of sipInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.927314", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "80", function_name: "function:sipRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.927408", component: "849", peer_component: "BaseSipClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "320", function_name: "function:generalReceiveSip", message: " Start timer timerWaitForSipMessage: 15 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:28.949260", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on sipClientPort from system @IPL4asp_Types.ASP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msgsip:ericsson.se SIP/2.0\\r\\nMax-Forwards: 69\\r\\nAuthorization: Digest realm=\\\"ericsson.se\\\",username=\\\"10014002006@ericsson.se\\\",uri=\\\"sip:ericsson.se\\\",nonce=\\\"68802944664224158604006517243880\\\",nc=00000001,cnonce=\\\"a2cf7676bda40995134c471c88c57112\\\",qop=auth,response=\\\"54b302deb6b02ae75c946cf2edc27653\\\",algorithm=MD5\\r\\nRequire: pref\\r\\nContent-Length: 0\\r\\nTo: <sip:10014002006@ericsson.se>\\r\\nContact: <sip:10014002006@142.133.142.3:5060;csid=8cf72980-08e3-4819-943d-f7260f67318d;transport=TCP>;+g.gsma.rcs.ipcall;+g.3gpp.icsi-ref=\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\";+g.oma.sip-im;+g.gsma.rcs.telephony=\\\"cs\\\";+g.3gpp.cs-voice;+g.3gpp.iari-ref=\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\";video;sip.ice=true;q=0.5\\r\\nExpires: 600000\\r\\nCseq: 2 REGISTER\\r\\nVia: SIP/2.0/TCP 142.133.142.3:5060;branch=z9hG4bKf1f906bb85d71c1540e48fd894134428920b\\r\\nUser-Agent: H2S\\r\\nRoute: <sip:142.133.150.169:26720;lr;transport=TCP>\\r\\nFrom: <sip:10014002006@ericsson.se>;tag=i1o494sa-5\\r\\nCall-Id: 142.133.142.3_4_1575518397039837327\\r\\n\\r\\n\")} id 3" }
Structured  DataFrame { time: "2014/Oct/24 18:34:28.949779", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Incoming message was mapped to @IPL4_demo_types.SIP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msg := { request := { requestLine := { method := REGISTER_E (11), requestUri := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := { fieldName := AUTHORIZATION_E (11), body := { digestResponse := { { id := \"realm\", paramValue := \"\\\"ericsson.se\\\"\" }, { id := \"username\", paramValue := \"\\\"10014002006@ericsson.se\\\"\" }, { id := \"uri\", paramValue := \"\\\"sip:ericsson.se\\\"\" }, { id := \"nonce\", paramValue := \"\\\"68802944664224158604006517243880\\\"\" }, { id := \"nc\", paramValue := \"00000001\" }, { id := \"cnonce\", paramValue := \"\\\"a2cf7676bda40995134c471c88c57112\\\"\" }, { id := \"qop\", paramValue := \"auth\" }, { id := \"response\", paramValue := \"\\\"54b302deb6b02ae75c946cf2edc27653\\\"\" }, { id := \"algorithm\", paramValue := \"MD5\" } } } }, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_4_1575518397039837327\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"8cf72980-08e3-4819-943d-f7260f67318d\" }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.telephony\", paramValue := \"\\\"cs\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit }, { id := \"sip.ice\", paramValue := \"true\" }, { id := \"q\", paramValue := \"0.5\" } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 2, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := { fieldName := EXPIRES_E (24), deltaSec := \"600000\" }, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494sa-5\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := { fieldName := REQUIRE_E (80), optionsTags := { \"pref\" } }, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := { fieldName := ROUTE_E (84), routeBody := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"lr\", paramValue := omit }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } }, rrParam := omit } } }, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f906bb85d71c1540e48fd894134428920b\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } }} id 3" }
Structured  DataFrame { time: "2014/Oct/24 18:34:28.950045", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port sipClientPort succeeded, message from system(): @IPL4_demo_types.SIP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msg := { request := { requestLine := { method := REGISTER_E (11), requestUri := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := { fieldName := AUTHORIZATION_E (11), body := { digestResponse := { { id := \"realm\", paramValue := \"\\\"ericsson.se\\\"\" }, { id := \"username\", paramValue := \"\\\"10014002006@ericsson.se\\\"\" }, { id := \"uri\", paramValue := \"\\\"sip:ericsson.se\\\"\" }, { id := \"nonce\", paramValue := \"\\\"68802944664224158604006517243880\\\"\" }, { id := \"nc\", paramValue := \"00000001\" }, { id := \"cnonce\", paramValue := \"\\\"a2cf7676bda40995134c471c88c57112\\\"\" }, { id := \"qop\", paramValue := \"auth\" }, { id := \"response\", paramValue := \"\\\"54b302deb6b02ae75c946cf2edc27653\\\"\" }, { id := \"algorithm\", paramValue := \"MD5\" } } } }, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_4_1575518397039837327\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"8cf72980-08e3-4819-943d-f7260f67318d\" }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.telephony\", paramValue := \"\\\"cs\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit }, { id := \"sip.ice\", paramValue := \"true\" }, { id := \"q\", paramValue := \"0.5\" } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 2, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := { fieldName := EXPIRES_E (24), deltaSec := \"600000\" }, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494sa-5\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := { fieldName := REQUIRE_E (80), optionsTags := { \"pref\" } }, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := { fieldName := ROUTE_E (84), routeBody := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"lr\", paramValue := omit }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } }, rrParam := omit } } }, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f906bb85d71c1540e48fd894134428920b\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } }} id 3" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.950133", component: "849", peer_component: "BaseSipClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "345", function_name: "function:generalReceiveSip", message: " Message with id 3 was extracted from the queue of sipClientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.950155", component: "849", peer_component: "BaseSipClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "346", function_name: "function:generalReceiveSip", message: " Stop timer timerWaitForSipMessage: 15 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:28.950857", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on sipInternalPort to mtc @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspRequest := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, request := { requestLine := { method := REGISTER_E (11), requestUri := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := { fieldName := AUTHORIZATION_E (11), body := { digestResponse := { { id := \"realm\", paramValue := \"\\\"ericsson.se\\\"\" }, { id := \"username\", paramValue := \"\\\"10014002006@ericsson.se\\\"\" }, { id := \"uri\", paramValue := \"\\\"sip:ericsson.se\\\"\" }, { id := \"nonce\", paramValue := \"\\\"68802944664224158604006517243880\\\"\" }, { id := \"nc\", paramValue := \"00000001\" }, { id := \"cnonce\", paramValue := \"\\\"a2cf7676bda40995134c471c88c57112\\\"\" }, { id := \"qop\", paramValue := \"auth\" }, { id := \"response\", paramValue := \"\\\"54b302deb6b02ae75c946cf2edc27653\\\"\" }, { id := \"algorithm\", paramValue := \"MD5\" } } } }, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_4_1575518397039837327\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"8cf72980-08e3-4819-943d-f7260f67318d\" }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.telephony\", paramValue := \"\\\"cs\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit }, { id := \"sip.ice\", paramValue := \"true\" }, { id := \"q\", paramValue := \"0.5\" } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 2, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := { fieldName := EXPIRES_E (24), deltaSec := \"600000\" }, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494sa-5\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := { fieldName := REQUIRE_E (80), optionsTags := { \"pref\" } }, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := { fieldName := ROUTE_E (84), routeBody := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"lr\", paramValue := omit }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } }, rrParam := omit } } }, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f906bb85d71c1540e48fd894134428920b\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.951040", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "74", function_name: "function:sipRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:28.951215", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on sipInternalPort[0] from 849 @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspRequest := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, request := { requestLine := { method := REGISTER_E (11), requestUri := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := { fieldName := AUTHORIZATION_E (11), body := { digestResponse := { { id := \"realm\", paramValue := \"\\\"ericsson.se\\\"\" }, { id := \"username\", paramValue := \"\\\"10014002006@ericsson.se\\\"\" }, { id := \"uri\", paramValue := \"\\\"sip:ericsson.se\\\"\" }, { id := \"nonce\", paramValue := \"\\\"68802944664224158604006517243880\\\"\" }, { id := \"nc\", paramValue := \"00000001\" }, { id := \"cnonce\", paramValue := \"\\\"a2cf7676bda40995134c471c88c57112\\\"\" }, { id := \"qop\", paramValue := \"auth\" }, { id := \"response\", paramValue := \"\\\"54b302deb6b02ae75c946cf2edc27653\\\"\" }, { id := \"algorithm\", paramValue := \"MD5\" } } } }, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_4_1575518397039837327\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"8cf72980-08e3-4819-943d-f7260f67318d\" }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.telephony\", paramValue := \"\\\"cs\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit }, { id := \"sip.ice\", paramValue := \"true\" }, { id := \"q\", paramValue := \"0.5\" } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 2, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := { fieldName := EXPIRES_E (24), deltaSec := \"600000\" }, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494sa-5\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := { fieldName := REQUIRE_E (80), optionsTags := { \"pref\" } }, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := { fieldName := ROUTE_E (84), routeBody := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"lr\", paramValue := omit }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } }, rrParam := omit } } }, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f906bb85d71c1540e48fd894134428920b\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 5" }
Structured  DataFrame { time: "2014/Oct/24 18:34:28.951443", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port sipInternalPort[0] succeeded, message from 849: @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspRequest := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, request := { requestLine := { method := REGISTER_E (11), requestUri := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := { fieldName := AUTHORIZATION_E (11), body := { digestResponse := { { id := \"realm\", paramValue := \"\\\"ericsson.se\\\"\" }, { id := \"username\", paramValue := \"\\\"10014002006@ericsson.se\\\"\" }, { id := \"uri\", paramValue := \"\\\"sip:ericsson.se\\\"\" }, { id := \"nonce\", paramValue := \"\\\"68802944664224158604006517243880\\\"\" }, { id := \"nc\", paramValue := \"00000001\" }, { id := \"cnonce\", paramValue := \"\\\"a2cf7676bda40995134c471c88c57112\\\"\" }, { id := \"qop\", paramValue := \"auth\" }, { id := \"response\", paramValue := \"\\\"54b302deb6b02ae75c946cf2edc27653\\\"\" }, { id := \"algorithm\", paramValue := \"MD5\" } } } }, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_4_1575518397039837327\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"8cf72980-08e3-4819-943d-f7260f67318d\" }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.telephony\", paramValue := \"\\\"cs\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit }, { id := \"sip.ice\", paramValue := \"true\" }, { id := \"q\", paramValue := \"0.5\" } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 2, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := { fieldName := EXPIRES_E (24), deltaSec := \"600000\" }, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494sa-5\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := { fieldName := REQUIRE_E (80), optionsTags := { \"pref\" } }, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := { fieldName := ROUTE_E (84), routeBody := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"lr\", paramValue := omit }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } }, rrParam := omit } } }, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f906bb85d71c1540e48fd894134428920b\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 5" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.951532", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Message with id 5 was extracted from the queue of sipInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.951553", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "255", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.955188", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.966980", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "286", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:28.967378", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on sipInternalPort[0] to 849 @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMMAND_SIP_SEND_SIP_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"1\" }, { parameterName := \"SUBSCRIBER\", parameterValue := \"11\" } } }, aspsSip := { { aspResponse := { addr := { remote_host := \"142.133.142.3\", remote_port := 5060, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 200, reasonPhrase := \"OK\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := { fieldName := AUTHENTICATION_INFO_E (10), ainfo := { { id := \"qop\", paramValue := \"\\\"auth\\\"\" }, { id := \"rspauth\", paramValue := \"\\\"4e0afd3006175776f901e66eaea9c15a\\\"\" }, { id := \"cnonce\", paramValue := \"\\\"68802944664224158604006517243880\\\"\" }, { id := \"nc\", paramValue := \"\\\"1\\\"\" } } }, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_4_1575518397039837327\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"8cf72980-08e3-4819-943d-f7260f67318d\" }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.telephony\", paramValue := \"\\\"cs\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit }, { id := \"sip.ice\", paramValue := \"true\" }, { id := \"q\", paramValue := \"0.5\" }, { id := \"expires\", paramValue := \"600000\" } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 2, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494sa-5\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := { fieldName := P_ASSOCIATED_URI (44), p_assoc_uris := { { p_asso_uri := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } }, ai_params := omit }, { p_asso_uri := { displayName := omit, addrSpec := { scheme := \"tel\", userInfo := { userOrTelephoneSubscriber := \"+10014002006\", password := omit }, hostPort := { host := omit, portField := omit }, urlParameters := omit, headers := omit } }, ai_params := omit } } }, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"08671160745834373805448460311457742797\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f906bb85d71c1540e48fd894134428920b\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.967634", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:28.967842", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on sipInternalPort from mtc @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMMAND_SIP_SEND_SIP_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"1\" }, { parameterName := \"SUBSCRIBER\", parameterValue := \"11\" } } }, aspsSip := { { aspResponse := { addr := { remote_host := \"142.133.142.3\", remote_port := 5060, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 200, reasonPhrase := \"OK\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := { fieldName := AUTHENTICATION_INFO_E (10), ainfo := { { id := \"qop\", paramValue := \"\\\"auth\\\"\" }, { id := \"rspauth\", paramValue := \"\\\"4e0afd3006175776f901e66eaea9c15a\\\"\" }, { id := \"cnonce\", paramValue := \"\\\"68802944664224158604006517243880\\\"\" }, { id := \"nc\", paramValue := \"\\\"1\\\"\" } } }, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_4_1575518397039837327\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"8cf72980-08e3-4819-943d-f7260f67318d\" }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.telephony\", paramValue := \"\\\"cs\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit }, { id := \"sip.ice\", paramValue := \"true\" }, { id := \"q\", paramValue := \"0.5\" }, { id := \"expires\", paramValue := \"600000\" } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 2, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494sa-5\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := { fieldName := P_ASSOCIATED_URI (44), p_assoc_uris := { { p_asso_uri := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } }, ai_params := omit }, { p_asso_uri := { displayName := omit, addrSpec := { scheme := \"tel\", userInfo := { userOrTelephoneSubscriber := \"+10014002006\", password := omit }, hostPort := { host := omit, portField := omit }, urlParameters := omit, headers := omit } }, ai_params := omit } } }, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"08671160745834373805448460311457742797\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f906bb85d71c1540e48fd894134428920b\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 5" }
Structured  DataFrame { time: "2014/Oct/24 18:34:28.968150", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port sipInternalPort succeeded, message from mtc: @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMMAND_SIP_SEND_SIP_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"1\" }, { parameterName := \"SUBSCRIBER\", parameterValue := \"11\" } } }, aspsSip := { { aspResponse := { addr := { remote_host := \"142.133.142.3\", remote_port := 5060, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 200, reasonPhrase := \"OK\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := { fieldName := AUTHENTICATION_INFO_E (10), ainfo := { { id := \"qop\", paramValue := \"\\\"auth\\\"\" }, { id := \"rspauth\", paramValue := \"\\\"4e0afd3006175776f901e66eaea9c15a\\\"\" }, { id := \"cnonce\", paramValue := \"\\\"68802944664224158604006517243880\\\"\" }, { id := \"nc\", paramValue := \"\\\"1\\\"\" } } }, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_4_1575518397039837327\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"8cf72980-08e3-4819-943d-f7260f67318d\" }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.telephony\", paramValue := \"\\\"cs\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit }, { id := \"sip.ice\", paramValue := \"true\" }, { id := \"q\", paramValue := \"0.5\" }, { id := \"expires\", paramValue := \"600000\" } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 2, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494sa-5\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := { fieldName := P_ASSOCIATED_URI (44), p_assoc_uris := { { p_asso_uri := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } }, ai_params := omit }, { p_asso_uri := { displayName := omit, addrSpec := { scheme := \"tel\", userInfo := { userOrTelephoneSubscriber := \"+10014002006\", password := omit }, hostPort := { host := omit, portField := omit }, urlParameters := omit, headers := omit } }, ai_params := omit } } }, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"08671160745834373805448460311457742797\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f906bb85d71c1540e48fd894134428920b\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 5" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.968254", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Message with id 5 was extracted from the queue of sipInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.968276", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "80", function_name: "function:sipRun", message: " Stop timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:28.968957", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on sipClientPort to system @IPL4_demo_types.SIP_SendTo : { connId := 3, remName := \"142.133.142.3\", remPort := 5060, proto := { tcp := { } }, msg := { raw := \"SIP/2.0 200 OK\\r\\nAuthentication-Info:qop=\\\"auth\\\", rspauth=\\\"4e0afd3006175776f901e66eaea9c15a\\\", cnonce=\\\"68802944664224158604006517243880\\\", nc=\\\"1\\\"\\r\\nCall-ID:142.133.142.3_4_1575518397039837327\\r\\nContact:<sip:10014002006@142.133.142.3:5060;csid=8cf72980-08e3-4819-943d-f7260f67318d;transport=TCP>;+g.gsma.rcs.ipcall;+g.3gpp.icsi-ref=\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\";+g.oma.sip-im;+g.gsma.rcs.telephony=\\\"cs\\\";+g.3gpp.cs-voice;+g.3gpp.iari-ref=\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\";video;sip.ice=true;q=0.5;expires=600000\\r\\nContent-Length:0\\r\\nCSeq:2 REGISTER\\r\\nFrom:<sip:10014002006@ericsson.se>;tag=i1o494sa-5\\r\\nP-Associated-URI:<sip:10014002006@ericsson.se>\\r\\nP-Associated-URI:<tel:+10014002006>\\r\\nTo:<sip:10014002006@ericsson.se>;tag=08671160745834373805448460311457742797\\r\\nVia:SIP/2.0/TCP 142.133.142.3:5060;branch=z9hG4bKf1f906bb85d71c1540e48fd894134428920b\\r\\n\\r\\n\" }}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:28.969129", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Outgoing message was mapped to @IPL4asp_Types.ASP_SendTo : { connId := 3, remName := \"142.133.142.3\", remPort := 5060, proto := { tcp := { } }, msgr\\nAuthentication-Info:qop=\\\"auth\\\", rspauth=\\\"4e0afd3006175776f901e66eaea9c15a\\\", cnonce=\\\"68802944664224158604006517243880\\\", nc=\\\"1\\\"\\r\\nCall-ID:142.133.142.3_4_1575518397039837327\\r\\nContact:<sip:10014002006@142.133.142.3:5060;csid=8cf72980-08e3-4819-943d-f7260f67318d;transport=TCP>;+g.gsma.rcs.ipcall;+g.3gpp.icsi-ref=\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\";+g.oma.sip-im;+g.gsma.rcs.telephony=\\\"cs\\\";+g.3gpp.cs-voice;+g.3gpp.iari-ref=\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\";video;sip.ice=true;q=0.5;expires=600000\\r\\nContent-Length:0\\r\\nCSeq:2 REGISTER\\r\\nFrom:<sip:10014002006@ericsson.se>;tag=i1o494sa-5\\r\\nP-Associated-URI:<sip:10014002006@ericsson.se>\\r\\nP-Associated-URI:<tel:+10014002006>\\r\\nTo:<sip:10014002006@ericsson.se>;tag=08671160745834373805448460311457742797\\r\\nVia:SIP/2.0/TCP 142.133.142.3:5060;branch=z9hG4bKf1f906bb85d71c1540e48fd894134428920b\\r\\n\\r\\n\")}" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.969325", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "388", function_name: "function:processCommand", message: " Sent on sipInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.969399", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "74", function_name: "function:sipRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.969439", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "253", function_name: "function:receiveInternalMessage", message: " Message enqueued on sipInternalPort[0] from 849 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.969489", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Receive operation on port sipInternalPort[0] succeeded, message from 849: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.969512", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Message with id 6 was extracted from the queue of sipInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.969530", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "255", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:28.969841", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.006870", component: "853", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on clientPort from system @HTTPmsg_Types.HTTPMessage : { response := { client_id := 9, version_major := 1, version_minor := 1, statuscode := 201, statustext := \"Created\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Location\", header_value := \"http://142.133.142.3:8080/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:28 GMT\" } }, body := \"{\\n \\\"resourceURL\\\": \\\"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d\\\",\\n \\\"serviceCapability\\\": [ {\\n \\\"capabilityId\\\": \\\"ip_voice_call\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"ip_video_call\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"im_chat\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"video_share\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"+custom-valid-feature\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"im_standalone\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"ab\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"file_transfer\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"cs\\\"\\n } ]\\n}\" }} id 2" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.007083", component: "853", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port clientPort succeeded, message from system(): @HTTPmsg_Types.HTTPMessage : { response := { client_id := 9, version_major := 1, version_minor := 1, statuscode := 201, statustext := \"Created\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Location\", header_value := \"http://142.133.142.3:8080/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:28 GMT\" } }, body := \"{\\n \\\"resourceURL\\\": \\\"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d\\\",\\n \\\"serviceCapability\\\": [ {\\n \\\"capabilityId\\\": \\\"ip_voice_call\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"ip_video_call\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"im_chat\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"video_share\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"+custom-valid-feature\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"im_standalone\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"ab\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"file_transfer\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"cs\\\"\\n } ]\\n}\" }} id 2" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.007125", component: "853", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "193", function_name: "function:receiveAnyHTTPClientResponse", message: " Message with id 2 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.007148", component: "853", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "194", function_name: "function:receiveAnyHTTPClientResponse", message: " Stop timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.007403", component: "853", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort to mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\n \\\"resourceURL\\\": \\\"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d\\\",\\n \\\"serviceCapability\\\": [ {\\n \\\"capabilityId\\\": \\\"ip_voice_call\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"ip_video_call\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"im_chat\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"video_share\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"+custom-valid-feature\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"im_standalone\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"ab\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"file_transfer\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"cs\\\"\\n } ]\\n}\", contentType := \"\", statusCode := \"201\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Location\", header_value := \"http://142.133.142.3:8080/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:28 GMT\" } } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.007531", component: "853", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "62", function_name: "function:httpNodeRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.007661", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort[2] from 853 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\n \\\"resourceURL\\\": \\\"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d\\\",\\n \\\"serviceCapability\\\": [ {\\n \\\"capabilityId\\\": \\\"ip_voice_call\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"ip_video_call\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"im_chat\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"video_share\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"+custom-valid-feature\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"im_standalone\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"ab\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"file_transfer\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"cs\\\"\\n } ]\\n}\", contentType := \"\", statusCode := \"201\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Location\", header_value := \"http://142.133.142.3:8080/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:28 GMT\" } } } } }} id 2" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.007800", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort[2] succeeded, message from 853: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\n \\\"resourceURL\\\": \\\"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d\\\",\\n \\\"serviceCapability\\\": [ {\\n \\\"capabilityId\\\": \\\"ip_voice_call\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"ip_video_call\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"im_chat\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"video_share\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"+custom-valid-feature\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"im_standalone\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"ab\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"file_transfer\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"cs\\\"\\n } ]\\n}\", contentType := \"\", statusCode := \"201\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Location\", header_value := \"http://142.133.142.3:8080/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:28 GMT\" } } } } }} id 2" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.007846", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Message with id 2 was extracted from the queue of httpNodeInternalPort[2]" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.007866", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "241", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.010814", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 10 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.010872", component: "854", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port clientPort was started." }
Simple DataFrame { time: "2014/Oct/24 18:34:29.010930", component: "854", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port serverPort was started." }
Simple DataFrame { time: "2014/Oct/24 18:34:29.010957", component: "854", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port httpNodeInternalPort was started." }
Simple DataFrame { time: "2014/Oct/24 18:34:29.012581", component: "854", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "130", function_name: "function:httpNodeInitialize", message: " Port clientPort was mapped to system:clientPort[3]" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.012999", component: "854", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "133", function_name: "function:httpNodeInitialize", message: " Port serverPort was mapped to system:serverPort[3]" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.013402", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port httpNodeInternalPort[3] is waiting for connection from 854:httpNodeInternalPort on UNIX pathname /tmp/ttcn3-portconn-2c0b9a2a." }
Simple DataFrame { time: "2014/Oct/24 18:34:29.013537", component: "854", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "136", function_name: "function:httpNodeInitialize", message: " Port httpNodeInternalPort has established the connection with mtc:httpNodeInternalPort[3] using transport type UNIX" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.013593", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "239", function_name: "function:receiveInternalMessage", message: " Port httpNodeInternalPort[3] has accepted the connection from 854:httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.013886", component: "854", peer_component: "BaseHttpServerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "55", function_name: "function:openServerForListening", message: " Sent on serverPort to system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.014076", component: "854", peer_component: "BaseHttpServerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "55", function_name: "function:openServerForListening", message: " Message enqueued on serverPort from system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.014120", component: "854", peer_component: "BaseHttpServerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "73", function_name: "function:receiveHTTPServerListenResult", message: " Start timer timerWaitForHTTPRequest: 5 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.014168", component: "854", peer_component: "BaseHttpServerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "77", function_name: "function:receiveHTTPServerListenResult", message: " Receive operation on port serverPort succeeded, message from system(" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.014226", component: "854", peer_component: "BaseHttpServerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "77", function_name: "function:receiveHTTPServerListenResult", message: " Message with id 1 was extracted from the queue of serverPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.014249", component: "854", peer_component: "BaseHttpServerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "78", function_name: "function:receiveHTTPServerListenResult", message: " Stop timer timerWaitForHTTPRequest: 5 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.014345", component: "854", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "141", function_name: "function:httpNodeInitialize", message: " Sent on httpNodeInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.014444", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "239", function_name: "function:receiveInternalMessage", message: " Message enqueued on httpNodeInternalPort[3] from 854 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.014461", component: "854", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "62", function_name: "function:httpNodeRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.014491", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Receive operation on port httpNodeInternalPort[3] succeeded, message from 854: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.014516", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Message with id 1 was extracted from the queue of httpNodeInternalPort[3]" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.014534", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "241", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 10 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.014669", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.026976", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "267", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.027217", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort[3] to 854 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"1\" } } }, aspHttp := { { httpMessage := { method := \"POST\", url := \"/14A/v3/register\", body := \"{ \\\"username\\\": \\\"10014002007@ericsson.se\\\", \\\"password\\\": \\\"10014002007\\\", \\\"mediaType\\\": \\\"rtp\\\", \\\"services\\\": [ \\\"im_chat\\\", \\\"file_transfer\\\", \\\"video_share\\\", \\\"ip_voice_call\\\", \\\"ip_video_call\\\", \\\"im_standalone\\\", \\\"cs\\\", \\\"ab\\\", \\\"+custom-valid-feature\\\", \\\"custom-invalid-feature\\\"] } \", contentType := \"application/json\", statusCode := \"\", header := { } } } }}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.027403", component: "854", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort from mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"1\" } } }, aspHttp := { { httpMessage := { method := \"POST\", url := \"/14A/v3/register\", body := \"{ \\\"username\\\": \\\"10014002007@ericsson.se\\\", \\\"password\\\": \\\"10014002007\\\", \\\"mediaType\\\": \\\"rtp\\\", \\\"services\\\": [ \\\"im_chat\\\", \\\"file_transfer\\\", \\\"video_share\\\", \\\"ip_voice_call\\\", \\\"ip_video_call\\\", \\\"im_standalone\\\", \\\"cs\\\", \\\"ab\\\", \\\"+custom-valid-feature\\\", \\\"custom-invalid-feature\\\"] } \", contentType := \"application/json\", statusCode := \"\", header := { } } } }} id 1" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.027506", component: "854", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort succeeded, message from mtc: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"1\" } } }, aspHttp := { { httpMessage := { method := \"POST\", url := \"/14A/v3/register\", body := \"{ \\\"username\\\": \\\"10014002007@ericsson.se\\\", \\\"password\\\": \\\"10014002007\\\", \\\"mediaType\\\": \\\"rtp\\\", \\\"services\\\": [ \\\"im_chat\\\", \\\"file_transfer\\\", \\\"video_share\\\", \\\"ip_voice_call\\\", \\\"ip_video_call\\\", \\\"im_standalone\\\", \\\"cs\\\", \\\"ab\\\", \\\"+custom-valid-feature\\\", \\\"custom-invalid-feature\\\"] } \", contentType := \"application/json\", statusCode := \"\", header := { } } } }} id 1" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.027562", component: "854", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "67", function_name: "function:httpNodeRun", message: " Message with id 1 was extracted from the queue of httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.027585", component: "854", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "68", function_name: "function:httpNodeRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.027851", component: "854", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "307", function_name: "function:clearHTTPClientPort", message: " Start timer timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.027896", component: "854", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "313", function_name: "function:clearHTTPClientPort", message: " Timeout timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.027992", component: "854", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Sent on clientPort to system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.028030", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.028842", component: "854", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Message enqueued on clientPort from system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.028904", component: "854", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "243", function_name: "function:sendHTTPClientRequest", message: " Start timer timerWaitForHTTPOpenConnection: 2 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.028959", component: "854", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Receive operation on port clientPort succeeded, message from system(" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.028997", component: "854", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Message with id 1 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.029059", component: "854", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "246", function_name: "function:sendHTTPClientRequest", message: " Stop timer timerWaitForHTTPOpenConnection: 2 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.029219", component: "854", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on clientPort to system @HTTPmsg_Types.HTTPMessage : { request := { client_id := 9, method := \"POST\", uri := \"/14A/v3/register\", version_major := 1, version_minor := 1, header := { { header_name := \"Host\", header_value := \"142.133.142.3\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Content-Length\", header_value := \"261\" } }, body := \"{ \\\"username\\\": \\\"10014002007@ericsson.se\\\", \\\"password\\\": \\\"10014002007\\\", \\\"mediaType\\\": \\\"rtp\\\", \\\"services\\\": [ \\\"im_chat\\\", \\\"file_transfer\\\", \\\"video_share\\\", \\\"ip_voice_call\\\", \\\"ip_video_call\\\", \\\"im_standalone\\\", \\\"cs\\\", \\\"ab\\\", \\\"+custom-valid-feature\\\", \\\"custom-invalid-feature\\\"] } \" }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.029417", component: "854", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "189", function_name: "function:receiveAnyHTTPClientResponse", message: " Start timer timerWaitForHTTPResponse: 60 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.038994", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "286", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.039075", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "202", function_name: "function:sendInternalMessage", message: " Sent on sipInternalPort[0] to 849 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.039221", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "78", function_name: "function:sipRun", message: " Message enqueued on sipInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.039274", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.039339", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Receive operation on port sipInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.039371", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Message with id 6 was extracted from the queue of sipInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.039391", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "80", function_name: "function:sipRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.039535", component: "849", peer_component: "BaseSipClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "320", function_name: "function:generalReceiveSip", message: " Start timer timerWaitForSipMessage: 15 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.096594", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on sipClientPort from system @IPL4asp_Types.ASP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msgsip:ericsson.se SIP/2.0\\r\\nMax-Forwards: 69\\r\\nAuthorization: Digest realm=\\\"ericsson.se\\\",username=\\\"10014002007@ericsson.se\\\",uri=\\\"sip:ericsson.se\\\",nonce=\\\"\\\",response=\\\"\\\"\\r\\nRequire: pref\\r\\nContent-Length: 0\\r\\nTo: <sip:10014002007@ericsson.se>\\r\\nExpires: 600000\\r\\nContact: <sip:10014002007@142.133.142.3:5060;csid=2838ab5a-e194-4923-81af-c9f0a544f667;transport=TCP>;+g.gsma.rcs.ipcall;+g.3gpp.icsi-ref=\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\";+g.oma.sip-im;+g.gsma.rcs.telephony=\\\"cs\\\";+g.3gpp.cs-voice;+g.3gpp.iari-ref=\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\";video;sip.ice=true;q=0.5\\r\\nCseq: 1 REGISTER\\r\\nVia: SIP/2.0/TCP 142.133.142.3:5060;branch=z9hG4bKf1f9dd58fb767a484b748cf437b309c4ea77\\r\\nUser-Agent: H2S\\r\\nRoute: <sip:142.133.150.169:26720;lr;transport=TCP>\\r\\nCall-Id: 142.133.142.3_5_8407814859008826027\\r\\nFrom: <sip:10014002007@ericsson.se>;tag=i1o494y8-6\\r\\n\\r\\n\")} id 4" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.097417", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Incoming message was mapped to @IPL4_demo_types.SIP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msg := { request := { requestLine := { method := REGISTER_E (11), requestUri := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := { fieldName := AUTHORIZATION_E (11), body := { digestResponse := { { id := \"realm\", paramValue := \"\\\"ericsson.se\\\"\" }, { id := \"username\", paramValue := \"\\\"10014002007@ericsson.se\\\"\" }, { id := \"uri\", paramValue := \"\\\"sip:ericsson.se\\\"\" }, { id := \"nonce\", paramValue := \"\\\"\\\"\" }, { id := \"response\", paramValue := \"\\\"\\\"\" } } } }, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_5_8407814859008826027\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.telephony\", paramValue := \"\\\"cs\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit }, { id := \"sip.ice\", paramValue := \"true\" }, { id := \"q\", paramValue := \"0.5\" } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := { fieldName := EXPIRES_E (24), deltaSec := \"600000\" }, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494y8-6\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := { fieldName := REQUIRE_E (80), optionsTags := { \"pref\" } }, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := { fieldName := ROUTE_E (84), routeBody := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"lr\", paramValue := omit }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } }, rrParam := omit } } }, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f9dd58fb767a484b748cf437b309c4ea77\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } }} id 4" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.097770", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port sipClientPort succeeded, message from system(): @IPL4_demo_types.SIP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msg := { request := { requestLine := { method := REGISTER_E (11), requestUri := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := { fieldName := AUTHORIZATION_E (11), body := { digestResponse := { { id := \"realm\", paramValue := \"\\\"ericsson.se\\\"\" }, { id := \"username\", paramValue := \"\\\"10014002007@ericsson.se\\\"\" }, { id := \"uri\", paramValue := \"\\\"sip:ericsson.se\\\"\" }, { id := \"nonce\", paramValue := \"\\\"\\\"\" }, { id := \"response\", paramValue := \"\\\"\\\"\" } } } }, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_5_8407814859008826027\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.telephony\", paramValue := \"\\\"cs\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit }, { id := \"sip.ice\", paramValue := \"true\" }, { id := \"q\", paramValue := \"0.5\" } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := { fieldName := EXPIRES_E (24), deltaSec := \"600000\" }, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494y8-6\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := { fieldName := REQUIRE_E (80), optionsTags := { \"pref\" } }, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := { fieldName := ROUTE_E (84), routeBody := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"lr\", paramValue := omit }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } }, rrParam := omit } } }, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f9dd58fb767a484b748cf437b309c4ea77\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } }} id 4" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.097898", component: "849", peer_component: "BaseSipClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "345", function_name: "function:generalReceiveSip", message: " Message with id 4 was extracted from the queue of sipClientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.097973", component: "849", peer_component: "BaseSipClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "346", function_name: "function:generalReceiveSip", message: " Stop timer timerWaitForSipMessage: 15 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.099071", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on sipInternalPort to mtc @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspRequest := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, request := { requestLine := { method := REGISTER_E (11), requestUri := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := { fieldName := AUTHORIZATION_E (11), body := { digestResponse := { { id := \"realm\", paramValue := \"\\\"ericsson.se\\\"\" }, { id := \"username\", paramValue := \"\\\"10014002007@ericsson.se\\\"\" }, { id := \"uri\", paramValue := \"\\\"sip:ericsson.se\\\"\" }, { id := \"nonce\", paramValue := \"\\\"\\\"\" }, { id := \"response\", paramValue := \"\\\"\\\"\" } } } }, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_5_8407814859008826027\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.telephony\", paramValue := \"\\\"cs\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit }, { id := \"sip.ice\", paramValue := \"true\" }, { id := \"q\", paramValue := \"0.5\" } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := { fieldName := EXPIRES_E (24), deltaSec := \"600000\" }, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494y8-6\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := { fieldName := REQUIRE_E (80), optionsTags := { \"pref\" } }, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := { fieldName := ROUTE_E (84), routeBody := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"lr\", paramValue := omit }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } }, rrParam := omit } } }, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f9dd58fb767a484b748cf437b309c4ea77\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.099368", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "74", function_name: "function:sipRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.099602", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on sipInternalPort[0] from 849 @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspRequest := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, request := { requestLine := { method := REGISTER_E (11), requestUri := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := { fieldName := AUTHORIZATION_E (11), body := { digestResponse := { { id := \"realm\", paramValue := \"\\\"ericsson.se\\\"\" }, { id := \"username\", paramValue := \"\\\"10014002007@ericsson.se\\\"\" }, { id := \"uri\", paramValue := \"\\\"sip:ericsson.se\\\"\" }, { id := \"nonce\", paramValue := \"\\\"\\\"\" }, { id := \"response\", paramValue := \"\\\"\\\"\" } } } }, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_5_8407814859008826027\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.telephony\", paramValue := \"\\\"cs\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit }, { id := \"sip.ice\", paramValue := \"true\" }, { id := \"q\", paramValue := \"0.5\" } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := { fieldName := EXPIRES_E (24), deltaSec := \"600000\" }, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494y8-6\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := { fieldName := REQUIRE_E (80), optionsTags := { \"pref\" } }, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := { fieldName := ROUTE_E (84), routeBody := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"lr\", paramValue := omit }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } }, rrParam := omit } } }, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f9dd58fb767a484b748cf437b309c4ea77\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 7" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.099888", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port sipInternalPort[0] succeeded, message from 849: @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspRequest := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, request := { requestLine := { method := REGISTER_E (11), requestUri := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := { fieldName := AUTHORIZATION_E (11), body := { digestResponse := { { id := \"realm\", paramValue := \"\\\"ericsson.se\\\"\" }, { id := \"username\", paramValue := \"\\\"10014002007@ericsson.se\\\"\" }, { id := \"uri\", paramValue := \"\\\"sip:ericsson.se\\\"\" }, { id := \"nonce\", paramValue := \"\\\"\\\"\" }, { id := \"response\", paramValue := \"\\\"\\\"\" } } } }, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_5_8407814859008826027\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.telephony\", paramValue := \"\\\"cs\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit }, { id := \"sip.ice\", paramValue := \"true\" }, { id := \"q\", paramValue := \"0.5\" } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := { fieldName := EXPIRES_E (24), deltaSec := \"600000\" }, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494y8-6\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := { fieldName := REQUIRE_E (80), optionsTags := { \"pref\" } }, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := { fieldName := ROUTE_E (84), routeBody := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"lr\", paramValue := omit }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } }, rrParam := omit } } }, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f9dd58fb767a484b748cf437b309c4ea77\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 7" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.099991", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Message with id 7 was extracted from the queue of sipInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.100014", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "255", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.103663", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.114984", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "286", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.115397", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on sipInternalPort[0] to 849 @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMMAND_SIP_SEND_SIP_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"1\" }, { parameterName := \"SUBSCRIBER\", parameterValue := \"11\" } } }, aspsSip := { { aspResponse := { addr := { remote_host := \"142.133.142.3\", remote_port := 5060, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 401, reasonPhrase := \"Unauthorized\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_5_8407814859008826027\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494y8-6\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"95895930974090965564099965574965732662\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f9dd58fb767a484b748cf437b309c4ea77\" } } } } }, warning := omit, wwwAuthenticate := { fieldName := WWW_AUTHENTICATE_E (104), challenge := { { digestCln := { { id := \"nonce\", paramValue := \"\\\"86738058454623966345207209727360\\\"\" }, { id := \"realm\", paramValue := \"\\\"ericsson.se\\\"\" }, { id := \"stale\", paramValue := \"false\" }, { id := \"algorithm\", paramValue := \"MD5\" }, { id := \"qop\", paramValue := \"\\\"auth\\\"\" } } } } }, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.115667", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.115864", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on sipInternalPort from mtc @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMMAND_SIP_SEND_SIP_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"1\" }, { parameterName := \"SUBSCRIBER\", parameterValue := \"11\" } } }, aspsSip := { { aspResponse := { addr := { remote_host := \"142.133.142.3\", remote_port := 5060, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 401, reasonPhrase := \"Unauthorized\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_5_8407814859008826027\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494y8-6\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"95895930974090965564099965574965732662\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f9dd58fb767a484b748cf437b309c4ea77\" } } } } }, warning := omit, wwwAuthenticate := { fieldName := WWW_AUTHENTICATE_E (104), challenge := { { digestCln := { { id := \"nonce\", paramValue := \"\\\"86738058454623966345207209727360\\\"\" }, { id := \"realm\", paramValue := \"\\\"ericsson.se\\\"\" }, { id := \"stale\", paramValue := \"false\" }, { id := \"algorithm\", paramValue := \"MD5\" }, { id := \"qop\", paramValue := \"\\\"auth\\\"\" } } } } }, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 7" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.116097", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port sipInternalPort succeeded, message from mtc: @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMMAND_SIP_SEND_SIP_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"1\" }, { parameterName := \"SUBSCRIBER\", parameterValue := \"11\" } } }, aspsSip := { { aspResponse := { addr := { remote_host := \"142.133.142.3\", remote_port := 5060, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 401, reasonPhrase := \"Unauthorized\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_5_8407814859008826027\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494y8-6\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"95895930974090965564099965574965732662\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f9dd58fb767a484b748cf437b309c4ea77\" } } } } }, warning := omit, wwwAuthenticate := { fieldName := WWW_AUTHENTICATE_E (104), challenge := { { digestCln := { { id := \"nonce\", paramValue := \"\\\"86738058454623966345207209727360\\\"\" }, { id := \"realm\", paramValue := \"\\\"ericsson.se\\\"\" }, { id := \"stale\", paramValue := \"false\" }, { id := \"algorithm\", paramValue := \"MD5\" }, { id := \"qop\", paramValue := \"\\\"auth\\\"\" } } } } }, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 7" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.116204", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Message with id 7 was extracted from the queue of sipInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.116229", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "80", function_name: "function:sipRun", message: " Stop timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.116788", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on sipClientPort to system @IPL4_demo_types.SIP_SendTo : { connId := 3, remName := \"142.133.142.3\", remPort := 5060, proto := { tcp := { } }, msg := { raw := \"SIP/2.0 401 Unauthorized\\r\\nCall-ID:142.133.142.3_5_8407814859008826027\\r\\nContent-Length:0\\r\\nCSeq:1 REGISTER\\r\\nFrom:<sip:10014002007@ericsson.se>;tag=i1o494y8-6\\r\\nTo:<sip:10014002007@ericsson.se>;tag=95895930974090965564099965574965732662\\r\\nVia:SIP/2.0/TCP 142.133.142.3:5060;branch=z9hG4bKf1f9dd58fb767a484b748cf437b309c4ea77\\r\\nWWW-Authenticate:Digest nonce=\\\"86738058454623966345207209727360\\\", realm=\\\"ericsson.se\\\", stale=false, algorithm=MD5, qop=\\\"auth\\\"\\r\\n\\r\\n\" }}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.116916", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Outgoing message was mapped to @IPL4asp_Types.ASP_SendTo : { connId := 3, remName := \"142.133.142.3\", remPort := 5060, proto := { tcp := { } }, msg := '5349502F322E302034303120556E617574686F72697A65640D0A43616C6C2D49443A3134322E3133332E3134322E335F355F383430373831343835393030383832363032370D0A436F6E74656E742D4C656E6774683A300D0A435365713A312052454749535445520D0A46726F6D3A3C7369703A3130303134303032303037406572696373736F6E2E73653E3B7461673D69316F34393479382D360D0A546F3A3C7369703A3130303134303032303037406572696373736F6E2E73653E3B7461673D39353839353933303937343039303936353536343039393936353537343936353733323636320D0A5669613A5349502F322E302F544350203134322E3133332E3134322E333A353036303B6272616E63683D7A39684734624B6631663964643538666237363761343834623734386366343337623330396334656137370D0A5757572D41757468656E7469636174653A446967657374206E6F6E63653D223836373338303538343534363233393636333435323037323039373237333630222C207265616C6D3D226572696373736F6E2E7365222C207374616C653D66616C73652C20616C676F726974686D3D4D44352C20716F703D2261757468220D0A0D0A'O (\"SIP/2.0 401 Unauthorized\\r\\nCall-ID:142.133.142.3_5_8407814859008826027\\r\\nContent-Length:0\\r\\nCSeq:1 REGISTER\\r\\nFrom:<sip:10014002007@ericsson.se>;tag=i1o494y8-6\\r\\nTo:<sip:10014002007@ericsson.se>;tag=95895930974090965564099965574965732662\\r\\nVia:SIP/2.0/TCP 142.133.142.3:5060;branch=z9hG4bKf1f9dd58fb767a484b748cf437b309c4ea77\\r\\nWWW-Authenticate:Digest nonce=\\\"86738058454623966345207209727360\\\", realm=\\\"ericsson.se\\\", stale=false, algorithm=MD5, qop=\\\"auth\\\"\\r\\n\\r\\n\")}" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.117136", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "388", function_name: "function:processCommand", message: " Sent on sipInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.117222", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "74", function_name: "function:sipRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.117261", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "253", function_name: "function:receiveInternalMessage", message: " Message enqueued on sipInternalPort[0] from 849 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.117313", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Receive operation on port sipInternalPort[0] succeeded, message from 849: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.117338", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Message with id 8 was extracted from the queue of sipInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.117356", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "255", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.117945", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.129497", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "286", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.129577", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "202", function_name: "function:sendInternalMessage", message: " Sent on sipInternalPort[0] to 849 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.129712", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "78", function_name: "function:sipRun", message: " Message enqueued on sipInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.129751", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.129800", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Receive operation on port sipInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.129836", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Message with id 8 was extracted from the queue of sipInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.129859", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "80", function_name: "function:sipRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.130079", component: "849", peer_component: "BaseSipClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "320", function_name: "function:generalReceiveSip", message: " Start timer timerWaitForSipMessage: 15 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.150712", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on sipClientPort from system @IPL4asp_Types.ASP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msgsip:ericsson.se SIP/2.0\\r\\nMax-Forwards: 69\\r\\nAuthorization: Digest realm=\\\"ericsson.se\\\",username=\\\"10014002007@ericsson.se\\\",uri=\\\"sip:ericsson.se\\\",nonce=\\\"86738058454623966345207209727360\\\",nc=00000001,cnonce=\\\"1763f64a4f74d63c1e0984ab8147f39a\\\",qop=auth,response=\\\"f32b093f54cfcb329eb52f1a3b56e892\\\",algorithm=MD5\\r\\nRequire: pref\\r\\nContent-Length: 0\\r\\nTo: <sip:10014002007@ericsson.se>\\r\\nContact: <sip:10014002007@142.133.142.3:5060;csid=2838ab5a-e194-4923-81af-c9f0a544f667;transport=TCP>;+g.gsma.rcs.ipcall;+g.3gpp.icsi-ref=\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\";+g.oma.sip-im;+g.gsma.rcs.telephony=\\\"cs\\\";+g.3gpp.cs-voice;+g.3gpp.iari-ref=\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\";video;sip.ice=true;q=0.5\\r\\nExpires: 600000\\r\\nCseq: 2 REGISTER\\r\\nVia: SIP/2.0/TCP 142.133.142.3:5060;branch=z9hG4bKf1f96c6abec538b847368f21a7750c87fd12\\r\\nUser-Agent: H2S\\r\\nRoute: <sip:142.133.150.169:26720;lr;transport=TCP>\\r\\nFrom: <sip:10014002007@ericsson.se>;tag=i1o494y8-6\\r\\nCall-Id: 142.133.142.3_5_8407814859008826027\\r\\n\\r\\n\")} id 5" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.151412", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Incoming message was mapped to @IPL4_demo_types.SIP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msg := { request := { requestLine := { method := REGISTER_E (11), requestUri := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := { fieldName := AUTHORIZATION_E (11), body := { digestResponse := { { id := \"realm\", paramValue := \"\\\"ericsson.se\\\"\" }, { id := \"username\", paramValue := \"\\\"10014002007@ericsson.se\\\"\" }, { id := \"uri\", paramValue := \"\\\"sip:ericsson.se\\\"\" }, { id := \"nonce\", paramValue := \"\\\"86738058454623966345207209727360\\\"\" }, { id := \"nc\", paramValue := \"00000001\" }, { id := \"cnonce\", paramValue := \"\\\"1763f64a4f74d63c1e0984ab8147f39a\\\"\" }, { id := \"qop\", paramValue := \"auth\" }, { id := \"response\", paramValue := \"\\\"f32b093f54cfcb329eb52f1a3b56e892\\\"\" }, { id := \"algorithm\", paramValue := \"MD5\" } } } }, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_5_8407814859008826027\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.telephony\", paramValue := \"\\\"cs\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit }, { id := \"sip.ice\", paramValue := \"true\" }, { id := \"q\", paramValue := \"0.5\" } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 2, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := { fieldName := EXPIRES_E (24), deltaSec := \"600000\" }, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494y8-6\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := { fieldName := REQUIRE_E (80), optionsTags := { \"pref\" } }, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := { fieldName := ROUTE_E (84), routeBody := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"lr\", paramValue := omit }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } }, rrParam := omit } } }, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f96c6abec538b847368f21a7750c87fd12\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } }} id 5" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.151830", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port sipClientPort succeeded, message from system(): @IPL4_demo_types.SIP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msg := { request := { requestLine := { method := REGISTER_E (11), requestUri := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := { fieldName := AUTHORIZATION_E (11), body := { digestResponse := { { id := \"realm\", paramValue := \"\\\"ericsson.se\\\"\" }, { id := \"username\", paramValue := \"\\\"10014002007@ericsson.se\\\"\" }, { id := \"uri\", paramValue := \"\\\"sip:ericsson.se\\\"\" }, { id := \"nonce\", paramValue := \"\\\"86738058454623966345207209727360\\\"\" }, { id := \"nc\", paramValue := \"00000001\" }, { id := \"cnonce\", paramValue := \"\\\"1763f64a4f74d63c1e0984ab8147f39a\\\"\" }, { id := \"qop\", paramValue := \"auth\" }, { id := \"response\", paramValue := \"\\\"f32b093f54cfcb329eb52f1a3b56e892\\\"\" }, { id := \"algorithm\", paramValue := \"MD5\" } } } }, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_5_8407814859008826027\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.telephony\", paramValue := \"\\\"cs\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit }, { id := \"sip.ice\", paramValue := \"true\" }, { id := \"q\", paramValue := \"0.5\" } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 2, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := { fieldName := EXPIRES_E (24), deltaSec := \"600000\" }, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494y8-6\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := { fieldName := REQUIRE_E (80), optionsTags := { \"pref\" } }, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := { fieldName := ROUTE_E (84), routeBody := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"lr\", paramValue := omit }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } }, rrParam := omit } } }, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f96c6abec538b847368f21a7750c87fd12\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } }} id 5" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.151967", component: "849", peer_component: "BaseSipClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "345", function_name: "function:generalReceiveSip", message: " Message with id 5 was extracted from the queue of sipClientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.152000", component: "849", peer_component: "BaseSipClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "346", function_name: "function:generalReceiveSip", message: " Stop timer timerWaitForSipMessage: 15 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.153138", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on sipInternalPort to mtc @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspRequest := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, request := { requestLine := { method := REGISTER_E (11), requestUri := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := { fieldName := AUTHORIZATION_E (11), body := { digestResponse := { { id := \"realm\", paramValue := \"\\\"ericsson.se\\\"\" }, { id := \"username\", paramValue := \"\\\"10014002007@ericsson.se\\\"\" }, { id := \"uri\", paramValue := \"\\\"sip:ericsson.se\\\"\" }, { id := \"nonce\", paramValue := \"\\\"86738058454623966345207209727360\\\"\" }, { id := \"nc\", paramValue := \"00000001\" }, { id := \"cnonce\", paramValue := \"\\\"1763f64a4f74d63c1e0984ab8147f39a\\\"\" }, { id := \"qop\", paramValue := \"auth\" }, { id := \"response\", paramValue := \"\\\"f32b093f54cfcb329eb52f1a3b56e892\\\"\" }, { id := \"algorithm\", paramValue := \"MD5\" } } } }, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_5_8407814859008826027\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.telephony\", paramValue := \"\\\"cs\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit }, { id := \"sip.ice\", paramValue := \"true\" }, { id := \"q\", paramValue := \"0.5\" } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 2, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := { fieldName := EXPIRES_E (24), deltaSec := \"600000\" }, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494y8-6\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := { fieldName := REQUIRE_E (80), optionsTags := { \"pref\" } }, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := { fieldName := ROUTE_E (84), routeBody := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"lr\", paramValue := omit }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } }, rrParam := omit } } }, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f96c6abec538b847368f21a7750c87fd12\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.153475", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "74", function_name: "function:sipRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.153668", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on sipInternalPort[0] from 849 @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspRequest := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, request := { requestLine := { method := REGISTER_E (11), requestUri := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := { fieldName := AUTHORIZATION_E (11), body := { digestResponse := { { id := \"realm\", paramValue := \"\\\"ericsson.se\\\"\" }, { id := \"username\", paramValue := \"\\\"10014002007@ericsson.se\\\"\" }, { id := \"uri\", paramValue := \"\\\"sip:ericsson.se\\\"\" }, { id := \"nonce\", paramValue := \"\\\"86738058454623966345207209727360\\\"\" }, { id := \"nc\", paramValue := \"00000001\" }, { id := \"cnonce\", paramValue := \"\\\"1763f64a4f74d63c1e0984ab8147f39a\\\"\" }, { id := \"qop\", paramValue := \"auth\" }, { id := \"response\", paramValue := \"\\\"f32b093f54cfcb329eb52f1a3b56e892\\\"\" }, { id := \"algorithm\", paramValue := \"MD5\" } } } }, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_5_8407814859008826027\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.telephony\", paramValue := \"\\\"cs\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit }, { id := \"sip.ice\", paramValue := \"true\" }, { id := \"q\", paramValue := \"0.5\" } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 2, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := { fieldName := EXPIRES_E (24), deltaSec := \"600000\" }, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494y8-6\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := { fieldName := REQUIRE_E (80), optionsTags := { \"pref\" } }, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := { fieldName := ROUTE_E (84), routeBody := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"lr\", paramValue := omit }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } }, rrParam := omit } } }, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f96c6abec538b847368f21a7750c87fd12\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 9" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.153919", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port sipInternalPort[0] succeeded, message from 849: @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspRequest := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, request := { requestLine := { method := REGISTER_E (11), requestUri := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := { fieldName := AUTHORIZATION_E (11), body := { digestResponse := { { id := \"realm\", paramValue := \"\\\"ericsson.se\\\"\" }, { id := \"username\", paramValue := \"\\\"10014002007@ericsson.se\\\"\" }, { id := \"uri\", paramValue := \"\\\"sip:ericsson.se\\\"\" }, { id := \"nonce\", paramValue := \"\\\"86738058454623966345207209727360\\\"\" }, { id := \"nc\", paramValue := \"00000001\" }, { id := \"cnonce\", paramValue := \"\\\"1763f64a4f74d63c1e0984ab8147f39a\\\"\" }, { id := \"qop\", paramValue := \"auth\" }, { id := \"response\", paramValue := \"\\\"f32b093f54cfcb329eb52f1a3b56e892\\\"\" }, { id := \"algorithm\", paramValue := \"MD5\" } } } }, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_5_8407814859008826027\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.telephony\", paramValue := \"\\\"cs\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit }, { id := \"sip.ice\", paramValue := \"true\" }, { id := \"q\", paramValue := \"0.5\" } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 2, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := { fieldName := EXPIRES_E (24), deltaSec := \"600000\" }, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494y8-6\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := { fieldName := REQUIRE_E (80), optionsTags := { \"pref\" } }, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := { fieldName := ROUTE_E (84), routeBody := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"lr\", paramValue := omit }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } }, rrParam := omit } } }, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f96c6abec538b847368f21a7750c87fd12\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 9" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.154005", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Message with id 9 was extracted from the queue of sipInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.154026", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "255", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.158027", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.170986", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "286", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.171430", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on sipInternalPort[0] to 849 @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMMAND_SIP_SEND_SIP_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"1\" }, { parameterName := \"SUBSCRIBER\", parameterValue := \"11\" } } }, aspsSip := { { aspResponse := { addr := { remote_host := \"142.133.142.3\", remote_port := 5060, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 200, reasonPhrase := \"OK\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := { fieldName := AUTHENTICATION_INFO_E (10), ainfo := { { id := \"qop\", paramValue := \"\\\"auth\\\"\" }, { id := \"rspauth\", paramValue := \"\\\"4e0afd3006175776f901e66eaea9c15a\\\"\" }, { id := \"cnonce\", paramValue := \"\\\"86738058454623966345207209727360\\\"\" }, { id := \"nc\", paramValue := \"\\\"1\\\"\" } } }, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_5_8407814859008826027\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.telephony\", paramValue := \"\\\"cs\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit }, { id := \"sip.ice\", paramValue := \"true\" }, { id := \"q\", paramValue := \"0.5\" }, { id := \"expires\", paramValue := \"600000\" } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 2, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494y8-6\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := { fieldName := P_ASSOCIATED_URI (44), p_assoc_uris := { { p_asso_uri := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } }, ai_params := omit }, { p_asso_uri := { displayName := omit, addrSpec := { scheme := \"tel\", userInfo := { userOrTelephoneSubscriber := \"+10014002007\", password := omit }, hostPort := { host := omit, portField := omit }, urlParameters := omit, headers := omit } }, ai_params := omit } } }, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"79500579005513328619011707540441825501\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f96c6abec538b847368f21a7750c87fd12\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.171720", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.171975", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on sipInternalPort from mtc @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMMAND_SIP_SEND_SIP_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"1\" }, { parameterName := \"SUBSCRIBER\", parameterValue := \"11\" } } }, aspsSip := { { aspResponse := { addr := { remote_host := \"142.133.142.3\", remote_port := 5060, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 200, reasonPhrase := \"OK\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := { fieldName := AUTHENTICATION_INFO_E (10), ainfo := { { id := \"qop\", paramValue := \"\\\"auth\\\"\" }, { id := \"rspauth\", paramValue := \"\\\"4e0afd3006175776f901e66eaea9c15a\\\"\" }, { id := \"cnonce\", paramValue := \"\\\"86738058454623966345207209727360\\\"\" }, { id := \"nc\", paramValue := \"\\\"1\\\"\" } } }, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_5_8407814859008826027\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.telephony\", paramValue := \"\\\"cs\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit }, { id := \"sip.ice\", paramValue := \"true\" }, { id := \"q\", paramValue := \"0.5\" }, { id := \"expires\", paramValue := \"600000\" } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 2, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494y8-6\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := { fieldName := P_ASSOCIATED_URI (44), p_assoc_uris := { { p_asso_uri := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } }, ai_params := omit }, { p_asso_uri := { displayName := omit, addrSpec := { scheme := \"tel\", userInfo := { userOrTelephoneSubscriber := \"+10014002007\", password := omit }, hostPort := { host := omit, portField := omit }, urlParameters := omit, headers := omit } }, ai_params := omit } } }, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"79500579005513328619011707540441825501\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f96c6abec538b847368f21a7750c87fd12\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 9" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.172293", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port sipInternalPort succeeded, message from mtc: @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMMAND_SIP_SEND_SIP_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"1\" }, { parameterName := \"SUBSCRIBER\", parameterValue := \"11\" } } }, aspsSip := { { aspResponse := { addr := { remote_host := \"142.133.142.3\", remote_port := 5060, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 200, reasonPhrase := \"OK\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := { fieldName := AUTHENTICATION_INFO_E (10), ainfo := { { id := \"qop\", paramValue := \"\\\"auth\\\"\" }, { id := \"rspauth\", paramValue := \"\\\"4e0afd3006175776f901e66eaea9c15a\\\"\" }, { id := \"cnonce\", paramValue := \"\\\"86738058454623966345207209727360\\\"\" }, { id := \"nc\", paramValue := \"\\\"1\\\"\" } } }, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_5_8407814859008826027\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.telephony\", paramValue := \"\\\"cs\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit }, { id := \"sip.ice\", paramValue := \"true\" }, { id := \"q\", paramValue := \"0.5\" }, { id := \"expires\", paramValue := \"600000\" } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 2, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494y8-6\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := { fieldName := P_ASSOCIATED_URI (44), p_assoc_uris := { { p_asso_uri := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } }, ai_params := omit }, { p_asso_uri := { displayName := omit, addrSpec := { scheme := \"tel\", userInfo := { userOrTelephoneSubscriber := \"+10014002007\", password := omit }, hostPort := { host := omit, portField := omit }, urlParameters := omit, headers := omit } }, ai_params := omit } } }, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"79500579005513328619011707540441825501\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f96c6abec538b847368f21a7750c87fd12\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 9" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.172448", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Message with id 9 was extracted from the queue of sipInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.172494", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "80", function_name: "function:sipRun", message: " Stop timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.173173", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on sipClientPort to system @IPL4_demo_types.SIP_SendTo : { connId := 3, remName := \"142.133.142.3\", remPort := 5060, proto := { tcp := { } }, msg := { raw := \"SIP/2.0 200 OK\\r\\nAuthentication-Info:qop=\\\"auth\\\", rspauth=\\\"4e0afd3006175776f901e66eaea9c15a\\\", cnonce=\\\"86738058454623966345207209727360\\\", nc=\\\"1\\\"\\r\\nCall-ID:142.133.142.3_5_8407814859008826027\\r\\nContact:<sip:10014002007@142.133.142.3:5060;csid=2838ab5a-e194-4923-81af-c9f0a544f667;transport=TCP>;+g.gsma.rcs.ipcall;+g.3gpp.icsi-ref=\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\";+g.oma.sip-im;+g.gsma.rcs.telephony=\\\"cs\\\";+g.3gpp.cs-voice;+g.3gpp.iari-ref=\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\";video;sip.ice=true;q=0.5;expires=600000\\r\\nContent-Length:0\\r\\nCSeq:2 REGISTER\\r\\nFrom:<sip:10014002007@ericsson.se>;tag=i1o494y8-6\\r\\nP-Associated-URI:<sip:10014002007@ericsson.se>\\r\\nP-Associated-URI:<tel:+10014002007>\\r\\nTo:<sip:10014002007@ericsson.se>;tag=79500579005513328619011707540441825501\\r\\nVia:SIP/2.0/TCP 142.133.142.3:5060;branch=z9hG4bKf1f96c6abec538b847368f21a7750c87fd12\\r\\n\\r\\n\" }}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.173449", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Outgoing message was mapped to @IPL4asp_Types.ASP_SendTo : { connId := 3, remName := \"142.133.142.3\", remPort := 5060, proto := { tcp := { } }, msgr\\nAuthentication-Info:qop=\\\"auth\\\", rspauth=\\\"4e0afd3006175776f901e66eaea9c15a\\\", cnonce=\\\"86738058454623966345207209727360\\\", nc=\\\"1\\\"\\r\\nCall-ID:142.133.142.3_5_8407814859008826027\\r\\nContact:<sip:10014002007@142.133.142.3:5060;csid=2838ab5a-e194-4923-81af-c9f0a544f667;transport=TCP>;+g.gsma.rcs.ipcall;+g.3gpp.icsi-ref=\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\";+g.oma.sip-im;+g.gsma.rcs.telephony=\\\"cs\\\";+g.3gpp.cs-voice;+g.3gpp.iari-ref=\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\";video;sip.ice=true;q=0.5;expires=600000\\r\\nContent-Length:0\\r\\nCSeq:2 REGISTER\\r\\nFrom:<sip:10014002007@ericsson.se>;tag=i1o494y8-6\\r\\nP-Associated-URI:<sip:10014002007@ericsson.se>\\r\\nP-Associated-URI:<tel:+10014002007>\\r\\nTo:<sip:10014002007@ericsson.se>;tag=79500579005513328619011707540441825501\\r\\nVia:SIP/2.0/TCP 142.133.142.3:5060;branch=z9hG4bKf1f96c6abec538b847368f21a7750c87fd12\\r\\n\\r\\n\")}" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.173755", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "388", function_name: "function:processCommand", message: " Sent on sipInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.173856", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "74", function_name: "function:sipRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.173897", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "253", function_name: "function:receiveInternalMessage", message: " Message enqueued on sipInternalPort[0] from 849 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.173961", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Receive operation on port sipInternalPort[0] succeeded, message from 849: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.173987", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Message with id 10 was extracted from the queue of sipInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.174006", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "255", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.174311", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.235520", component: "854", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on clientPort from system @HTTPmsg_Types.HTTPMessage : { response := { client_id := 9, version_major := 1, version_minor := 1, statuscode := 201, statustext := \"Created\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Location\", header_value := \"http://142.133.142.3:8080/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:28 GMT\" } }, body := \"{\\n \\\"resourceURL\\\": \\\"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667\\\",\\n \\\"serviceCapability\\\": [ {\\n \\\"capabilityId\\\": \\\"ip_voice_call\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"ip_video_call\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"im_chat\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"video_share\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"+custom-valid-feature\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"im_standalone\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"ab\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"file_transfer\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"cs\\\"\\n } ]\\n}\" }} id 2" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.235716", component: "854", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port clientPort succeeded, message from system(): @HTTPmsg_Types.HTTPMessage : { response := { client_id := 9, version_major := 1, version_minor := 1, statuscode := 201, statustext := \"Created\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Location\", header_value := \"http://142.133.142.3:8080/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:28 GMT\" } }, body := \"{\\n \\\"resourceURL\\\": \\\"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667\\\",\\n \\\"serviceCapability\\\": [ {\\n \\\"capabilityId\\\": \\\"ip_voice_call\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"ip_video_call\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"im_chat\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"video_share\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"+custom-valid-feature\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"im_standalone\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"ab\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"file_transfer\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"cs\\\"\\n } ]\\n}\" }} id 2" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.235768", component: "854", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "193", function_name: "function:receiveAnyHTTPClientResponse", message: " Message with id 2 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.235803", component: "854", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "194", function_name: "function:receiveAnyHTTPClientResponse", message: " Stop timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.235966", component: "854", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort to mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\n \\\"resourceURL\\\": \\\"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667\\\",\\n \\\"serviceCapability\\\": [ {\\n \\\"capabilityId\\\": \\\"ip_voice_call\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"ip_video_call\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"im_chat\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"video_share\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"+custom-valid-feature\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"im_standalone\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"ab\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"file_transfer\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"cs\\\"\\n } ]\\n}\", contentType := \"\", statusCode := \"201\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Location\", header_value := \"http://142.133.142.3:8080/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:28 GMT\" } } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.236067", component: "854", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "62", function_name: "function:httpNodeRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.236280", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort[3] from 854 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\n \\\"resourceURL\\\": \\\"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667\\\",\\n \\\"serviceCapability\\\": [ {\\n \\\"capabilityId\\\": \\\"ip_voice_call\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"ip_video_call\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"im_chat\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"video_share\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"+custom-valid-feature\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"im_standalone\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"ab\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"file_transfer\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"cs\\\"\\n } ]\\n}\", contentType := \"\", statusCode := \"201\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Location\", header_value := \"http://142.133.142.3:8080/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:28 GMT\" } } } } }} id 2" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.236480", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort[3] succeeded, message from 854: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\n \\\"resourceURL\\\": \\\"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667\\\",\\n \\\"serviceCapability\\\": [ {\\n \\\"capabilityId\\\": \\\"ip_voice_call\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"ip_video_call\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"im_chat\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"video_share\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"+custom-valid-feature\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"im_standalone\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"ab\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"file_transfer\\\"\\n }, {\\n \\\"capabilityId\\\": \\\"cs\\\"\\n } ]\\n}\", contentType := \"\", statusCode := \"201\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Location\", header_value := \"http://142.133.142.3:8080/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:28 GMT\" } } } } }} id 2" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.236521", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Message with id 2 was extracted from the queue of httpNodeInternalPort[3]" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.236541", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "241", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.237771", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.249513", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "267", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.249645", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort[2] to 853 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"2\" } } }, aspHttp := { { httpMessage := { method := \"POST\", url := \"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/message/send\", body := \"{ \\\"to\\\": \\\"sip:10014002007@ericsson.se\\\", \\\"body\\\": \\\"Body message 10014002006 to 10014002007\\\", \\\"contentType\\\": \\\"text/plain\\\"} \", contentType := \"application/json\", statusCode := \"\", header := { } } } }}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.249822", component: "853", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort from mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"2\" } } }, aspHttp := { { httpMessage := { method := \"POST\", url := \"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/message/send\", body := \"{ \\\"to\\\": \\\"sip:10014002007@ericsson.se\\\", \\\"body\\\": \\\"Body message 10014002006 to 10014002007\\\", \\\"contentType\\\": \\\"text/plain\\\"} \", contentType := \"application/json\", statusCode := \"\", header := { } } } }} id 2" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.249833", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.249918", component: "853", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort succeeded, message from mtc: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"2\" } } }, aspHttp := { { httpMessage := { method := \"POST\", url := \"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/message/send\", body := \"{ \\\"to\\\": \\\"sip:10014002007@ericsson.se\\\", \\\"body\\\": \\\"Body message 10014002006 to 10014002007\\\", \\\"contentType\\\": \\\"text/plain\\\"} \", contentType := \"application/json\", statusCode := \"\", header := { } } } }} id 2" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.249981", component: "853", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "67", function_name: "function:httpNodeRun", message: " Message with id 2 was extracted from the queue of httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.250000", component: "853", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "68", function_name: "function:httpNodeRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.250148", component: "853", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "307", function_name: "function:clearHTTPClientPort", message: " Start timer timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.250165", component: "853", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "313", function_name: "function:clearHTTPClientPort", message: " Timeout timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.250243", component: "853", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Sent on clientPort to system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.250946", component: "853", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Message enqueued on clientPort from system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.250990", component: "853", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "243", function_name: "function:sendHTTPClientRequest", message: " Start timer timerWaitForHTTPOpenConnection: 2 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.251038", component: "853", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Receive operation on port clientPort succeeded, message from system(" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.251056", component: "853", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Message with id 3 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.251070", component: "853", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "246", function_name: "function:sendHTTPClientRequest", message: " Stop timer timerWaitForHTTPOpenConnection: 2 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.251118", component: "853", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on clientPort to system @HTTPmsg_Types.HTTPMessage : { request := { client_id := 10, method := \"POST\", uri := \"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/message/send\", version_major := 1, version_minor := 1, header := { { header_name := \"Host\", header_value := \"142.133.142.3\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Content-Length\", header_value := \"119\" } }, body := \"{ \\\"to\\\": \\\"sip:10014002007@ericsson.se\\\", \\\"body\\\": \\\"Body message 10014002006 to 10014002007\\\", \\\"contentType\\\": \\\"text/plain\\\"} \" }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.251229", component: "853", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "189", function_name: "function:receiveAnyHTTPClientResponse", message: " Start timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.288098", component: "853", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on clientPort from system @HTTPmsg_Types.HTTPMessage : { response := { client_id := 10, version_major := 1, version_minor := 1, statuscode := 200, statustext := \"OK\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:28 GMT\" } }, body := \"{\\n \\\"msgId\\\": \\\"XKDf1g9a\\\"\\n}\" }} id 4" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.288177", component: "853", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port clientPort succeeded, message from system(): @HTTPmsg_Types.HTTPMessage : { response := { client_id := 10, version_major := 1, version_minor := 1, statuscode := 200, statustext := \"OK\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:28 GMT\" } }, body := \"{\\n \\\"msgId\\\": \\\"XKDf1g9a\\\"\\n}\" }} id 4" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.288203", component: "853", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "193", function_name: "function:receiveAnyHTTPClientResponse", message: " Message with id 4 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.288219", component: "853", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "194", function_name: "function:receiveAnyHTTPClientResponse", message: " Stop timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.288300", component: "853", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort to mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\n \\\"msgId\\\": \\\"XKDf1g9a\\\"\\n}\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:28 GMT\" } } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.288378", component: "853", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "62", function_name: "function:httpNodeRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.288473", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort[2] from 853 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\n \\\"msgId\\\": \\\"XKDf1g9a\\\"\\n}\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:28 GMT\" } } } } }} id 3" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.288570", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort[2] succeeded, message from 853: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\n \\\"msgId\\\": \\\"XKDf1g9a\\\"\\n}\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:28 GMT\" } } } } }} id 3" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.288601", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Message with id 3 was extracted from the queue of httpNodeInternalPort[2]" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.288633", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "241", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.289833", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.301489", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "286", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.301576", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "202", function_name: "function:sendInternalMessage", message: " Sent on sipInternalPort[0] to 849 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.301721", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "78", function_name: "function:sipRun", message: " Message enqueued on sipInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.301722", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.301826", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Receive operation on port sipInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.301856", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Message with id 10 was extracted from the queue of sipInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.301871", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "80", function_name: "function:sipRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.302020", component: "849", peer_component: "BaseSipClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "320", function_name: "function:generalReceiveSip", message: " Start timer timerWaitForSipMessage: 15 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.350075", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on sipClientPort from system @IPL4asp_Types.ASP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msgsip:10014002007@ericsson.se SIP/2.0\\r\\nMin-Se: 90\\r\\nSubject: Body message 10014002006 to 10014002007\\r\\nContent-Length: 732\\r\\nTo: <sip:10014002007@ericsson.se>\\r\\nContact: <sip:10014002006@142.133.142.3:5060;csid=8cf72980-08e3-4819-943d-f7260f67318d;transport=TCP;fid=wcg-ft3_1>;+g.oma.sip-im;+g.gsma.rcs.ipcall;+g.3gpp.icsi-ref=\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\";+g.3gpp.cs-voice;+g.3gpp.iari-ref=\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\";video\\r\\nSupported: timer\\r\\nCseq: 1 INVITE\\r\\nUser-Agent: H2S\\r\\nSession-Expires: 3600;refresher=uac\\r\\nContribution-Id: CHAT:10014002007@ericsson.se\\r\\nAccept-Contact: *;+g.oma.sip-im\\r\\nMax-Forwards: 69\\r\\nAllow: INVITE\\r\\nAllow: BYE\\r\\nAllow: ACK\\r\\nAllow: CANCEL\\r\\nAllow: UPDATE\\r\\nVia: SIP/2.0/TCP 142.133.142.3:5060;branch=z9hG4bKf1f965ce3efd3a62494f8cec71bc2c0d199a\\r\\nRoute: <sip:142.133.150.169:26720;lr;transport=TCP>\\r\\nContent-Type: multipart/mixed; boundary=\\\"--=Part_jlJ94hBw16CErXnvMxJd2vfs90jDEP\\\"\\r\\nFrom: <sip:10014002006@ericsson.se>;tag=i1o4954c-7\\r\\nCall-Id: 142.133.142.3_6_1805558430567465450\\r\\nP-Preferred-Identity: sip:10014002006@ericsson.se\\r\\n\\r\\n----=Part_jlJ94hBw16CErXnvMxJd2vfs90jDEP\\r\\nContent-Type: message/cpim\\r\\n\\r\\nTo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:29+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: XKDf1g9a\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002006 to 10014002007\\r\\n----=Part_jlJ94hBw16CErXnvMxJd2vfs90jDEP\\r\\nContent-Type: application/sdp\\r\\n\\r\\nv=0\\r\\no=10014002006 3623178869 3623178869 IN IP4 142.133.142.3\\r\\ns=-\\r\\nc=IN IP4 142.133.142.3\\r\\nt=0 0\\r\\nm=message 6060 TCP/MSRP *\\r\\na=accept-types:*\\r\\na=connection:new\\r\\na=sendrecv\\r\\na=setup:active\\r\\na=path:msrp://142.133.142.3:6060/j9EMds9SLZdZ;tcp\\r\\n\\r\\n----=Part_jlJ94hBw16CErXnvMxJd2vfs90jDEP--\\r\\n\")} id 6" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.351229", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Incoming message was mapped to @IPL4_demo_types.SIP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msg := { request := { requestLine := { method := INVITE_E (4), requestUri := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := { fieldName := ACCEPT_CONTACT_E (1), ac_values := { { { id := \"+g.oma.sip-im\", paramValue := omit } } } }, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := { fieldName := ALLOW_E (7), methods := { \"INVITE\", \"BYE\", \"ACK\", \"CANCEL\", \"UPDATE\" } }, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_6_1805558430567465450\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"8cf72980-08e3-4819-943d-f7260f67318d\" }, { id := \"transport\", paramValue := \"TCP\" }, { id := \"fid\", paramValue := \"wcg-ft3_1\" } }, headers := omit } } }, contactParams := { { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 732 }, contentType := { fieldName := CONTENT_TYPE_E (19), mediaType := \"multipart/mixed; boundary=\\\"--=Part_jlJ94hBw16CErXnvMxJd2vfs90jDEP\\\"\" }, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"INVITE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o4954c-7\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := { fieldName := MIN_SE_E (38), deltaSec := \"90\", params := omit }, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := { fieldName := P_PREFERRED_ID_E (55), ids := { { addrSpecUnion := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } } }, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := { fieldName := ROUTE_E (84), routeBody := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"lr\", paramValue := omit }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } }, rrParam := omit } } }, security_client := omit, security_server := omit, security_verify := omit, session_expires := { fieldName := SESSION_EXPIRES_E (88), deltaSec := \"3600\", se_params := { { id := \"refresher\", paramValue := \"uac\" } } }, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := { fieldName := SUBJECT_E (94), summary := \"Body message 10014002006 to 10014002007\" }, subscription_state := omit, supported := { fieldName := SUPPORTED_E (96), optionsTags := { \"timer\" } }, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f965ce3efd3a62494f8cec71bc2c0d199a\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := { { headerName := \"Contribution-Id\", headerValue := \"CHAT:10014002007@ericsson.se\" } }, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := \"----=Part_jlJ94hBw16CErXnvMxJd2vfs90jDEP\\r\\nContent-Type: message/cpim\\r\\n\\r\\nTo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:29+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: XKDf1g9a\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002006 to 10014002007\\r\\n----=Part_jlJ94hBw16CErXnvMxJd2vfs90jDEP\\r\\nContent-Type: application/sdp\\r\\n\\r\\nv=0\\r\\no=10014002006 3623178869 3623178869 IN IP4 142.133.142.3\\r\\ns=-\\r\\nc=IN IP4 142.133.142.3\\r\\nt=0 0\\r\\nm=message 6060 TCP/MSRP *\\r\\na=accept-types:*\\r\\na=connection:new\\r\\na=sendrecv\\r\\na=setup:active\\r\\na=path:msrp://142.133.142.3:6060/j9EMds9SLZdZ;tcp\\r\\n\\r\\n----=Part_jlJ94hBw16CErXnvMxJd2vfs90jDEP--\\r\\n\", payload := omit } }} id 6" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.351795", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port sipClientPort succeeded, message from system(): @IPL4_demo_types.SIP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msg := { request := { requestLine := { method := INVITE_E (4), requestUri := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := { fieldName := ACCEPT_CONTACT_E (1), ac_values := { { { id := \"+g.oma.sip-im\", paramValue := omit } } } }, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := { fieldName := ALLOW_E (7), methods := { \"INVITE\", \"BYE\", \"ACK\", \"CANCEL\", \"UPDATE\" } }, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_6_1805558430567465450\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"8cf72980-08e3-4819-943d-f7260f67318d\" }, { id := \"transport\", paramValue := \"TCP\" }, { id := \"fid\", paramValue := \"wcg-ft3_1\" } }, headers := omit } } }, contactParams := { { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 732 }, contentType := { fieldName := CONTENT_TYPE_E (19), mediaType := \"multipart/mixed; boundary=\\\"--=Part_jlJ94hBw16CErXnvMxJd2vfs90jDEP\\\"\" }, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"INVITE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o4954c-7\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := { fieldName := MIN_SE_E (38), deltaSec := \"90\", params := omit }, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := { fieldName := P_PREFERRED_ID_E (55), ids := { { addrSpecUnion := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } } }, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := { fieldName := ROUTE_E (84), routeBody := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"lr\", paramValue := omit }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } }, rrParam := omit } } }, security_client := omit, security_server := omit, security_verify := omit, session_expires := { fieldName := SESSION_EXPIRES_E (88), deltaSec := \"3600\", se_params := { { id := \"refresher\", paramValue := \"uac\" } } }, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := { fieldName := SUBJECT_E (94), summary := \"Body message 10014002006 to 10014002007\" }, subscription_state := omit, supported := { fieldName := SUPPORTED_E (96), optionsTags := { \"timer\" } }, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f965ce3efd3a62494f8cec71bc2c0d199a\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := { { headerName := \"Contribution-Id\", headerValue := \"CHAT:10014002007@ericsson.se\" } }, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := \"----=Part_jlJ94hBw16CErXnvMxJd2vfs90jDEP\\r\\nContent-Type: message/cpim\\r\\n\\r\\nTo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:29+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: XKDf1g9a\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002006 to 10014002007\\r\\n----=Part_jlJ94hBw16CErXnvMxJd2vfs90jDEP\\r\\nContent-Type: application/sdp\\r\\n\\r\\nv=0\\r\\no=10014002006 3623178869 3623178869 IN IP4 142.133.142.3\\r\\ns=-\\r\\nc=IN IP4 142.133.142.3\\r\\nt=0 0\\r\\nm=message 6060 TCP/MSRP *\\r\\na=accept-types:*\\r\\na=connection:new\\r\\na=sendrecv\\r\\na=setup:active\\r\\na=path:msrp://142.133.142.3:6060/j9EMds9SLZdZ;tcp\\r\\n\\r\\n----=Part_jlJ94hBw16CErXnvMxJd2vfs90jDEP--\\r\\n\", payload := omit } }} id 6" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.351984", component: "849", peer_component: "BaseSipClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "345", function_name: "function:generalReceiveSip", message: " Message with id 6 was extracted from the queue of sipClientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.352026", component: "849", peer_component: "BaseSipClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "346", function_name: "function:generalReceiveSip", message: " Stop timer timerWaitForSipMessage: 15 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.356341", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on sipInternalPort to mtc @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspRequest := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, request := { requestLine := { method := INVITE_E (4), requestUri := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := { fieldName := ACCEPT_CONTACT_E (1), ac_values := { { { id := \"+g.oma.sip-im\", paramValue := omit } } } }, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := { fieldName := ALLOW_E (7), methods := { \"INVITE\", \"BYE\", \"ACK\", \"CANCEL\", \"UPDATE\" } }, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_6_1805558430567465450\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"8cf72980-08e3-4819-943d-f7260f67318d\" }, { id := \"transport\", paramValue := \"TCP\" }, { id := \"fid\", paramValue := \"wcg-ft3_1\" } }, headers := omit } } }, contactParams := { { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 732 }, contentType := { fieldName := CONTENT_TYPE_E (19), mediaType := \"multipart/mixed; boundary=\\\"--=Part_jlJ94hBw16CErXnvMxJd2vfs90jDEP\\\"\" }, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"INVITE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o4954c-7\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := { fieldName := MIN_SE_E (38), deltaSec := \"90\", params := omit }, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := { fieldName := P_PREFERRED_ID_E (55), ids := { { addrSpecUnion := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } } }, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := { fieldName := ROUTE_E (84), routeBody := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"lr\", paramValue := omit }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } }, rrParam := omit } } }, security_client := omit, security_server := omit, security_verify := omit, session_expires := { fieldName := SESSION_EXPIRES_E (88), deltaSec := \"3600\", se_params := { { id := \"refresher\", paramValue := \"uac\" } } }, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := { fieldName := SUBJECT_E (94), summary := \"Body message 10014002006 to 10014002007\" }, subscription_state := omit, supported := { fieldName := SUPPORTED_E (96), optionsTags := { \"timer\" } }, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f965ce3efd3a62494f8cec71bc2c0d199a\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := { { headerName := \"Contribution-Id\", headerValue := \"CHAT:10014002007@ericsson.se\" } }, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := { fieldName := CONTRIBUTION_ID_E (117), name_value := \"CHAT:10014002007@ericsson.se\" }, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := \"----=Part_jlJ94hBw16CErXnvMxJd2vfs90jDEP\\r\\nContent-Type: message/cpim\\r\\n\\r\\nTo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:29+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: XKDf1g9a\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002006 to 10014002007\\r\\n----=Part_jlJ94hBw16CErXnvMxJd2vfs90jDEP\\r\\nContent-Type: application/sdp\\r\\n\\r\\nv=0\\r\\no=10014002006 3623178869 3623178869 IN IP4 142.133.142.3\\r\\ns=-\\r\\nc=IN IP4 142.133.142.3\\r\\nt=0 0\\r\\nm=message 6060 TCP/MSRP *\\r\\na=accept-types:*\\r\\na=connection:new\\r\\na=sendrecv\\r\\na=setup:active\\r\\na=path:msrp://142.133.142.3:6060/j9EMds9SLZdZ;tcp\\r\\n\\r\\n----=Part_jlJ94hBw16CErXnvMxJd2vfs90jDEP--\\r\\n\", payload := omit } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.356671", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "74", function_name: "function:sipRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.357094", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on sipInternalPort[0] from 849 @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspRequest := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, request := { requestLine := { method := INVITE_E (4), requestUri := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := { fieldName := ACCEPT_CONTACT_E (1), ac_values := { { { id := \"+g.oma.sip-im\", paramValue := omit } } } }, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := { fieldName := ALLOW_E (7), methods := { \"INVITE\", \"BYE\", \"ACK\", \"CANCEL\", \"UPDATE\" } }, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_6_1805558430567465450\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"8cf72980-08e3-4819-943d-f7260f67318d\" }, { id := \"transport\", paramValue := \"TCP\" }, { id := \"fid\", paramValue := \"wcg-ft3_1\" } }, headers := omit } } }, contactParams := { { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 732 }, contentType := { fieldName := CONTENT_TYPE_E (19), mediaType := \"multipart/mixed; boundary=\\\"--=Part_jlJ94hBw16CErXnvMxJd2vfs90jDEP\\\"\" }, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"INVITE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o4954c-7\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := { fieldName := MIN_SE_E (38), deltaSec := \"90\", params := omit }, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := { fieldName := P_PREFERRED_ID_E (55), ids := { { addrSpecUnion := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } } }, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := { fieldName := ROUTE_E (84), routeBody := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"lr\", paramValue := omit }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } }, rrParam := omit } } }, security_client := omit, security_server := omit, security_verify := omit, session_expires := { fieldName := SESSION_EXPIRES_E (88), deltaSec := \"3600\", se_params := { { id := \"refresher\", paramValue := \"uac\" } } }, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := { fieldName := SUBJECT_E (94), summary := \"Body message 10014002006 to 10014002007\" }, subscription_state := omit, supported := { fieldName := SUPPORTED_E (96), optionsTags := { \"timer\" } }, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f965ce3efd3a62494f8cec71bc2c0d199a\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := { { headerName := \"Contribution-Id\", headerValue := \"CHAT:10014002007@ericsson.se\" } }, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := { fieldName := CONTRIBUTION_ID_E (117), name_value := \"CHAT:10014002007@ericsson.se\" }, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := \"----=Part_jlJ94hBw16CErXnvMxJd2vfs90jDEP\\r\\nContent-Type: message/cpim\\r\\n\\r\\nTo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:29+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: XKDf1g9a\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002006 to 10014002007\\r\\n----=Part_jlJ94hBw16CErXnvMxJd2vfs90jDEP\\r\\nContent-Type: application/sdp\\r\\n\\r\\nv=0\\r\\no=10014002006 3623178869 3623178869 IN IP4 142.133.142.3\\r\\ns=-\\r\\nc=IN IP4 142.133.142.3\\r\\nt=0 0\\r\\nm=message 6060 TCP/MSRP *\\r\\na=accept-types:*\\r\\na=connection:new\\r\\na=sendrecv\\r\\na=setup:active\\r\\na=path:msrp://142.133.142.3:6060/j9EMds9SLZdZ;tcp\\r\\n\\r\\n----=Part_jlJ94hBw16CErXnvMxJd2vfs90jDEP--\\r\\n\", payload := omit } } } }} id 11" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.357492", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port sipInternalPort[0] succeeded, message from 849: @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspRequest := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, request := { requestLine := { method := INVITE_E (4), requestUri := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := { fieldName := ACCEPT_CONTACT_E (1), ac_values := { { { id := \"+g.oma.sip-im\", paramValue := omit } } } }, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := { fieldName := ALLOW_E (7), methods := { \"INVITE\", \"BYE\", \"ACK\", \"CANCEL\", \"UPDATE\" } }, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_6_1805558430567465450\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"8cf72980-08e3-4819-943d-f7260f67318d\" }, { id := \"transport\", paramValue := \"TCP\" }, { id := \"fid\", paramValue := \"wcg-ft3_1\" } }, headers := omit } } }, contactParams := { { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 732 }, contentType := { fieldName := CONTENT_TYPE_E (19), mediaType := \"multipart/mixed; boundary=\\\"--=Part_jlJ94hBw16CErXnvMxJd2vfs90jDEP\\\"\" }, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"INVITE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o4954c-7\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := { fieldName := MIN_SE_E (38), deltaSec := \"90\", params := omit }, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := { fieldName := P_PREFERRED_ID_E (55), ids := { { addrSpecUnion := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } } }, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := { fieldName := ROUTE_E (84), routeBody := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"lr\", paramValue := omit }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } }, rrParam := omit } } }, security_client := omit, security_server := omit, security_verify := omit, session_expires := { fieldName := SESSION_EXPIRES_E (88), deltaSec := \"3600\", se_params := { { id := \"refresher\", paramValue := \"uac\" } } }, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := { fieldName := SUBJECT_E (94), summary := \"Body message 10014002006 to 10014002007\" }, subscription_state := omit, supported := { fieldName := SUPPORTED_E (96), optionsTags := { \"timer\" } }, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f965ce3efd3a62494f8cec71bc2c0d199a\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := { { headerName := \"Contribution-Id\", headerValue := \"CHAT:10014002007@ericsson.se\" } }, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := { fieldName := CONTRIBUTION_ID_E (117), name_value := \"CHAT:10014002007@ericsson.se\" }, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := \"----=Part_jlJ94hBw16CErXnvMxJd2vfs90jDEP\\r\\nContent-Type: message/cpim\\r\\n\\r\\nTo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:29+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: XKDf1g9a\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002006 to 10014002007\\r\\n----=Part_jlJ94hBw16CErXnvMxJd2vfs90jDEP\\r\\nContent-Type: application/sdp\\r\\n\\r\\nv=0\\r\\no=10014002006 3623178869 3623178869 IN IP4 142.133.142.3\\r\\ns=-\\r\\nc=IN IP4 142.133.142.3\\r\\nt=0 0\\r\\nm=message 6060 TCP/MSRP *\\r\\na=accept-types:*\\r\\na=connection:new\\r\\na=sendrecv\\r\\na=setup:active\\r\\na=path:msrp://142.133.142.3:6060/j9EMds9SLZdZ;tcp\\r\\n\\r\\n----=Part_jlJ94hBw16CErXnvMxJd2vfs90jDEP--\\r\\n\", payload := omit } } } }} id 11" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.357641", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Message with id 11 was extracted from the queue of sipInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.357691", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "255", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.378474", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.389762", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "286", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.390320", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on sipInternalPort[0] to 849 @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMMAND_SIP_SEND_SIP_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"2\" }, { parameterName := \"SUBSCRIBER\", parameterValue := \"11\" } } }, aspsSip := { { aspResponse := { addr := { remote_host := \"142.133.142.3\", remote_port := 5060, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 100, reasonPhrase := \"Trying\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_6_1805558430567465450\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"INVITE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o4954c-7\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f965ce3efd3a62494f8cec71bc2c0d199a\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.390690", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.390783", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on sipInternalPort from mtc @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMMAND_SIP_SEND_SIP_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"2\" }, { parameterName := \"SUBSCRIBER\", parameterValue := \"11\" } } }, aspsSip := { { aspResponse := { addr := { remote_host := \"142.133.142.3\", remote_port := 5060, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 100, reasonPhrase := \"Trying\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_6_1805558430567465450\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"INVITE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o4954c-7\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f965ce3efd3a62494f8cec71bc2c0d199a\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 11" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.390995", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port sipInternalPort succeeded, message from mtc: @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMMAND_SIP_SEND_SIP_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"2\" }, { parameterName := \"SUBSCRIBER\", parameterValue := \"11\" } } }, aspsSip := { { aspResponse := { addr := { remote_host := \"142.133.142.3\", remote_port := 5060, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 100, reasonPhrase := \"Trying\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_6_1805558430567465450\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"INVITE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o4954c-7\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f965ce3efd3a62494f8cec71bc2c0d199a\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 11" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.391087", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Message with id 11 was extracted from the queue of sipInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.391113", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "80", function_name: "function:sipRun", message: " Stop timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.391720", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on sipClientPort to system @IPL4_demo_types.SIP_SendTo : { connId := 3, remName := \"142.133.142.3\", remPort := 5060, proto := { tcp := { } }, msg := { raw := \"SIP/2.0 100 Trying\\r\\nCall-ID:142.133.142.3_6_1805558430567465450\\r\\nContent-Length:0\\r\\nCSeq:1 INVITE\\r\\nFrom:<sip:10014002006@ericsson.se>;tag=i1o4954c-7\\r\\nTo:<sip:10014002007@ericsson.se>\\r\\nVia:SIP/2.0/TCP 142.133.142.3:5060;branch=z9hG4bKf1f965ce3efd3a62494f8cec71bc2c0d199a\\r\\n\\r\\n\" }}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.391830", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Outgoing message was mapped to @IPL4asp_Types.ASP_SendTo : { connId := 3, remName := \"142.133.142.3\", remPort := 5060, proto := { tcp := { } }, msg := '5349502F322E302031303020547279696E670D0A43616C6C2D49443A3134322E3133332E3134322E335F365F313830353535383433303536373436353435300D0A436F6E74656E742D4C656E6774683A300D0A435365713A3120494E564954450D0A46726F6D3A3C7369703A3130303134303032303036406572696373736F6E2E73653E3B7461673D69316F34393534632D370D0A546F3A3C7369703A3130303134303032303037406572696373736F6E2E73653E0D0A5669613A5349502F322E302F544350203134322E3133332E3134322E333A353036303B6272616E63683D7A39684734624B6631663936356365336566643361363234393466386365633731626332633064313939610D0A0D0A'O (\"SIP/2.0 100 Trying\\r\\nCall-ID:142.133.142.3_6_1805558430567465450\\r\\nContent-Length:0\\r\\nCSeq:1 INVITE\\r\\nFrom:<sip:10014002006@ericsson.se>;tag=i1o4954c-7\\r\\nTo:<sip:10014002007@ericsson.se>\\r\\nVia:SIP/2.0/TCP 142.133.142.3:5060;branch=z9hG4bKf1f965ce3efd3a62494f8cec71bc2c0d199a\\r\\n\\r\\n\")}" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.392096", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "388", function_name: "function:processCommand", message: " Sent on sipInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.392212", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "74", function_name: "function:sipRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.392256", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "253", function_name: "function:receiveInternalMessage", message: " Message enqueued on sipInternalPort[0] from 849 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.392329", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Receive operation on port sipInternalPort[0] succeeded, message from 849: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.392365", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Message with id 12 was extracted from the queue of sipInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.392393", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "255", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.396146", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.406191", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "286", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.406987", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on sipInternalPort[0] to 849 @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMMAND_SIP_SEND_SIP_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"2\" }, { parameterName := \"SUBSCRIBER\", parameterValue := \"11\" } } }, aspsSip := { { aspRequest := { addr := omit, request := { requestLine := { method := INVITE_E (4), requestUri := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" } }, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := { fieldName := ACCEPT_CONTACT_E (1), ac_values := { { { id := \"+g.oma.sip-im\", paramValue := omit } } } }, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := { fieldName := ALLOW_E (7), methods := { \"INVITE\", \"BYE\", \"ACK\", \"CANCEL\", \"UPDATE\" } }, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"VAT_callId_79564\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"8cf72980-08e3-4819-943d-f7260f67318d\" }, { id := \"transport\", paramValue := \"TCP\" }, { id := \"fid\", paramValue := \"wcg-ft3_1\" } }, headers := omit } } }, contactParams := { { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := { fieldName := CONTENT_TYPE_E (19), mediaType := \"multipart/mixed; boundary=\\\"--=Part_jlJ94hBw16CErXnvMxJd2vfs90jDEP\\\"\" }, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"INVITE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"from_50592\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := { fieldName := MIN_SE_E (38), deltaSec := \"90\", params := omit }, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := { fieldName := P_ASSERTED_ID_E (43), ids := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, { nameAddr := { displayName := omit, addrSpec := { scheme := \"tel\", userInfo := { userOrTelephoneSubscriber := \"+10014002006\", password := omit }, hostPort := { host := omit, portField := omit }, urlParameters := omit, headers := omit } } } } }, p_associated_uri := omit, p_called_party_id := { fieldName := P_CALLED_PARTY_ID (45), called_pty_id := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } }, cpid_param := omit }, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := { fieldName := REQUIRE_E (80), optionsTags := { \"timer\" } }, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := { fieldName := SESSION_EXPIRES_E (88), deltaSec := \"3600\", se_params := { { id := \"refresher\", paramValue := \"uac\" } } }, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := { fieldName := SUBJECT_E (94), summary := \"Body message 10014002006 to 10014002007\" }, subscription_state := omit, supported := { fieldName := SUPPORTED_E (96), optionsTags := { \"timer\" } }, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := omit, portField := omit }, viaParams := { { id := \"branch\", paramValue := \"via_13102\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := { fieldName := CONTRIBUTION_ID_E (117), name_value := \"CHAT:10014002007@ericsson.se\" }, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := \"----=Part_jlJ94hBw16CErXnvMxJd2vfs90jDEP\\r\\nContent-Type: message/cpim\\r\\n\\r\\nTo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:29+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: XKDf1g9a\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002006 to 10014002007\\r\\n----=Part_jlJ94hBw16CErXnvMxJd2vfs90jDEP\\r\\nContent-Type: application/sdp\\r\\n\\r\\nv=0\\r\\no=10014002006 3590934420 3590934420 IN IP4 142.133.150.169\\r\\ns=-\\r\\nc=IN IP4 142.133.150.169\\r\\nt=0 0\\r\\nm=message 17077 TCP/MSRP *\\r\\na=accept-types:*\\r\\na=connection:new\\r\\na=sendrecv\\r\\na=setup:active\\r\\na=path:msrp://142.133.150.169:17077/SessionId18VAT;tcp\\r\\n----=Part_jlJ94hBw16CErXnvMxJd2vfs90jDEP--\\r\\n\", payload := omit } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.407394", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.407575", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on sipInternalPort from mtc @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMMAND_SIP_SEND_SIP_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"2\" }, { parameterName := \"SUBSCRIBER\", parameterValue := \"11\" } } }, aspsSip := { { aspRequest := { addr := omit, request := { requestLine := { method := INVITE_E (4), requestUri := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" } }, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := { fieldName := ACCEPT_CONTACT_E (1), ac_values := { { { id := \"+g.oma.sip-im\", paramValue := omit } } } }, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := { fieldName := ALLOW_E (7), methods := { \"INVITE\", \"BYE\", \"ACK\", \"CANCEL\", \"UPDATE\" } }, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"VAT_callId_79564\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"8cf72980-08e3-4819-943d-f7260f67318d\" }, { id := \"transport\", paramValue := \"TCP\" }, { id := \"fid\", paramValue := \"wcg-ft3_1\" } }, headers := omit } } }, contactParams := { { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := { fieldName := CONTENT_TYPE_E (19), mediaType := \"multipart/mixed; boundary=\\\"--=Part_jlJ94hBw16CErXnvMxJd2vfs90jDEP\\\"\" }, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"INVITE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"from_50592\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := { fieldName := MIN_SE_E (38), deltaSec := \"90\", params := omit }, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := { fieldName := P_ASSERTED_ID_E (43), ids := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, { nameAddr := { displayName := omit, addrSpec := { scheme := \"tel\", userInfo := { userOrTelephoneSubscriber := \"+10014002006\", password := omit }, hostPort := { host := omit, portField := omit }, urlParameters := omit, headers := omit } } } } }, p_associated_uri := omit, p_called_party_id := { fieldName := P_CALLED_PARTY_ID (45), called_pty_id := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } }, cpid_param := omit }, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := { fieldName := REQUIRE_E (80), optionsTags := { \"timer\" } }, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := { fieldName := SESSION_EXPIRES_E (88), deltaSec := \"3600\", se_params := { { id := \"refresher\", paramValue := \"uac\" } } }, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := { fieldName := SUBJECT_E (94), summary := \"Body message 10014002006 to 10014002007\" }, subscription_state := omit, supported := { fieldName := SUPPORTED_E (96), optionsTags := { \"timer\" } }, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := omit, portField := omit }, viaParams := { { id := \"branch\", paramValue := \"via_13102\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := { fieldName := CONTRIBUTION_ID_E (117), name_value := \"CHAT:10014002007@ericsson.se\" }, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := \"----=Part_jlJ94hBw16CErXnvMxJd2vfs90jDEP\\r\\nContent-Type: message/cpim\\r\\n\\r\\nTo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:29+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: XKDf1g9a\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002006 to 10014002007\\r\\n----=Part_jlJ94hBw16CErXnvMxJd2vfs90jDEP\\r\\nContent-Type: application/sdp\\r\\n\\r\\nv=0\\r\\no=10014002006 3590934420 3590934420 IN IP4 142.133.150.169\\r\\ns=-\\r\\nc=IN IP4 142.133.150.169\\r\\nt=0 0\\r\\nm=message 17077 TCP/MSRP *\\r\\na=accept-types:*\\r\\na=connection:new\\r\\na=sendrecv\\r\\na=setup:active\\r\\na=path:msrp://142.133.150.169:17077/SessionId18VAT;tcp\\r\\n----=Part_jlJ94hBw16CErXnvMxJd2vfs90jDEP--\\r\\n\", payload := omit } } } }} id 12" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.408075", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port sipInternalPort succeeded, message from mtc: @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMMAND_SIP_SEND_SIP_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"2\" }, { parameterName := \"SUBSCRIBER\", parameterValue := \"11\" } } }, aspsSip := { { aspRequest := { addr := omit, request := { requestLine := { method := INVITE_E (4), requestUri := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" } }, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := { fieldName := ACCEPT_CONTACT_E (1), ac_values := { { { id := \"+g.oma.sip-im\", paramValue := omit } } } }, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := { fieldName := ALLOW_E (7), methods := { \"INVITE\", \"BYE\", \"ACK\", \"CANCEL\", \"UPDATE\" } }, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"VAT_callId_79564\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"8cf72980-08e3-4819-943d-f7260f67318d\" }, { id := \"transport\", paramValue := \"TCP\" }, { id := \"fid\", paramValue := \"wcg-ft3_1\" } }, headers := omit } } }, contactParams := { { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := { fieldName := CONTENT_TYPE_E (19), mediaType := \"multipart/mixed; boundary=\\\"--=Part_jlJ94hBw16CErXnvMxJd2vfs90jDEP\\\"\" }, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"INVITE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"from_50592\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := { fieldName := MIN_SE_E (38), deltaSec := \"90\", params := omit }, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := { fieldName := P_ASSERTED_ID_E (43), ids := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, { nameAddr := { displayName := omit, addrSpec := { scheme := \"tel\", userInfo := { userOrTelephoneSubscriber := \"+10014002006\", password := omit }, hostPort := { host := omit, portField := omit }, urlParameters := omit, headers := omit } } } } }, p_associated_uri := omit, p_called_party_id := { fieldName := P_CALLED_PARTY_ID (45), called_pty_id := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } }, cpid_param := omit }, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := { fieldName := REQUIRE_E (80), optionsTags := { \"timer\" } }, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := { fieldName := SESSION_EXPIRES_E (88), deltaSec := \"3600\", se_params := { { id := \"refresher\", paramValue := \"uac\" } } }, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := { fieldName := SUBJECT_E (94), summary := \"Body message 10014002006 to 10014002007\" }, subscription_state := omit, supported := { fieldName := SUPPORTED_E (96), optionsTags := { \"timer\" } }, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := omit, portField := omit }, viaParams := { { id := \"branch\", paramValue := \"via_13102\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := { fieldName := CONTRIBUTION_ID_E (117), name_value := \"CHAT:10014002007@ericsson.se\" }, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := \"----=Part_jlJ94hBw16CErXnvMxJd2vfs90jDEP\\r\\nContent-Type: message/cpim\\r\\n\\r\\nTo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:29+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: XKDf1g9a\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002006 to 10014002007\\r\\n----=Part_jlJ94hBw16CErXnvMxJd2vfs90jDEP\\r\\nContent-Type: application/sdp\\r\\n\\r\\nv=0\\r\\no=10014002006 3590934420 3590934420 IN IP4 142.133.150.169\\r\\ns=-\\r\\nc=IN IP4 142.133.150.169\\r\\nt=0 0\\r\\nm=message 17077 TCP/MSRP *\\r\\na=accept-types:*\\r\\na=connection:new\\r\\na=sendrecv\\r\\na=setup:active\\r\\na=path:msrp://142.133.150.169:17077/SessionId18VAT;tcp\\r\\n----=Part_jlJ94hBw16CErXnvMxJd2vfs90jDEP--\\r\\n\", payload := omit } } } }} id 12" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.408237", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Message with id 12 was extracted from the queue of sipInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.408283", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "80", function_name: "function:sipRun", message: " Stop timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.409270", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on sipClientPort to system @IPL4_demo_types.SIP_SendTo : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, proto := { tcp := { } }, msg := { raw := \"INVITE sip:10014002007@ericsson.se;csid=2838ab5a-e194-4923-81af-c9f0a544f667 SIP/2.0\\r\\nAccept-Contact:*;+g.oma.sip-im\\r\\nAllow:INVITE\\r\\nAllow:BYE\\r\\nAllow:ACK\\r\\nAllow:CANCEL\\r\\nAllow:UPDATE\\r\\nCall-ID:VAT_callId_79564\\r\\nContact:<sip:10014002006@142.133.150.169:26720;csid=8cf72980-08e3-4819-943d-f7260f67318d;transport=TCP;fid=wcg-ft3_1>;+g.oma.sip-im;+g.gsma.rcs.ipcall;+g.3gpp.icsi-ref=\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\";+g.3gpp.cs-voice;+g.3gpp.iari-ref=\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\";video\\r\\nContent-Length:740\\r\\nContent-Type:multipart/mixed; boundary=\\\"--=Part_jlJ94hBw16CErXnvMxJd2vfs90jDEP\\\"\\r\\nCSeq:1 INVITE\\r\\nFrom:<sip:10014002006@ericsson.se>;tag=from_50592\\r\\nMax-Forwards:69\\r\\nContribution-Id:CHAT:10014002007@ericsson.se\\r\\nMin-SE:90\\r\\nP-Asserted-Identity:<sip:10014002006@ericsson.se>\\r\\nP-Asserted-Identity:<tel:+10014002006>\\r\\nP-Called-Party-ID:<sip:10014002006@ericsson.se>\\r\\nRequire:timer\\r\\nSession-Expires:3600;refresher=uac\\r\\nSubject:Body message 10014002006 to 10014002007\\r\\nSupported:timer\\r\\nTo:<sip:10014002007@ericsson.se>\\r\\nVia:SIP/2.0/TCP 142.133.150.169:26720;branch=via_13102\\r\\n\\r\\n----=Part_jlJ94hBw16CErXnvMxJd2vfs90jDEP\\r\\nContent-Type: message/cpim\\r\\n\\r\\nTo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:29+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: XKDf1g9a\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002006 to 10014002007\\r\\n----=Part_jlJ94hBw16CErXnvMxJd2vfs90jDEP\\r\\nContent-Type: application/sdp\\r\\n\\r\\nv=0\\r\\no=10014002006 3590934420 3590934420 IN IP4 142.133.150.169\\r\\ns=-\\r\\nc=IN IP4 142.133.150.169\\r\\nt=0 0\\r\\nm=message 17077 TCP/MSRP *\\r\\na=accept-types:*\\r\\na=connection:new\\r\\na=sendrecv\\r\\na=setup:active\\r\\na=path:msrp://142.133.150.169:17077/SessionId18VAT;tcp\\r\\n----=Part_jlJ94hBw16CErXnvMxJd2vfs90jDEP--\\r\\n\" }}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.409589", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Outgoing message was mapped to @IPL4asp_Types.ASP_SendTo : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, proto := { tcp := { } }, msgsip:10014002007@ericsson.se;csid=2838ab5a-e194-4923-81af-c9f0a544f667 SIP/2.0\\r\\nAccept-Contact:*;+g.oma.sip-im\\r\\nAllow:INVITE\\r\\nAllow:BYE\\r\\nAllow:ACK\\r\\nAllow:CANCEL\\r\\nAllow:UPDATE\\r\\nCall-ID:VAT_callId_79564\\r\\nContact:<sip:10014002006@142.133.150.169:26720;csid=8cf72980-08e3-4819-943d-f7260f67318d;transport=TCP;fid=wcg-ft3_1>;+g.oma.sip-im;+g.gsma.rcs.ipcall;+g.3gpp.icsi-ref=\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\";+g.3gpp.cs-voice;+g.3gpp.iari-ref=\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\";video\\r\\nContent-Length:740\\r\\nContent-Type:multipart/mixed; boundary=\\\"--=Part_jlJ94hBw16CErXnvMxJd2vfs90jDEP\\\"\\r\\nCSeq:1 INVITE\\r\\nFrom:<sip:10014002006@ericsson.se>;tag=from_50592\\r\\nMax-Forwards:69\\r\\nContribution-Id:CHAT:10014002007@ericsson.se\\r\\nMin-SE:90\\r\\nP-Asserted-Identity:<sip:10014002006@ericsson.se>\\r\\nP-Asserted-Identity:<tel:+10014002006>\\r\\nP-Called-Party-ID:<sip:10014002006@ericsson.se>\\r\\nRequire:timer\\r\\nSession-Expires:3600;refresher=uac\\r\\nSubject:Body message 10014002006 to 10014002007\\r\\nSupported:timer\\r\\nTo:<sip:10014002007@ericsson.se>\\r\\nVia:SIP/2.0/TCP 142.133.150.169:26720;branch=via_13102\\r\\n\\r\\n----=Part_jlJ94hBw16CErXnvMxJd2vfs90jDEP\\r\\nContent-Type: message/cpim\\r\\n\\r\\nTo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:29+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: XKDf1g9a\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002006 to 10014002007\\r\\n----=Part_jlJ94hBw16CErXnvMxJd2vfs90jDEP\\r\\nContent-Type: application/sdp\\r\\n\\r\\nv=0\\r\\no=10014002006 3590934420 3590934420 IN IP4 142.133.150.169\\r\\ns=-\\r\\nc=IN IP4 142.133.150.169\\r\\nt=0 0\\r\\nm=message 17077 TCP/MSRP *\\r\\na=accept-types:*\\r\\na=connection:new\\r\\na=sendrecv\\r\\na=setup:active\\r\\na=path:msrp://142.133.150.169:17077/SessionId18VAT;tcp\\r\\n----=Part_jlJ94hBw16CErXnvMxJd2vfs90jDEP--\\r\\n\")}" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.409881", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "388", function_name: "function:processCommand", message: " Sent on sipInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.409989", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "74", function_name: "function:sipRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.410008", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "253", function_name: "function:receiveInternalMessage", message: " Message enqueued on sipInternalPort[0] from 849 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.410083", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Receive operation on port sipInternalPort[0] succeeded, message from 849: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.410120", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Message with id 13 was extracted from the queue of sipInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.410149", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "255", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.410732", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.421753", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "286", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.421875", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "202", function_name: "function:sendInternalMessage", message: " Sent on sipInternalPort[0] to 849 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.422029", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "78", function_name: "function:sipRun", message: " Message enqueued on sipInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.422104", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.422112", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Receive operation on port sipInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.422147", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Message with id 13 was extracted from the queue of sipInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.422170", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "80", function_name: "function:sipRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.422356", component: "849", peer_component: "BaseSipClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "320", function_name: "function:generalReceiveSip", message: " Start timer timerWaitForSipMessage: 15 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.442291", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on sipClientPort from system @IPL4asp_Types.ASP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msgrying\\r\\nContent-Length: 0\\r\\nTo: <sip:10014002007@ericsson.se>\\r\\nCseq: 1 INVITE\\r\\nVia: SIP/2.0/TCP 142.133.150.169:26720;branch=via_13102\\r\\nServer: SipBoss-1.0\\r\\nFrom: <sip:10014002006@ericsson.se>;tag=from_50592\\r\\nCall-Id: VAT_callId_79564\\r\\n\\r\\n\")} id 7" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.442860", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Incoming message was mapped to @IPL4_demo_types.SIP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msg := { response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 100, reasonPhrase := \"Trying\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"VAT_callId_79564\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"INVITE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"from_50592\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := { fieldName := SERVER_E (90), serverBody := { \"SipBoss-1.0\" } }, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.150.169\", portField := 26720 }, viaParams := { { id := \"branch\", paramValue := \"via_13102\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } }} id 7" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.443175", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port sipClientPort succeeded, message from system(): @IPL4_demo_types.SIP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msg := { response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 100, reasonPhrase := \"Trying\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"VAT_callId_79564\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"INVITE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"from_50592\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := { fieldName := SERVER_E (90), serverBody := { \"SipBoss-1.0\" } }, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.150.169\", portField := 26720 }, viaParams := { { id := \"branch\", paramValue := \"via_13102\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } }} id 7" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.443286", component: "849", peer_component: "BaseSipClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "325", function_name: "function:generalReceiveSip", message: " Message with id 7 was extracted from the queue of sipClientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.443318", component: "849", peer_component: "BaseSipClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "326", function_name: "function:generalReceiveSip", message: " Stop timer timerWaitForSipMessage: 15 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.444307", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on sipInternalPort to mtc @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspResponse := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 100, reasonPhrase := \"Trying\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"VAT_callId_79564\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"INVITE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"from_50592\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := { fieldName := SERVER_E (90), serverBody := { \"SipBoss-1.0\" } }, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.150.169\", portField := 26720 }, viaParams := { { id := \"branch\", paramValue := \"via_13102\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.444543", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "74", function_name: "function:sipRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.444990", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on sipInternalPort[0] from 849 @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspResponse := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 100, reasonPhrase := \"Trying\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"VAT_callId_79564\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"INVITE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"from_50592\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := { fieldName := SERVER_E (90), serverBody := { \"SipBoss-1.0\" } }, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.150.169\", portField := 26720 }, viaParams := { { id := \"branch\", paramValue := \"via_13102\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 14" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.445262", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port sipInternalPort[0] succeeded, message from 849: @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspResponse := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 100, reasonPhrase := \"Trying\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"VAT_callId_79564\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"INVITE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"from_50592\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := { fieldName := SERVER_E (90), serverBody := { \"SipBoss-1.0\" } }, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.150.169\", portField := 26720 }, viaParams := { { id := \"branch\", paramValue := \"via_13102\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 14" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.445374", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Message with id 14 was extracted from the queue of sipInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.445407", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "255", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.448224", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.458272", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "286", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.458383", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "202", function_name: "function:sendInternalMessage", message: " Sent on sipInternalPort[0] to 849 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.458520", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "78", function_name: "function:sipRun", message: " Message enqueued on sipInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.458592", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Receive operation on port sipInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.458594", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.458623", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Message with id 14 was extracted from the queue of sipInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.458646", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "80", function_name: "function:sipRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.458812", component: "849", peer_component: "BaseSipClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "320", function_name: "function:generalReceiveSip", message: " Start timer timerWaitForSipMessage: 15 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.600217", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on sipClientPort from system @IPL4asp_Types.ASP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msginging\\r\\nContent-Length: 0\\r\\nTo: <sip:10014002007@ericsson.se>;tag=i1o495cq-8\\r\\nContact: <sip:10014002007@142.133.142.3:5060;csid=2838ab5a-e194-4923-81af-c9f0a544f667;transport=TCP;fid=wcg-ft3_1>;+g.gsma.rcs.ipcall;+g.3gpp.icsi-ref=\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\";+g.3gpp.cs-voice;+g.3gpp.iari-ref=\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\";+g.oma.sip-im;video\\r\\nCseq: 1 INVITE\\r\\nVia: SIP/2.0/TCP 142.133.150.169:26720;branch=via_13102\\r\\nCall-Id: VAT_callId_79564\\r\\nFrom: <sip:10014002006@ericsson.se>;tag=from_50592\\r\\nServer: H2S\\r\\n\\r\\n\")} id 8" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.600829", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Incoming message was mapped to @IPL4_demo_types.SIP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msg := { response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 180, reasonPhrase := \"Ringing\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"VAT_callId_79564\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" }, { id := \"fid\", paramValue := \"wcg-ft3_1\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"video\", paramValue := omit } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"INVITE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"from_50592\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := { fieldName := SERVER_E (90), serverBody := { \"H2S\" } }, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"i1o495cq-8\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.150.169\", portField := 26720 }, viaParams := { { id := \"branch\", paramValue := \"via_13102\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } }} id 8" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.601117", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port sipClientPort succeeded, message from system(): @IPL4_demo_types.SIP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msg := { response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 180, reasonPhrase := \"Ringing\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"VAT_callId_79564\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" }, { id := \"fid\", paramValue := \"wcg-ft3_1\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"video\", paramValue := omit } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"INVITE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"from_50592\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := { fieldName := SERVER_E (90), serverBody := { \"H2S\" } }, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"i1o495cq-8\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.150.169\", portField := 26720 }, viaParams := { { id := \"branch\", paramValue := \"via_13102\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } }} id 8" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.601236", component: "849", peer_component: "BaseSipClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "325", function_name: "function:generalReceiveSip", message: " Message with id 8 was extracted from the queue of sipClientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.601264", component: "849", peer_component: "BaseSipClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "326", function_name: "function:generalReceiveSip", message: " Stop timer timerWaitForSipMessage: 15 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.602111", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on sipInternalPort to mtc @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspResponse := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 180, reasonPhrase := \"Ringing\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"VAT_callId_79564\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" }, { id := \"fid\", paramValue := \"wcg-ft3_1\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"video\", paramValue := omit } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"INVITE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"from_50592\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := { fieldName := SERVER_E (90), serverBody := { \"H2S\" } }, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"i1o495cq-8\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.150.169\", portField := 26720 }, viaParams := { { id := \"branch\", paramValue := \"via_13102\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.602312", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "74", function_name: "function:sipRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.602502", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on sipInternalPort[0] from 849 @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspResponse := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 180, reasonPhrase := \"Ringing\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"VAT_callId_79564\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" }, { id := \"fid\", paramValue := \"wcg-ft3_1\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"video\", paramValue := omit } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"INVITE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"from_50592\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := { fieldName := SERVER_E (90), serverBody := { \"H2S\" } }, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"i1o495cq-8\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.150.169\", portField := 26720 }, viaParams := { { id := \"branch\", paramValue := \"via_13102\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 15" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.602811", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port sipInternalPort[0] succeeded, message from 849: @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspResponse := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 180, reasonPhrase := \"Ringing\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"VAT_callId_79564\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" }, { id := \"fid\", paramValue := \"wcg-ft3_1\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"video\", paramValue := omit } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"INVITE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"from_50592\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := { fieldName := SERVER_E (90), serverBody := { \"H2S\" } }, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"i1o495cq-8\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.150.169\", portField := 26720 }, viaParams := { { id := \"branch\", paramValue := \"via_13102\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 15" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.602926", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Message with id 15 was extracted from the queue of sipInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.602972", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "255", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.613318", component: "855", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port clientPort was started." }
Simple DataFrame { time: "2014/Oct/24 18:34:29.613367", component: "855", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port serverPort was started." }
Simple DataFrame { time: "2014/Oct/24 18:34:29.613392", component: "855", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port httpNodeInternalPort was started." }
Simple DataFrame { time: "2014/Oct/24 18:34:29.613411", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 10 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.615576", component: "855", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "130", function_name: "function:httpNodeInitialize", message: " Port clientPort was mapped to system:clientPort[4]" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.616029", component: "855", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "133", function_name: "function:httpNodeInitialize", message: " Port serverPort was mapped to system:serverPort[4]" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.616530", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port httpNodeInternalPort[4] is waiting for connection from 855:httpNodeInternalPort on UNIX pathname /tmp/ttcn3-portconn-2d0b9d2a." }
Simple DataFrame { time: "2014/Oct/24 18:34:29.616741", component: "855", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "136", function_name: "function:httpNodeInitialize", message: " Port httpNodeInternalPort has established the connection with mtc:httpNodeInternalPort[4] using transport type UNIX" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.616812", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "239", function_name: "function:receiveInternalMessage", message: " Port httpNodeInternalPort[4] has accepted the connection from 855:httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.617120", component: "855", peer_component: "BaseHttpServerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "55", function_name: "function:openServerForListening", message: " Sent on serverPort to system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.617245", component: "855", peer_component: "BaseHttpServerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "55", function_name: "function:openServerForListening", message: " Message enqueued on serverPort from system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.617280", component: "855", peer_component: "BaseHttpServerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "73", function_name: "function:receiveHTTPServerListenResult", message: " Start timer timerWaitForHTTPRequest: 5 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.617321", component: "855", peer_component: "BaseHttpServerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "77", function_name: "function:receiveHTTPServerListenResult", message: " Receive operation on port serverPort succeeded, message from system(" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.617345", component: "855", peer_component: "BaseHttpServerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "77", function_name: "function:receiveHTTPServerListenResult", message: " Message with id 1 was extracted from the queue of serverPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.617363", component: "855", peer_component: "BaseHttpServerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "78", function_name: "function:receiveHTTPServerListenResult", message: " Stop timer timerWaitForHTTPRequest: 5 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.617446", component: "855", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "141", function_name: "function:httpNodeInitialize", message: " Sent on httpNodeInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.617533", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "239", function_name: "function:receiveInternalMessage", message: " Message enqueued on httpNodeInternalPort[4] from 855 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.617545", component: "855", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "62", function_name: "function:httpNodeRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.617587", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Receive operation on port httpNodeInternalPort[4] succeeded, message from 855: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.617616", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Message with id 1 was extracted from the queue of httpNodeInternalPort[4]" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.617639", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "241", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 10 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.617887", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.629735", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "267", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.629893", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort[4] to 855 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"3\" } } }, aspHttp := { { httpMessage := { method := \"GET\", url := \"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/channels\", body := \"\", contentType := \"\", statusCode := \"\", header := { } } } }}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.630025", component: "855", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort from mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"3\" } } }, aspHttp := { { httpMessage := { method := \"GET\", url := \"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/channels\", body := \"\", contentType := \"\", statusCode := \"\", header := { } } } }} id 1" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.630090", component: "855", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort succeeded, message from mtc: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"3\" } } }, aspHttp := { { httpMessage := { method := \"GET\", url := \"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/channels\", body := \"\", contentType := \"\", statusCode := \"\", header := { } } } }} id 1" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.630127", component: "855", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "67", function_name: "function:httpNodeRun", message: " Message with id 1 was extracted from the queue of httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.630138", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.630161", component: "855", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "68", function_name: "function:httpNodeRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.630389", component: "855", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "307", function_name: "function:clearHTTPClientPort", message: " Start timer timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.630414", component: "855", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "313", function_name: "function:clearHTTPClientPort", message: " Timeout timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.630479", component: "855", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Sent on clientPort to system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.631187", component: "855", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Message enqueued on clientPort from system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.631226", component: "855", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "243", function_name: "function:sendHTTPClientRequest", message: " Start timer timerWaitForHTTPOpenConnection: 2 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.631256", component: "855", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Receive operation on port clientPort succeeded, message from system(" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.631275", component: "855", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Message with id 1 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.631293", component: "855", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "246", function_name: "function:sendHTTPClientRequest", message: " Stop timer timerWaitForHTTPOpenConnection: 2 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.631387", component: "855", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on clientPort to system @HTTPmsg_Types.HTTPMessage : { request := { client_id := 9, method := \"GET\", uri := \"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/channels\", version_major := 1, version_minor := 1, header := { { header_name := \"Host\", header_value := \"142.133.142.3\" }, { header_name := \"Content-Length\", header_value := \"0\" } }, body := \"\" }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.631519", component: "855", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "189", function_name: "function:receiveAnyHTTPClientResponse", message: " Start timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.653797", component: "855", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on clientPort from system @HTTPmsg_Types.HTTPMessage : { response := { client_id := 9, version_major := 1, version_minor := 1, statuscode := 200, statustext := \"OK\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:28 GMT\" } }, body := \"{\\n \\\"events\\\": {\\n \\\"list\\\": [ {\\n \\\"eventObject\\\": {\\n \\\"@type\\\": \\\"message\\\",\\n \\\"from\\\": \\\"sip:10014002006@ericsson.se\\\",\\n \\\"contentType\\\": \\\"text/plain\\\",\\n \\\"reportRequest\\\": [ \\\"Delivered\\\" ],\\n \\\"msgId\\\": \\\"XKDf1g9a\\\",\\n \\\"dateTime\\\": \\\"2014-10-24T22:34:29+00:00\\\",\\n \\\"body\\\": \\\"Body message 10014002006 to 10014002007\\\",\\n \\\"type\\\": \\\"session-message\\\"\\n }\\n } ]\\n }\\n}\" }} id 2" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.653939", component: "855", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port clientPort succeeded, message from system(): @HTTPmsg_Types.HTTPMessage : { response := { client_id := 9, version_major := 1, version_minor := 1, statuscode := 200, statustext := \"OK\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:28 GMT\" } }, body := \"{\\n \\\"events\\\": {\\n \\\"list\\\": [ {\\n \\\"eventObject\\\": {\\n \\\"@type\\\": \\\"message\\\",\\n \\\"from\\\": \\\"sip:10014002006@ericsson.se\\\",\\n \\\"contentType\\\": \\\"text/plain\\\",\\n \\\"reportRequest\\\": [ \\\"Delivered\\\" ],\\n \\\"msgId\\\": \\\"XKDf1g9a\\\",\\n \\\"dateTime\\\": \\\"2014-10-24T22:34:29+00:00\\\",\\n \\\"body\\\": \\\"Body message 10014002006 to 10014002007\\\",\\n \\\"type\\\": \\\"session-message\\\"\\n }\\n } ]\\n }\\n}\" }} id 2" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.653974", component: "855", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "193", function_name: "function:receiveAnyHTTPClientResponse", message: " Message with id 2 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.653995", component: "855", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "194", function_name: "function:receiveAnyHTTPClientResponse", message: " Stop timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.654233", component: "855", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort to mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\n \\\"events\\\": {\\n \\\"list\\\": [ {\\n \\\"eventObject\\\": {\\n \\\"@type\\\": \\\"message\\\",\\n \\\"from\\\": \\\"sip:10014002006@ericsson.se\\\",\\n \\\"contentType\\\": \\\"text/plain\\\",\\n \\\"reportRequest\\\": [ \\\"Delivered\\\" ],\\n \\\"msgId\\\": \\\"XKDf1g9a\\\",\\n \\\"dateTime\\\": \\\"2014-10-24T22:34:29+00:00\\\",\\n \\\"body\\\": \\\"Body message 10014002006 to 10014002007\\\",\\n \\\"type\\\": \\\"session-message\\\"\\n }\\n } ]\\n }\\n}\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:28 GMT\" } } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.654311", component: "855", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "62", function_name: "function:httpNodeRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.654448", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort[4] from 855 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\n \\\"events\\\": {\\n \\\"list\\\": [ {\\n \\\"eventObject\\\": {\\n \\\"@type\\\": \\\"message\\\",\\n \\\"from\\\": \\\"sip:10014002006@ericsson.se\\\",\\n \\\"contentType\\\": \\\"text/plain\\\",\\n \\\"reportRequest\\\": [ \\\"Delivered\\\" ],\\n \\\"msgId\\\": \\\"XKDf1g9a\\\",\\n \\\"dateTime\\\": \\\"2014-10-24T22:34:29+00:00\\\",\\n \\\"body\\\": \\\"Body message 10014002006 to 10014002007\\\",\\n \\\"type\\\": \\\"session-message\\\"\\n }\\n } ]\\n }\\n}\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:28 GMT\" } } } } }} id 2" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.654585", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort[4] succeeded, message from 855: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\n \\\"events\\\": {\\n \\\"list\\\": [ {\\n \\\"eventObject\\\": {\\n \\\"@type\\\": \\\"message\\\",\\n \\\"from\\\": \\\"sip:10014002006@ericsson.se\\\",\\n \\\"contentType\\\": \\\"text/plain\\\",\\n \\\"reportRequest\\\": [ \\\"Delivered\\\" ],\\n \\\"msgId\\\": \\\"XKDf1g9a\\\",\\n \\\"dateTime\\\": \\\"2014-10-24T22:34:29+00:00\\\",\\n \\\"body\\\": \\\"Body message 10014002006 to 10014002007\\\",\\n \\\"type\\\": \\\"session-message\\\"\\n }\\n } ]\\n }\\n}\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:28 GMT\" } } } } }} id 2" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.654623", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Message with id 2 was extracted from the queue of httpNodeInternalPort[4]" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.654645", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "241", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.659691", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.669761", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "286", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.669985", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "202", function_name: "function:sendInternalMessage", message: " Sent on sipInternalPort[0] to 849 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.670201", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "78", function_name: "function:sipRun", message: " Message enqueued on sipInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.670317", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Receive operation on port sipInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.670328", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.670352", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Message with id 15 was extracted from the queue of sipInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.670371", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "80", function_name: "function:sipRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.670548", component: "849", peer_component: "BaseSipClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "320", function_name: "function:generalReceiveSip", message: " Start timer timerWaitForSipMessage: 15 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.708424", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on sipClientPort from system @IPL4asp_Types.ASP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msgsip:10014002006@ericsson.se SIP/2.0\\r\\nContent-Length: 570\\r\\nTo: <sip:10014002006@ericsson.se>\\r\\nCseq: 1 MESSAGE\\r\\nUser-Agent: H2S\\r\\nContribution-Id: CHAT:10014002007@ericsson.se\\r\\nAccept-Contact: *;+g.3gpp.icsi-ref=\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg\\\"\\r\\nMax-Forwards: 69\\r\\nP-Preferred-Service: urn:urn-7:3gpp-service.ims.icsi.oma.cpm.msg\\r\\nVia: SIP/2.0/TCP 142.133.142.3:5060;branch=z9hG4bKf1f97b1c0440d6054a7bb68defdbfae1d5c1\\r\\nContent-Type: message/cpim\\r\\nRoute: <sip:142.133.150.169:26720;lr;transport=TCP>\\r\\nFrom: <sip:10014002007@ericsson.se>;tag=i1o495fd-9\\r\\nCall-Id: 142.133.142.3_7_369017631180147225\\r\\nP-Preferred-Identity: sip:10014002007@ericsson.se\\r\\n\\r\\nTo: <sip:10014002006@ericsson.se>\\r\\nFrom: <sip:10014002007@ericsson.se>\\r\\nDateTime: 2014-10-24T22:34:29+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: imdn-T5m55e1i\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>XKDf1g9a</message-id><datetime>2014-10-24T22:34:29+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\")} id 9" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.709258", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Incoming message was mapped to @IPL4_demo_types.SIP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msg := { request := { requestLine := { method := MESSAGE_E (6), requestUri := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := { fieldName := ACCEPT_CONTACT_E (1), ac_values := { { { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg\\\"\" } } } }, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_7_369017631180147225\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 570 }, contentType := { fieldName := CONTENT_TYPE_E (19), mediaType := \"message/cpim\" }, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"MESSAGE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o495fd-9\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := { fieldName := P_PREFERRED_ID_E (55), ids := { { addrSpecUnion := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } } }, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := { fieldName := ROUTE_E (84), routeBody := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"lr\", paramValue := omit }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } }, rrParam := omit } } }, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f97b1c0440d6054a7bb68defdbfae1d5c1\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := { { headerName := \"Contribution-Id\", headerValue := \"CHAT:10014002007@ericsson.se\" }, { headerName := \"P-Preferred-Service\", headerValue := \"urn:urn-7:3gpp-service.ims.icsi.oma.cpm.msg\" } }, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := \"To: <sip:10014002006@ericsson.se>\\r\\nFrom: <sip:10014002007@ericsson.se>\\r\\nDateTime: 2014-10-24T22:34:29+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: imdn-T5m55e1i\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>XKDf1g9a</message-id><datetime>2014-10-24T22:34:29+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\", payload := omit } }} id 9" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.709648", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port sipClientPort succeeded, message from system(): @IPL4_demo_types.SIP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msg := { request := { requestLine := { method := MESSAGE_E (6), requestUri := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := { fieldName := ACCEPT_CONTACT_E (1), ac_values := { { { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg\\\"\" } } } }, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_7_369017631180147225\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 570 }, contentType := { fieldName := CONTENT_TYPE_E (19), mediaType := \"message/cpim\" }, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"MESSAGE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o495fd-9\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := { fieldName := P_PREFERRED_ID_E (55), ids := { { addrSpecUnion := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } } }, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := { fieldName := ROUTE_E (84), routeBody := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"lr\", paramValue := omit }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } }, rrParam := omit } } }, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f97b1c0440d6054a7bb68defdbfae1d5c1\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := { { headerName := \"Contribution-Id\", headerValue := \"CHAT:10014002007@ericsson.se\" }, { headerName := \"P-Preferred-Service\", headerValue := \"urn:urn-7:3gpp-service.ims.icsi.oma.cpm.msg\" } }, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := \"To: <sip:10014002006@ericsson.se>\\r\\nFrom: <sip:10014002007@ericsson.se>\\r\\nDateTime: 2014-10-24T22:34:29+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: imdn-T5m55e1i\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>XKDf1g9a</message-id><datetime>2014-10-24T22:34:29+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\", payload := omit } }} id 9" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.709802", component: "849", peer_component: "BaseSipClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "345", function_name: "function:generalReceiveSip", message: " Message with id 9 was extracted from the queue of sipClientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.709834", component: "849", peer_component: "BaseSipClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "346", function_name: "function:generalReceiveSip", message: " Stop timer timerWaitForSipMessage: 15 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.717354", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on sipInternalPort to mtc @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspRequest := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, request := { requestLine := { method := MESSAGE_E (6), requestUri := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := { fieldName := ACCEPT_CONTACT_E (1), ac_values := { { { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg\\\"\" } } } }, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_7_369017631180147225\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 570 }, contentType := { fieldName := CONTENT_TYPE_E (19), mediaType := \"message/cpim\" }, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"MESSAGE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o495fd-9\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := { fieldName := P_PREFERRED_ID_E (55), ids := { { addrSpecUnion := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } } }, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := { fieldName := ROUTE_E (84), routeBody := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"lr\", paramValue := omit }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } }, rrParam := omit } } }, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f97b1c0440d6054a7bb68defdbfae1d5c1\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := { { headerName := \"Contribution-Id\", headerValue := \"CHAT:10014002007@ericsson.se\" }, { headerName := \"P-Preferred-Service\", headerValue := \"urn:urn-7:3gpp-service.ims.icsi.oma.cpm.msg\" } }, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := { fieldName := CONTRIBUTION_ID_E (117), name_value := \"CHAT:10014002007@ericsson.se\" }, conversation_id := omit, x_correlation_id := omit, p_preferred_service := { fieldName := P_PREFERRED_SERVICE_E (126), name_value := \"urn:urn-7:3gpp-service.ims.icsi.oma.cpm.msg\" }, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := \"To: <sip:10014002006@ericsson.se>\\r\\nFrom: <sip:10014002007@ericsson.se>\\r\\nDateTime: 2014-10-24T22:34:29+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: imdn-T5m55e1i\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>XKDf1g9a</message-id><datetime>2014-10-24T22:34:29+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\", payload := omit } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.717665", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "74", function_name: "function:sipRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.717965", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on sipInternalPort[0] from 849 @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspRequest := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, request := { requestLine := { method := MESSAGE_E (6), requestUri := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := { fieldName := ACCEPT_CONTACT_E (1), ac_values := { { { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg\\\"\" } } } }, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_7_369017631180147225\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 570 }, contentType := { fieldName := CONTENT_TYPE_E (19), mediaType := \"message/cpim\" }, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"MESSAGE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o495fd-9\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := { fieldName := P_PREFERRED_ID_E (55), ids := { { addrSpecUnion := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } } }, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := { fieldName := ROUTE_E (84), routeBody := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"lr\", paramValue := omit }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } }, rrParam := omit } } }, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f97b1c0440d6054a7bb68defdbfae1d5c1\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := { { headerName := \"Contribution-Id\", headerValue := \"CHAT:10014002007@ericsson.se\" }, { headerName := \"P-Preferred-Service\", headerValue := \"urn:urn-7:3gpp-service.ims.icsi.oma.cpm.msg\" } }, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := { fieldName := CONTRIBUTION_ID_E (117), name_value := \"CHAT:10014002007@ericsson.se\" }, conversation_id := omit, x_correlation_id := omit, p_preferred_service := { fieldName := P_PREFERRED_SERVICE_E (126), name_value := \"urn:urn-7:3gpp-service.ims.icsi.oma.cpm.msg\" }, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := \"To: <sip:10014002006@ericsson.se>\\r\\nFrom: <sip:10014002007@ericsson.se>\\r\\nDateTime: 2014-10-24T22:34:29+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: imdn-T5m55e1i\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>XKDf1g9a</message-id><datetime>2014-10-24T22:34:29+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\", payload := omit } } } }} id 16" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.718238", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port sipInternalPort[0] succeeded, message from 849: @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspRequest := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, request := { requestLine := { method := MESSAGE_E (6), requestUri := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := { fieldName := ACCEPT_CONTACT_E (1), ac_values := { { { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg\\\"\" } } } }, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_7_369017631180147225\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 570 }, contentType := { fieldName := CONTENT_TYPE_E (19), mediaType := \"message/cpim\" }, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"MESSAGE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o495fd-9\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := { fieldName := P_PREFERRED_ID_E (55), ids := { { addrSpecUnion := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } } }, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := { fieldName := ROUTE_E (84), routeBody := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"lr\", paramValue := omit }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } }, rrParam := omit } } }, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f97b1c0440d6054a7bb68defdbfae1d5c1\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := { { headerName := \"Contribution-Id\", headerValue := \"CHAT:10014002007@ericsson.se\" }, { headerName := \"P-Preferred-Service\", headerValue := \"urn:urn-7:3gpp-service.ims.icsi.oma.cpm.msg\" } }, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := { fieldName := CONTRIBUTION_ID_E (117), name_value := \"CHAT:10014002007@ericsson.se\" }, conversation_id := omit, x_correlation_id := omit, p_preferred_service := { fieldName := P_PREFERRED_SERVICE_E (126), name_value := \"urn:urn-7:3gpp-service.ims.icsi.oma.cpm.msg\" }, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := \"To: <sip:10014002006@ericsson.se>\\r\\nFrom: <sip:10014002007@ericsson.se>\\r\\nDateTime: 2014-10-24T22:34:29+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: imdn-T5m55e1i\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>XKDf1g9a</message-id><datetime>2014-10-24T22:34:29+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\", payload := omit } } } }} id 16" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.718340", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Message with id 16 was extracted from the queue of sipInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.718364", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "255", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.722887", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.733534", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "286", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.734354", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on sipInternalPort[0] to 849 @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMMAND_SIP_SEND_SIP_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"4\" }, { parameterName := \"SUBSCRIBER\", parameterValue := \"11\" } } }, aspsSip := { { aspRequest := { addr := omit, request := { requestLine := { method := MESSAGE_E (6), requestUri := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := { { id := \"csid\", paramValue := \"8cf72980-08e3-4819-943d-f7260f67318d\" } }, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := { fieldName := ACCEPT_CONTACT_E (1), ac_values := { { { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg\\\"\" } } } }, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"callId_33061\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := { fieldName := CONTENT_TYPE_E (19), mediaType := \"message/cpim\" }, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"MESSAGE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"from_40451\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := { fieldName := P_ASSERTED_ID_E (43), ids := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } } } }, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := omit, portField := omit }, viaParams := { { id := \"branch\", paramValue := \"via_69094\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := { fieldName := CONTRIBUTION_ID_E (117), name_value := \"CHAT:10014002007@ericsson.se\" }, conversation_id := omit, x_correlation_id := omit, p_preferred_service := { fieldName := P_PREFERRED_SERVICE_E (126), name_value := \"urn:urn-7:3gpp-service.ims.icsi.oma.cpm.msg\" }, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := \"To: <sip:10014002006@ericsson.se>\\r\\nFrom: <sip:10014002007@ericsson.se>\\r\\nDateTime: 2014-10-24T22:34:29+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: imdn-T5m55e1i\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>XKDf1g9a</message-id><datetime>2014-10-24T22:34:29+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\", payload := omit } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.734663", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.734865", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on sipInternalPort from mtc @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMMAND_SIP_SEND_SIP_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"4\" }, { parameterName := \"SUBSCRIBER\", parameterValue := \"11\" } } }, aspsSip := { { aspRequest := { addr := omit, request := { requestLine := { method := MESSAGE_E (6), requestUri := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := { { id := \"csid\", paramValue := \"8cf72980-08e3-4819-943d-f7260f67318d\" } }, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := { fieldName := ACCEPT_CONTACT_E (1), ac_values := { { { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg\\\"\" } } } }, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"callId_33061\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := { fieldName := CONTENT_TYPE_E (19), mediaType := \"message/cpim\" }, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"MESSAGE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"from_40451\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := { fieldName := P_ASSERTED_ID_E (43), ids := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } } } }, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := omit, portField := omit }, viaParams := { { id := \"branch\", paramValue := \"via_69094\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := { fieldName := CONTRIBUTION_ID_E (117), name_value := \"CHAT:10014002007@ericsson.se\" }, conversation_id := omit, x_correlation_id := omit, p_preferred_service := { fieldName := P_PREFERRED_SERVICE_E (126), name_value := \"urn:urn-7:3gpp-service.ims.icsi.oma.cpm.msg\" }, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := \"To: <sip:10014002006@ericsson.se>\\r\\nFrom: <sip:10014002007@ericsson.se>\\r\\nDateTime: 2014-10-24T22:34:29+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: imdn-T5m55e1i\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>XKDf1g9a</message-id><datetime>2014-10-24T22:34:29+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\", payload := omit } } } }} id 16" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.735117", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port sipInternalPort succeeded, message from mtc: @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMMAND_SIP_SEND_SIP_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"4\" }, { parameterName := \"SUBSCRIBER\", parameterValue := \"11\" } } }, aspsSip := { { aspRequest := { addr := omit, request := { requestLine := { method := MESSAGE_E (6), requestUri := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := { { id := \"csid\", paramValue := \"8cf72980-08e3-4819-943d-f7260f67318d\" } }, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := { fieldName := ACCEPT_CONTACT_E (1), ac_values := { { { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg\\\"\" } } } }, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"callId_33061\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := { fieldName := CONTENT_TYPE_E (19), mediaType := \"message/cpim\" }, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"MESSAGE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"from_40451\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := { fieldName := P_ASSERTED_ID_E (43), ids := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } } } }, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := omit, portField := omit }, viaParams := { { id := \"branch\", paramValue := \"via_69094\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := { fieldName := CONTRIBUTION_ID_E (117), name_value := \"CHAT:10014002007@ericsson.se\" }, conversation_id := omit, x_correlation_id := omit, p_preferred_service := { fieldName := P_PREFERRED_SERVICE_E (126), name_value := \"urn:urn-7:3gpp-service.ims.icsi.oma.cpm.msg\" }, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := \"To: <sip:10014002006@ericsson.se>\\r\\nFrom: <sip:10014002007@ericsson.se>\\r\\nDateTime: 2014-10-24T22:34:29+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: imdn-T5m55e1i\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>XKDf1g9a</message-id><datetime>2014-10-24T22:34:29+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\", payload := omit } } } }} id 16" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.735207", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Message with id 16 was extracted from the queue of sipInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.735226", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "80", function_name: "function:sipRun", message: " Stop timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.735814", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on sipClientPort to system @IPL4_demo_types.SIP_SendTo : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, proto := { tcp := { } }, msg := { raw := \"MESSAGE sip:10014002006@ericsson.se;csid=8cf72980-08e3-4819-943d-f7260f67318d SIP/2.0\\r\\nAccept-Contact:*;+g.3gpp.icsi-ref=\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg\\\"\\r\\nCall-ID:callId_33061\\r\\nContent-Length:570\\r\\nContent-Type:message/cpim\\r\\nCSeq:1 MESSAGE\\r\\nFrom:<sip:10014002007@ericsson.se>;tag=from_40451\\r\\nMax-Forwards:69\\r\\nContribution-Id:CHAT:10014002007@ericsson.se\\r\\nP-Preferred-Service:urn:urn-7:3gpp-service.ims.icsi.oma.cpm.msg\\r\\nP-Asserted-Identity:<sip:10014002007@ericsson.se>\\r\\nTo:<sip:10014002006@ericsson.se>\\r\\nUser-Agent: H2S\\r\\nVia:SIP/2.0/TCP 142.133.150.169:26720;branch=via_69094\\r\\n\\r\\nTo: <sip:10014002006@ericsson.se>\\r\\nFrom: <sip:10014002007@ericsson.se>\\r\\nDateTime: 2014-10-24T22:34:29+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: imdn-T5m55e1i\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>XKDf1g9a</message-id><datetime>2014-10-24T22:34:29+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\" }}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.736034", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Outgoing message was mapped to @IPL4asp_Types.ASP_SendTo : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, proto := { tcp := { } }, msgsip:10014002006@ericsson.se;csid=8cf72980-08e3-4819-943d-f7260f67318d SIP/2.0\\r\\nAccept-Contact:*;+g.3gpp.icsi-ref=\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg\\\"\\r\\nCall-ID:callId_33061\\r\\nContent-Length:570\\r\\nContent-Type:message/cpim\\r\\nCSeq:1 MESSAGE\\r\\nFrom:<sip:10014002007@ericsson.se>;tag=from_40451\\r\\nMax-Forwards:69\\r\\nContribution-Id:CHAT:10014002007@ericsson.se\\r\\nP-Preferred-Service:urn:urn-7:3gpp-service.ims.icsi.oma.cpm.msg\\r\\nP-Asserted-Identity:<sip:10014002007@ericsson.se>\\r\\nTo:<sip:10014002006@ericsson.se>\\r\\nUser-Agent: H2S\\r\\nVia:SIP/2.0/TCP 142.133.150.169:26720;branch=via_69094\\r\\n\\r\\nTo: <sip:10014002006@ericsson.se>\\r\\nFrom: <sip:10014002007@ericsson.se>\\r\\nDateTime: 2014-10-24T22:34:29+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: imdn-T5m55e1i\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>XKDf1g9a</message-id><datetime>2014-10-24T22:34:29+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\")}" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.736241", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "388", function_name: "function:processCommand", message: " Sent on sipInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.736313", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "74", function_name: "function:sipRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.736354", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "253", function_name: "function:receiveInternalMessage", message: " Message enqueued on sipInternalPort[0] from 849 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.736438", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Receive operation on port sipInternalPort[0] succeeded, message from 849: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.736472", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Message with id 17 was extracted from the queue of sipInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.736509", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "255", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.737365", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.753812", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "286", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.754052", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "202", function_name: "function:sendInternalMessage", message: " Sent on sipInternalPort[0] to 849 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.754224", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "78", function_name: "function:sipRun", message: " Message enqueued on sipInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.754316", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Receive operation on port sipInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.754345", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Message with id 17 was extracted from the queue of sipInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.754358", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.754362", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "80", function_name: "function:sipRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.754505", component: "849", peer_component: "BaseSipClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "320", function_name: "function:generalReceiveSip", message: " Start timer timerWaitForSipMessage: 15 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.828018", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on sipClientPort from system @IPL4asp_Types.ASP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msgr\\nContribution-Id: CHAT:10014002007@ericsson.se\\r\\nContent-Length: 0\\r\\nTo: <sip:10014002006@ericsson.se>;tag=i1o495iz-a\\r\\nCseq: 1 MESSAGE\\r\\nVia: SIP/2.0/TCP 142.133.150.169:26720;branch=via_69094\\r\\nCall-Id: callId_33061\\r\\nFrom: <sip:10014002007@ericsson.se>;tag=from_40451\\r\\nServer: H2S\\r\\n\\r\\n\")} id 10" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.828507", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Incoming message was mapped to @IPL4_demo_types.SIP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msg := { response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 200, reasonPhrase := \"OK\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"callId_33061\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"MESSAGE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"from_40451\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := { fieldName := SERVER_E (90), serverBody := { \"H2S\" } }, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"i1o495iz-a\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.150.169\", portField := 26720 }, viaParams := { { id := \"branch\", paramValue := \"via_69094\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := { { headerName := \"Contribution-Id\", headerValue := \"CHAT:10014002007@ericsson.se\" } }, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } }} id 10" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.828782", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port sipClientPort succeeded, message from system(): @IPL4_demo_types.SIP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msg := { response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 200, reasonPhrase := \"OK\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"callId_33061\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"MESSAGE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"from_40451\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := { fieldName := SERVER_E (90), serverBody := { \"H2S\" } }, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"i1o495iz-a\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.150.169\", portField := 26720 }, viaParams := { { id := \"branch\", paramValue := \"via_69094\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := { { headerName := \"Contribution-Id\", headerValue := \"CHAT:10014002007@ericsson.se\" } }, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } }} id 10" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.828878", component: "849", peer_component: "BaseSipClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "325", function_name: "function:generalReceiveSip", message: " Message with id 10 was extracted from the queue of sipClientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.828907", component: "849", peer_component: "BaseSipClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "326", function_name: "function:generalReceiveSip", message: " Stop timer timerWaitForSipMessage: 15 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.832040", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on sipInternalPort to mtc @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspResponse := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 200, reasonPhrase := \"OK\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"callId_33061\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"MESSAGE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"from_40451\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := { fieldName := SERVER_E (90), serverBody := { \"H2S\" } }, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"i1o495iz-a\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.150.169\", portField := 26720 }, viaParams := { { id := \"branch\", paramValue := \"via_69094\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := { { headerName := \"Contribution-Id\", headerValue := \"CHAT:10014002007@ericsson.se\" } }, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := { fieldName := CONTRIBUTION_ID_E (117), name_value := \"CHAT:10014002007@ericsson.se\" }, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.832308", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "74", function_name: "function:sipRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.832539", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on sipInternalPort[0] from 849 @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspResponse := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 200, reasonPhrase := \"OK\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"callId_33061\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"MESSAGE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"from_40451\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := { fieldName := SERVER_E (90), serverBody := { \"H2S\" } }, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"i1o495iz-a\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.150.169\", portField := 26720 }, viaParams := { { id := \"branch\", paramValue := \"via_69094\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := { { headerName := \"Contribution-Id\", headerValue := \"CHAT:10014002007@ericsson.se\" } }, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := { fieldName := CONTRIBUTION_ID_E (117), name_value := \"CHAT:10014002007@ericsson.se\" }, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 18" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.832776", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port sipInternalPort[0] succeeded, message from 849: @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspResponse := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 200, reasonPhrase := \"OK\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"callId_33061\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"MESSAGE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"from_40451\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := { fieldName := SERVER_E (90), serverBody := { \"H2S\" } }, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"i1o495iz-a\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.150.169\", portField := 26720 }, viaParams := { { id := \"branch\", paramValue := \"via_69094\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := { { headerName := \"Contribution-Id\", headerValue := \"CHAT:10014002007@ericsson.se\" } }, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := { fieldName := CONTRIBUTION_ID_E (117), name_value := \"CHAT:10014002007@ericsson.se\" }, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 18" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.832884", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Message with id 18 was extracted from the queue of sipInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.832926", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "255", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.835828", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.845891", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "286", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.847319", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on sipInternalPort[0] to 849 @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMMAND_SIP_SEND_SIP_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"4\" }, { parameterName := \"SUBSCRIBER\", parameterValue := \"11\" } } }, aspsSip := { { aspResponse := { addr := omit, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 200, reasonPhrase := \"OK\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_7_369017631180147225\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := { fieldName := CONTENT_TYPE_E (19), mediaType := \"application/sdp\" }, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"MESSAGE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o495fd-9\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := { fieldName := REQUIRE_E (80), optionsTags := { \"timer\" } }, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := { fieldName := SESSION_EXPIRES_E (88), deltaSec := \"3600\", se_params := { { id := \"refresher\", paramValue := \"uac\" } } }, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := { fieldName := SUPPORTED_E (96), optionsTags := { \"timer\" } }, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"from_87529\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f97b1c0440d6054a7bb68defdbfae1d5c1\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := { fieldName := CONTRIBUTION_ID_E (117), name_value := \"CHAT:10014002007@ericsson.se\" }, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.847772", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.847935", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on sipInternalPort from mtc @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMMAND_SIP_SEND_SIP_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"4\" }, { parameterName := \"SUBSCRIBER\", parameterValue := \"11\" } } }, aspsSip := { { aspResponse := { addr := omit, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 200, reasonPhrase := \"OK\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_7_369017631180147225\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := { fieldName := CONTENT_TYPE_E (19), mediaType := \"application/sdp\" }, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"MESSAGE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o495fd-9\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := { fieldName := REQUIRE_E (80), optionsTags := { \"timer\" } }, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := { fieldName := SESSION_EXPIRES_E (88), deltaSec := \"3600\", se_params := { { id := \"refresher\", paramValue := \"uac\" } } }, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := { fieldName := SUPPORTED_E (96), optionsTags := { \"timer\" } }, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"from_87529\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f97b1c0440d6054a7bb68defdbfae1d5c1\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := { fieldName := CONTRIBUTION_ID_E (117), name_value := \"CHAT:10014002007@ericsson.se\" }, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 18" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.848212", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port sipInternalPort succeeded, message from mtc: @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMMAND_SIP_SEND_SIP_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"4\" }, { parameterName := \"SUBSCRIBER\", parameterValue := \"11\" } } }, aspsSip := { { aspResponse := { addr := omit, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 200, reasonPhrase := \"OK\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_7_369017631180147225\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := { fieldName := CONTENT_TYPE_E (19), mediaType := \"application/sdp\" }, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"MESSAGE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o495fd-9\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := { fieldName := REQUIRE_E (80), optionsTags := { \"timer\" } }, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := { fieldName := SESSION_EXPIRES_E (88), deltaSec := \"3600\", se_params := { { id := \"refresher\", paramValue := \"uac\" } } }, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := { fieldName := SUPPORTED_E (96), optionsTags := { \"timer\" } }, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"from_87529\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f97b1c0440d6054a7bb68defdbfae1d5c1\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := { fieldName := CONTRIBUTION_ID_E (117), name_value := \"CHAT:10014002007@ericsson.se\" }, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 18" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.848333", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Message with id 18 was extracted from the queue of sipInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.848379", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "80", function_name: "function:sipRun", message: " Stop timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.848860", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on sipClientPort to system @IPL4_demo_types.SIP_SendTo : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, proto := { tcp := { } }, msg := { raw := \"SIP/2.0 200 OK\\r\\nCall-ID:142.133.142.3_7_369017631180147225\\r\\nContent-Length:0\\r\\nContent-Type:application/sdp\\r\\nCSeq:1 MESSAGE\\r\\nFrom:<sip:10014002007@ericsson.se>;tag=i1o495fd-9\\r\\nMax-Forwards:69\\r\\nContribution-Id:CHAT:10014002007@ericsson.se\\r\\nRequire:timer\\r\\nSession-Expires:3600;refresher=uac\\r\\nSupported:timer\\r\\nTo:<sip:10014002006@ericsson.se>;tag=from_87529\\r\\nVia:SIP/2.0/TCP 142.133.142.3:5060;branch=z9hG4bKf1f97b1c0440d6054a7bb68defdbfae1d5c1\\r\\n\\r\\n\" }}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.848978", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Outgoing message was mapped to @IPL4asp_Types.ASP_SendTo : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, proto := { tcp := { } }, msgr\\nCall-ID:142.133.142.3_7_369017631180147225\\r\\nContent-Length:0\\r\\nContent-Type:application/sdp\\r\\nCSeq:1 MESSAGE\\r\\nFrom:<sip:10014002007@ericsson.se>;tag=i1o495fd-9\\r\\nMax-Forwards:69\\r\\nContribution-Id:CHAT:10014002007@ericsson.se\\r\\nRequire:timer\\r\\nSession-Expires:3600;refresher=uac\\r\\nSupported:timer\\r\\nTo:<sip:10014002006@ericsson.se>;tag=from_87529\\r\\nVia:SIP/2.0/TCP 142.133.142.3:5060;branch=z9hG4bKf1f97b1c0440d6054a7bb68defdbfae1d5c1\\r\\n\\r\\n\")}" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.849153", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "388", function_name: "function:processCommand", message: " Sent on sipInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.849213", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "74", function_name: "function:sipRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.849249", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "253", function_name: "function:receiveInternalMessage", message: " Message enqueued on sipInternalPort[0] from 849 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.849307", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Receive operation on port sipInternalPort[0] succeeded, message from 849: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.849334", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Message with id 19 was extracted from the queue of sipInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.849356", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "255", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.854983", component: "856", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port clientPort was started." }
Simple DataFrame { time: "2014/Oct/24 18:34:29.855020", component: "856", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port serverPort was started." }
Simple DataFrame { time: "2014/Oct/24 18:34:29.855038", component: "856", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port httpNodeInternalPort was started." }
Simple DataFrame { time: "2014/Oct/24 18:34:29.855255", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 10 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.856806", component: "856", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "130", function_name: "function:httpNodeInitialize", message: " Port clientPort was mapped to system:clientPort[5]" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.857335", component: "856", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "133", function_name: "function:httpNodeInitialize", message: " Port serverPort was mapped to system:serverPort[5]" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.857971", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port httpNodeInternalPort[5] is waiting for connection from 856:httpNodeInternalPort on UNIX pathname /tmp/ttcn3-portconn-220b9c2a." }
Simple DataFrame { time: "2014/Oct/24 18:34:29.858092", component: "856", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "136", function_name: "function:httpNodeInitialize", message: " Port httpNodeInternalPort has established the connection with mtc:httpNodeInternalPort[5] using transport type UNIX" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.858166", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "239", function_name: "function:receiveInternalMessage", message: " Port httpNodeInternalPort[5] has accepted the connection from 856:httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.858483", component: "856", peer_component: "BaseHttpServerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "55", function_name: "function:openServerForListening", message: " Sent on serverPort to system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.858616", component: "856", peer_component: "BaseHttpServerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "55", function_name: "function:openServerForListening", message: " Message enqueued on serverPort from system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.858652", component: "856", peer_component: "BaseHttpServerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "73", function_name: "function:receiveHTTPServerListenResult", message: " Start timer timerWaitForHTTPRequest: 5 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.858708", component: "856", peer_component: "BaseHttpServerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "77", function_name: "function:receiveHTTPServerListenResult", message: " Receive operation on port serverPort succeeded, message from system(" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.858733", component: "856", peer_component: "BaseHttpServerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "77", function_name: "function:receiveHTTPServerListenResult", message: " Message with id 1 was extracted from the queue of serverPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.858751", component: "856", peer_component: "BaseHttpServerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "78", function_name: "function:receiveHTTPServerListenResult", message: " Stop timer timerWaitForHTTPRequest: 5 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.858838", component: "856", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "141", function_name: "function:httpNodeInitialize", message: " Sent on httpNodeInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.858939", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "239", function_name: "function:receiveInternalMessage", message: " Message enqueued on httpNodeInternalPort[5] from 856 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.858993", component: "856", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "62", function_name: "function:httpNodeRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.859072", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Receive operation on port httpNodeInternalPort[5] succeeded, message from 856: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.859121", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Message with id 1 was extracted from the queue of httpNodeInternalPort[5]" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.859159", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "241", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 10 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.859586", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.869759", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "267", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.869993", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort[5] to 856 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"4\" } } }, aspHttp := { { httpMessage := { method := \"GET\", url := \"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/channels\", body := \"\", contentType := \"\", statusCode := \"\", header := { } } } }}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.870171", component: "856", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort from mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"4\" } } }, aspHttp := { { httpMessage := { method := \"GET\", url := \"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/channels\", body := \"\", contentType := \"\", statusCode := \"\", header := { } } } }} id 1" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.870243", component: "856", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort succeeded, message from mtc: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"4\" } } }, aspHttp := { { httpMessage := { method := \"GET\", url := \"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/channels\", body := \"\", contentType := \"\", statusCode := \"\", header := { } } } }} id 1" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.870273", component: "856", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "67", function_name: "function:httpNodeRun", message: " Message with id 1 was extracted from the queue of httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.870305", component: "856", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "68", function_name: "function:httpNodeRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.870384", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.870488", component: "856", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "307", function_name: "function:clearHTTPClientPort", message: " Start timer timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.870512", component: "856", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "313", function_name: "function:clearHTTPClientPort", message: " Timeout timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.870607", component: "856", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Sent on clientPort to system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.871408", component: "856", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Message enqueued on clientPort from system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.871445", component: "856", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "243", function_name: "function:sendHTTPClientRequest", message: " Start timer timerWaitForHTTPOpenConnection: 2 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.871476", component: "856", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Receive operation on port clientPort succeeded, message from system(" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.871495", component: "856", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Message with id 1 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.871512", component: "856", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "246", function_name: "function:sendHTTPClientRequest", message: " Stop timer timerWaitForHTTPOpenConnection: 2 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.871587", component: "856", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on clientPort to system @HTTPmsg_Types.HTTPMessage : { request := { client_id := 9, method := \"GET\", uri := \"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/channels\", version_major := 1, version_minor := 1, header := { { header_name := \"Host\", header_value := \"142.133.142.3\" }, { header_name := \"Content-Length\", header_value := \"0\" } }, body := \"\" }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.871711", component: "856", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "189", function_name: "function:receiveAnyHTTPClientResponse", message: " Start timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.903814", component: "856", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on clientPort from system @HTTPmsg_Types.HTTPMessage : { response := { client_id := 9, version_major := 1, version_minor := 1, statuscode := 200, statustext := \"OK\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:29 GMT\" } }, body := \"{\\n \\\"events\\\": {\\n \\\"list\\\": [ {\\n \\\"eventObject\\\": {\\n \\\"@type\\\": \\\"MessageStatusNotification\\\",\\n \\\"chatMessageStatusNotification\\\": {\\n \\\"link\\\": [ {\\n \\\"href\\\": \\\"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/chat/v1/sip:10014002006@ericsson.se/oneToOne/sip:10014002007@ericsson.se/adhoc\\\",\\n \\\"rel\\\": \\\"ChatSessionInformation\\\"\\n }, {\\n \\\"href\\\": \\\"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/chat/v1/sip:10014002006@ericsson.se/oneToOne/sip:10014002007@ericsson.se/adhoc/messages/XKDf1g9a\\\",\\n \\\"rel\\\": \\\"ChatMessage\\\"\\n } ],\\n \\\"status\\\": \\\"Delivered\\\"\\n },\\n \\\"originalDateTime\\\": \\\"2014-10-24T22:34:29+00:00\\\",\\n \\\"dateTime\\\": \\\"2014-10-24T22:34:29+00:00\\\"\\n }\\n } ]\\n }\\n}\" }} id 2" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.904079", component: "856", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port clientPort succeeded, message from system(): @HTTPmsg_Types.HTTPMessage : { response := { client_id := 9, version_major := 1, version_minor := 1, statuscode := 200, statustext := \"OK\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:29 GMT\" } }, body := \"{\\n \\\"events\\\": {\\n \\\"list\\\": [ {\\n \\\"eventObject\\\": {\\n \\\"@type\\\": \\\"MessageStatusNotification\\\",\\n \\\"chatMessageStatusNotification\\\": {\\n \\\"link\\\": [ {\\n \\\"href\\\": \\\"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/chat/v1/sip:10014002006@ericsson.se/oneToOne/sip:10014002007@ericsson.se/adhoc\\\",\\n \\\"rel\\\": \\\"ChatSessionInformation\\\"\\n }, {\\n \\\"href\\\": \\\"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/chat/v1/sip:10014002006@ericsson.se/oneToOne/sip:10014002007@ericsson.se/adhoc/messages/XKDf1g9a\\\",\\n \\\"rel\\\": \\\"ChatMessage\\\"\\n } ],\\n \\\"status\\\": \\\"Delivered\\\"\\n },\\n \\\"originalDateTime\\\": \\\"2014-10-24T22:34:29+00:00\\\",\\n \\\"dateTime\\\": \\\"2014-10-24T22:34:29+00:00\\\"\\n }\\n } ]\\n }\\n}\" }} id 2" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.904142", component: "856", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "193", function_name: "function:receiveAnyHTTPClientResponse", message: " Message with id 2 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.904175", component: "856", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "194", function_name: "function:receiveAnyHTTPClientResponse", message: " Stop timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.904431", component: "856", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort to mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\n \\\"events\\\": {\\n \\\"list\\\": [ {\\n \\\"eventObject\\\": {\\n \\\"@type\\\": \\\"MessageStatusNotification\\\",\\n \\\"chatMessageStatusNotification\\\": {\\n \\\"link\\\": [ {\\n \\\"href\\\": \\\"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/chat/v1/sip:10014002006@ericsson.se/oneToOne/sip:10014002007@ericsson.se/adhoc\\\",\\n \\\"rel\\\": \\\"ChatSessionInformation\\\"\\n }, {\\n \\\"href\\\": \\\"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/chat/v1/sip:10014002006@ericsson.se/oneToOne/sip:10014002007@ericsson.se/adhoc/messages/XKDf1g9a\\\",\\n \\\"rel\\\": \\\"ChatMessage\\\"\\n } ],\\n \\\"status\\\": \\\"Delivered\\\"\\n },\\n \\\"originalDateTime\\\": \\\"2014-10-24T22:34:29+00:00\\\",\\n \\\"dateTime\\\": \\\"2014-10-24T22:34:29+00:00\\\"\\n }\\n } ]\\n }\\n}\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:29 GMT\" } } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.904555", component: "856", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "62", function_name: "function:httpNodeRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.904722", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort[5] from 856 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\n \\\"events\\\": {\\n \\\"list\\\": [ {\\n \\\"eventObject\\\": {\\n \\\"@type\\\": \\\"MessageStatusNotification\\\",\\n \\\"chatMessageStatusNotification\\\": {\\n \\\"link\\\": [ {\\n \\\"href\\\": \\\"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/chat/v1/sip:10014002006@ericsson.se/oneToOne/sip:10014002007@ericsson.se/adhoc\\\",\\n \\\"rel\\\": \\\"ChatSessionInformation\\\"\\n }, {\\n \\\"href\\\": \\\"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/chat/v1/sip:10014002006@ericsson.se/oneToOne/sip:10014002007@ericsson.se/adhoc/messages/XKDf1g9a\\\",\\n \\\"rel\\\": \\\"ChatMessage\\\"\\n } ],\\n \\\"status\\\": \\\"Delivered\\\"\\n },\\n \\\"originalDateTime\\\": \\\"2014-10-24T22:34:29+00:00\\\",\\n \\\"dateTime\\\": \\\"2014-10-24T22:34:29+00:00\\\"\\n }\\n } ]\\n }\\n}\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:29 GMT\" } } } } }} id 2" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.904892", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort[5] succeeded, message from 856: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\n \\\"events\\\": {\\n \\\"list\\\": [ {\\n \\\"eventObject\\\": {\\n \\\"@type\\\": \\\"MessageStatusNotification\\\",\\n \\\"chatMessageStatusNotification\\\": {\\n \\\"link\\\": [ {\\n \\\"href\\\": \\\"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/chat/v1/sip:10014002006@ericsson.se/oneToOne/sip:10014002007@ericsson.se/adhoc\\\",\\n \\\"rel\\\": \\\"ChatSessionInformation\\\"\\n }, {\\n \\\"href\\\": \\\"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/chat/v1/sip:10014002006@ericsson.se/oneToOne/sip:10014002007@ericsson.se/adhoc/messages/XKDf1g9a\\\",\\n \\\"rel\\\": \\\"ChatMessage\\\"\\n } ],\\n \\\"status\\\": \\\"Delivered\\\"\\n },\\n \\\"originalDateTime\\\": \\\"2014-10-24T22:34:29+00:00\\\",\\n \\\"dateTime\\\": \\\"2014-10-24T22:34:29+00:00\\\"\\n }\\n } ]\\n }\\n}\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:29 GMT\" } } } } }} id 2" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.904934", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Message with id 2 was extracted from the queue of httpNodeInternalPort[5]" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.904965", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "241", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.907549", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.917586", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "267", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.917837", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort[3] to 854 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"5\" } } }, aspHttp := { { httpMessage := { method := \"POST\", url := \"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/message/send\", body := \"{ \\\"to\\\": \\\"sip:10014002006@ericsson.se\\\", \\\"body\\\": \\\"Body message 10014002007 to 10014002006\\\", \\\"contentType\\\": \\\"text/plain\\\"} \", contentType := \"application/json\", statusCode := \"\", header := { } } } }}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.918041", component: "854", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort from mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"5\" } } }, aspHttp := { { httpMessage := { method := \"POST\", url := \"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/message/send\", body := \"{ \\\"to\\\": \\\"sip:10014002006@ericsson.se\\\", \\\"body\\\": \\\"Body message 10014002007 to 10014002006\\\", \\\"contentType\\\": \\\"text/plain\\\"} \", contentType := \"application/json\", statusCode := \"\", header := { } } } }} id 2" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.918117", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.918154", component: "854", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort succeeded, message from mtc: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"5\" } } }, aspHttp := { { httpMessage := { method := \"POST\", url := \"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/message/send\", body := \"{ \\\"to\\\": \\\"sip:10014002006@ericsson.se\\\", \\\"body\\\": \\\"Body message 10014002007 to 10014002006\\\", \\\"contentType\\\": \\\"text/plain\\\"} \", contentType := \"application/json\", statusCode := \"\", header := { } } } }} id 2" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.918262", component: "854", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "67", function_name: "function:httpNodeRun", message: " Message with id 2 was extracted from the queue of httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.918294", component: "854", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "68", function_name: "function:httpNodeRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.918510", component: "854", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "307", function_name: "function:clearHTTPClientPort", message: " Start timer timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.918597", component: "854", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "313", function_name: "function:clearHTTPClientPort", message: " Timeout timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.918700", component: "854", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Sent on clientPort to system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.919609", component: "854", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Message enqueued on clientPort from system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.919657", component: "854", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "243", function_name: "function:sendHTTPClientRequest", message: " Start timer timerWaitForHTTPOpenConnection: 2 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.919781", component: "854", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Receive operation on port clientPort succeeded, message from system(" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.919815", component: "854", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Message with id 3 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.919890", component: "854", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "246", function_name: "function:sendHTTPClientRequest", message: " Stop timer timerWaitForHTTPOpenConnection: 2 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.919977", component: "854", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on clientPort to system @HTTPmsg_Types.HTTPMessage : { request := { client_id := 10, method := \"POST\", uri := \"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/message/send\", version_major := 1, version_minor := 1, header := { { header_name := \"Host\", header_value := \"142.133.142.3\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Content-Length\", header_value := \"119\" } }, body := \"{ \\\"to\\\": \\\"sip:10014002006@ericsson.se\\\", \\\"body\\\": \\\"Body message 10014002007 to 10014002006\\\", \\\"contentType\\\": \\\"text/plain\\\"} \" }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.920070", component: "854", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "189", function_name: "function:receiveAnyHTTPClientResponse", message: " Start timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.957675", component: "854", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on clientPort from system @HTTPmsg_Types.HTTPMessage : { response := { client_id := 10, version_major := 1, version_minor := 1, statuscode := 200, statustext := \"OK\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:29 GMT\" } }, body := \"{\\n \\\"msgId\\\": \\\"83VXAA1G\\\"\\n}\" }} id 4" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.957824", component: "854", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port clientPort succeeded, message from system(): @HTTPmsg_Types.HTTPMessage : { response := { client_id := 10, version_major := 1, version_minor := 1, statuscode := 200, statustext := \"OK\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:29 GMT\" } }, body := \"{\\n \\\"msgId\\\": \\\"83VXAA1G\\\"\\n}\" }} id 4" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.957858", component: "854", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "193", function_name: "function:receiveAnyHTTPClientResponse", message: " Message with id 4 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.957879", component: "854", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "194", function_name: "function:receiveAnyHTTPClientResponse", message: " Stop timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.958028", component: "854", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort to mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\n \\\"msgId\\\": \\\"83VXAA1G\\\"\\n}\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:29 GMT\" } } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.958139", component: "854", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "62", function_name: "function:httpNodeRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.958282", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort[3] from 854 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\n \\\"msgId\\\": \\\"83VXAA1G\\\"\\n}\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:29 GMT\" } } } } }} id 3" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.958420", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort[3] succeeded, message from 854: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\n \\\"msgId\\\": \\\"83VXAA1G\\\"\\n}\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:29 GMT\" } } } } }} id 3" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.958479", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Message with id 3 was extracted from the queue of httpNodeInternalPort[3]" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.958516", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "241", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.964648", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.977775", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "286", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.977944", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "202", function_name: "function:sendInternalMessage", message: " Sent on sipInternalPort[0] to 849 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.978064", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "78", function_name: "function:sipRun", message: " Message enqueued on sipInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.978136", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.978187", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Receive operation on port sipInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.978217", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Message with id 19 was extracted from the queue of sipInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.978231", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "80", function_name: "function:sipRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.978368", component: "849", peer_component: "BaseSipClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "320", function_name: "function:generalReceiveSip", message: " Start timer timerWaitForSipMessage: 15 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.980239", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on sipClientPort from system @IPL4asp_Types.ASP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msgr\\nContent-Length: 242\\r\\nSupported: timer\\r\\nContact: <sip:10014002007@142.133.142.3:5060;csid=2838ab5a-e194-4923-81af-c9f0a544f667;transport=TCP;fid=wcg-ft3_1>;+g.gsma.rcs.ipcall;+g.3gpp.icsi-ref=\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\";+g.3gpp.cs-voice;+g.3gpp.iari-ref=\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\";+g.oma.sip-im;video\\r\\nTo: <sip:10014002007@ericsson.se>;tag=i1o495cq-8\\r\\nCseq: 1 INVITE\\r\\nSession-Expires: 3600;refresher=uac\\r\\nServer: H2S\\r\\nContribution-Id: CHAT:10014002007@ericsson.se\\r\\nRequire: timer\\r\\nVia: SIP/2.0/TCP 142.133.150.169:26720;branch=via_13102\\r\\nContent-Type: application/sdp\\r\\nCall-Id: VAT_callId_79564\\r\\nFrom: <sip:10014002006@ericsson.se>;tag=from_50592\\r\\n\\r\\nv=0\\r\\no=10014002007 3623178869 3623178869 IN IP4 142.133.142.3\\r\\ns=-\\r\\nc=IN IP4 142.133.142.3\\r\\nt=0 0\\r\\nm=message 6060 TCP/MSRP *\\r\\na=accept-types:*\\r\\na=connection:new\\r\\na=sendrecv\\r\\na=setup:passive\\r\\na=path:msrp://142.133.142.3:6060/rFhqxHwhogoX;tcp\\r\\n\")} id 11" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.980744", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Incoming message was mapped to @IPL4_demo_types.SIP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msg := { response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 200, reasonPhrase := \"OK\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"VAT_callId_79564\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" }, { id := \"fid\", paramValue := \"wcg-ft3_1\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"video\", paramValue := omit } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 242 }, contentType := { fieldName := CONTENT_TYPE_E (19), mediaType := \"application/sdp\" }, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"INVITE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"from_50592\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := { fieldName := REQUIRE_E (80), optionsTags := { \"timer\" } }, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := { fieldName := SESSION_EXPIRES_E (88), deltaSec := \"3600\", se_params := { { id := \"refresher\", paramValue := \"uac\" } } }, session_id := omit, server := { fieldName := SERVER_E (90), serverBody := { \"H2S\" } }, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := { fieldName := SUPPORTED_E (96), optionsTags := { \"timer\" } }, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"i1o495cq-8\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.150.169\", portField := 26720 }, viaParams := { { id := \"branch\", paramValue := \"via_13102\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := { { headerName := \"Contribution-Id\", headerValue := \"CHAT:10014002007@ericsson.se\" } }, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := \"v=0\\r\\no=10014002007 3623178869 3623178869 IN IP4 142.133.142.3\\r\\ns=-\\r\\nc=IN IP4 142.133.142.3\\r\\nt=0 0\\r\\nm=message 6060 TCP/MSRP *\\r\\na=accept-types:*\\r\\na=connection:new\\r\\na=sendrecv\\r\\na=setup:passive\\r\\na=path:msrp://142.133.142.3:6060/rFhqxHwhogoX;tcp\\r\\n\", payload := omit } }} id 11" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.980989", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port sipClientPort succeeded, message from system(): @IPL4_demo_types.SIP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msg := { response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 200, reasonPhrase := \"OK\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"VAT_callId_79564\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" }, { id := \"fid\", paramValue := \"wcg-ft3_1\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"video\", paramValue := omit } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 242 }, contentType := { fieldName := CONTENT_TYPE_E (19), mediaType := \"application/sdp\" }, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"INVITE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"from_50592\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := { fieldName := REQUIRE_E (80), optionsTags := { \"timer\" } }, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := { fieldName := SESSION_EXPIRES_E (88), deltaSec := \"3600\", se_params := { { id := \"refresher\", paramValue := \"uac\" } } }, session_id := omit, server := { fieldName := SERVER_E (90), serverBody := { \"H2S\" } }, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := { fieldName := SUPPORTED_E (96), optionsTags := { \"timer\" } }, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"i1o495cq-8\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.150.169\", portField := 26720 }, viaParams := { { id := \"branch\", paramValue := \"via_13102\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := { { headerName := \"Contribution-Id\", headerValue := \"CHAT:10014002007@ericsson.se\" } }, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := \"v=0\\r\\no=10014002007 3623178869 3623178869 IN IP4 142.133.142.3\\r\\ns=-\\r\\nc=IN IP4 142.133.142.3\\r\\nt=0 0\\r\\nm=message 6060 TCP/MSRP *\\r\\na=accept-types:*\\r\\na=connection:new\\r\\na=sendrecv\\r\\na=setup:passive\\r\\na=path:msrp://142.133.142.3:6060/rFhqxHwhogoX;tcp\\r\\n\", payload := omit } }} id 11" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.981092", component: "849", peer_component: "BaseSipClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "325", function_name: "function:generalReceiveSip", message: " Message with id 11 was extracted from the queue of sipClientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.981117", component: "849", peer_component: "BaseSipClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "326", function_name: "function:generalReceiveSip", message: " Stop timer timerWaitForSipMessage: 15 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.983470", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on sipInternalPort to mtc @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspResponse := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 200, reasonPhrase := \"OK\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"VAT_callId_79564\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" }, { id := \"fid\", paramValue := \"wcg-ft3_1\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"video\", paramValue := omit } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 242 }, contentType := { fieldName := CONTENT_TYPE_E (19), mediaType := \"application/sdp\" }, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"INVITE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"from_50592\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := { fieldName := REQUIRE_E (80), optionsTags := { \"timer\" } }, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := { fieldName := SESSION_EXPIRES_E (88), deltaSec := \"3600\", se_params := { { id := \"refresher\", paramValue := \"uac\" } } }, session_id := omit, server := { fieldName := SERVER_E (90), serverBody := { \"H2S\" } }, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := { fieldName := SUPPORTED_E (96), optionsTags := { \"timer\" } }, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"i1o495cq-8\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.150.169\", portField := 26720 }, viaParams := { { id := \"branch\", paramValue := \"via_13102\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := { { headerName := \"Contribution-Id\", headerValue := \"CHAT:10014002007@ericsson.se\" } }, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := { fieldName := CONTRIBUTION_ID_E (117), name_value := \"CHAT:10014002007@ericsson.se\" }, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := \"v=0\\r\\no=10014002007 3623178869 3623178869 IN IP4 142.133.142.3\\r\\ns=-\\r\\nc=IN IP4 142.133.142.3\\r\\nt=0 0\\r\\nm=message 6060 TCP/MSRP *\\r\\na=accept-types:*\\r\\na=connection:new\\r\\na=sendrecv\\r\\na=setup:passive\\r\\na=path:msrp://142.133.142.3:6060/rFhqxHwhogoX;tcp\\r\\n\", payload := omit } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.983686", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "74", function_name: "function:sipRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.983916", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on sipInternalPort[0] from 849 @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspResponse := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 200, reasonPhrase := \"OK\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"VAT_callId_79564\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" }, { id := \"fid\", paramValue := \"wcg-ft3_1\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"video\", paramValue := omit } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 242 }, contentType := { fieldName := CONTENT_TYPE_E (19), mediaType := \"application/sdp\" }, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"INVITE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"from_50592\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := { fieldName := REQUIRE_E (80), optionsTags := { \"timer\" } }, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := { fieldName := SESSION_EXPIRES_E (88), deltaSec := \"3600\", se_params := { { id := \"refresher\", paramValue := \"uac\" } } }, session_id := omit, server := { fieldName := SERVER_E (90), serverBody := { \"H2S\" } }, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := { fieldName := SUPPORTED_E (96), optionsTags := { \"timer\" } }, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"i1o495cq-8\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.150.169\", portField := 26720 }, viaParams := { { id := \"branch\", paramValue := \"via_13102\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := { { headerName := \"Contribution-Id\", headerValue := \"CHAT:10014002007@ericsson.se\" } }, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := { fieldName := CONTRIBUTION_ID_E (117), name_value := \"CHAT:10014002007@ericsson.se\" }, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := \"v=0\\r\\no=10014002007 3623178869 3623178869 IN IP4 142.133.142.3\\r\\ns=-\\r\\nc=IN IP4 142.133.142.3\\r\\nt=0 0\\r\\nm=message 6060 TCP/MSRP *\\r\\na=accept-types:*\\r\\na=connection:new\\r\\na=sendrecv\\r\\na=setup:passive\\r\\na=path:msrp://142.133.142.3:6060/rFhqxHwhogoX;tcp\\r\\n\", payload := omit } } } }} id 20" }
Structured  DataFrame { time: "2014/Oct/24 18:34:29.984123", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port sipInternalPort[0] succeeded, message from 849: @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspResponse := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 200, reasonPhrase := \"OK\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"VAT_callId_79564\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" }, { id := \"fid\", paramValue := \"wcg-ft3_1\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"video\", paramValue := omit } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 242 }, contentType := { fieldName := CONTENT_TYPE_E (19), mediaType := \"application/sdp\" }, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"INVITE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"from_50592\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := { fieldName := REQUIRE_E (80), optionsTags := { \"timer\" } }, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := { fieldName := SESSION_EXPIRES_E (88), deltaSec := \"3600\", se_params := { { id := \"refresher\", paramValue := \"uac\" } } }, session_id := omit, server := { fieldName := SERVER_E (90), serverBody := { \"H2S\" } }, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := { fieldName := SUPPORTED_E (96), optionsTags := { \"timer\" } }, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"i1o495cq-8\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.150.169\", portField := 26720 }, viaParams := { { id := \"branch\", paramValue := \"via_13102\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := { { headerName := \"Contribution-Id\", headerValue := \"CHAT:10014002007@ericsson.se\" } }, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := { fieldName := CONTRIBUTION_ID_E (117), name_value := \"CHAT:10014002007@ericsson.se\" }, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := \"v=0\\r\\no=10014002007 3623178869 3623178869 IN IP4 142.133.142.3\\r\\ns=-\\r\\nc=IN IP4 142.133.142.3\\r\\nt=0 0\\r\\nm=message 6060 TCP/MSRP *\\r\\na=accept-types:*\\r\\na=connection:new\\r\\na=sendrecv\\r\\na=setup:passive\\r\\na=path:msrp://142.133.142.3:6060/rFhqxHwhogoX;tcp\\r\\n\", payload := omit } } } }} id 20" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.984221", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Message with id 20 was extracted from the queue of sipInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:29.984243", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "255", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.000172", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 10 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.000221", component: "857", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port msrpPort was started." }
Simple DataFrame { time: "2014/Oct/24 18:34:30.000256", component: "857", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port msrpInternalPort was started." }
Simple DataFrame { time: "2014/Oct/24 18:34:30.001388", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port msrpInternalPort[1] is waiting for connection from 857:msrpInternalPort on UNIX pathname /tmp/ttcn3-portconn-d019204." }
Simple DataFrame { time: "2014/Oct/24 18:34:30.001530", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "155", function_name: "function:msrpInitialize", message: " Port msrpInternalPort has established the connection with mtc:msrpInternalPort[1] using transport type UNIX" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.001589", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "216", function_name: "function:receiveInternalMessage", message: " Port msrpInternalPort[1] has accepted the connection from 857:msrpInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.001866", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "158", function_name: "function:msrpInitialize", message: " Port msrpPort was mapped to system:msrpPort[1]" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.002079", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "161", function_name: "function:msrpInitialize", message: " Sent on msrpInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.002150", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "216", function_name: "function:receiveInternalMessage", message: " Message enqueued on msrpInternalPort[1] from 857 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.002198", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Receive operation on port msrpInternalPort[1] succeeded, message from 857: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.002222", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Message with id 1 was extracted from the queue of msrpInternalPort[1]" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.002241", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "218", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 10 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.002404", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.002521", component: "857", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "79", function_name: "function:msrpRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.013747", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.013918", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "168", function_name: "function:sendInternalMessage", message: " Sent on msrpInternalPort[1] to 857 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.014075", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.014305", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "83", function_name: "function:msrpRun", message: " Message enqueued on msrpInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.014383", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Receive operation on port msrpInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.014414", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Message with id 1 was extracted from the queue of msrpInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.014440", component: "857", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "85", function_name: "function:msrpRun", message: " Stop timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:30.015785", component: "857", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on msrpPort to system @IPL4_MSRP_demo_types.MSRP_Send : { connId := 1, proto := { tcp := { } }, msg := '4D5352502033303037355641542053454E440D0A546F2D506174683A206D7372703A2F2F3134322E3133332E3134322E333A363036302F72466871784877686F676F583B7463700D0A46726F6D2D506174683A206D7372703A2F2F3134322E3133332E3135302E3136393A31373037372F53657373696F6E496431385641543B7463700D0A2D2D2D2D2D2D2D3330303735564154240D0A'O (\"MSRP 30075VAT SEND\\r\\nTo-Path: msrp://142.133.142.3:6060/rFhqxHwhogoX;tcp\\r\\nFrom-Path: msrp://142.133.150.169:17077/SessionId18VAT;tcp\\r\\n-------30075VAT$\\r\\n\")}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:30.015869", component: "857", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Outgoing message was mapped to @IPL4asp_Types.ASP_Send : { connId := 1, proto := { tcp := { } }, msg := '4D5352502033303037355641542053454E440D0A546F2D506174683A206D7372703A2F2F3134322E3133332E3134322E333A363036302F72466871784877686F676F583B7463700D0A46726F6D2D506174683A206D7372703A2F2F3134322E3133332E3135302E3136393A31373037372F53657373696F6E496431385641543B7463700D0A2D2D2D2D2D2D2D3330303735564154240D0A'O (\"MSRP 30075VAT SEND\\r\\nTo-Path: msrp://142.133.142.3:6060/rFhqxHwhogoX;tcp\\r\\nFrom-Path: msrp://142.133.150.169:17077/SessionId18VAT;tcp\\r\\n-------30075VAT$\\r\\n\")}" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.015982", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "343", function_name: "function:processCommand", message: " Sent on msrpInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.016034", component: "857", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "79", function_name: "function:msrpRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.016067", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "216", function_name: "function:receiveInternalMessage", message: " Message enqueued on msrpInternalPort[1] from 857 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.016119", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Receive operation on port msrpInternalPort[1] succeeded, message from 857: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.016143", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Message with id 2 was extracted from the queue of msrpInternalPort[1]" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.016161", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "218", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.016603", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.026636", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.026753", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "168", function_name: "function:sendInternalMessage", message: " Sent on msrpInternalPort[1] to 857 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.026853", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "83", function_name: "function:msrpRun", message: " Message enqueued on msrpInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.026872", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.026904", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Receive operation on port msrpInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.026939", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Message with id 2 was extracted from the queue of msrpInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.026954", component: "857", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "85", function_name: "function:msrpRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.027045", component: "857", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "383", function_name: "function:handleClosedConnectionByRemoteSide", message: " Start timer timerCheckMsrpQueue: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:30.052513", component: "857", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on msrpPort from system @IPL4asp_Types.ASP_RecvFrom : { connId := 1, remName := \"142.133.142.3\", remPort := 6060, locName := \"142.133.150.169\", locPort := 17077, proto := { tcp := { } }, userData := 0, msg := '4D53525020333030373556415420323030204F4B0D0A546F2D506174683A206D7372703A2F2F3134322E3133332E3135302E3136393A31373037372F53657373696F6E496431385641543B7463700D0A46726F6D2D506174683A206D7372703A2F2F3134322E3133332E3134322E333A363036302F72466871784877686F676F583B7463700D0A2D2D2D2D2D2D2D3330303735564154240D0A'O (\"MSRP 30075VAT 200 OK\\r\\nTo-Path: msrp://142.133.150.169:17077/SessionId18VAT;tcp\\r\\nFrom-Path: msrp://142.133.142.3:6060/rFhqxHwhogoX;tcp\\r\\n-------30075VAT$\\r\\n\")} id 1" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.052734", component: "857", peer_component: "BaseMsrpComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "385", function_name: "function:handleClosedConnectionByRemoteSide", message: " Incoming message was mapped to @IPL4_MSRP_demo_types" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.230266", component: "857", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "394", function_name: "function:handleClosedConnectionByRemoteSide", message: " Timeout timerCheckMsrpQueue: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.230575", component: "857", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "287", function_name: "function:baseReceiveMsrpMessage", message: " Start timer timerWaitForMsrpResponse: 15 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.230765", component: "857", peer_component: "BaseMsrpComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "290", function_name: "function:baseReceiveMsrpMessage", message: " Receive operation on port msrpPort succeeded, message from system(" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.230838", component: "857", peer_component: "BaseMsrpComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "290", function_name: "function:baseReceiveMsrpMessage", message: " Message with id 1 was extracted from the queue of msrpPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.230929", component: "857", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "295", function_name: "function:baseReceiveMsrpMessage", message: " Stop timer timerWaitForMsrpResponse: 15 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.231252", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "343", function_name: "function:processCommand", message: " Sent on msrpInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.231371", component: "857", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "79", function_name: "function:msrpRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.231486", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "216", function_name: "function:receiveInternalMessage", message: " Message enqueued on msrpInternalPort[1] from 857 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.231725", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Receive operation on port msrpInternalPort[1] succeeded, message from 857: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.231828", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Message with id 3 was extracted from the queue of msrpInternalPort[1]" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.231892", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "218", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.234356", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.245589", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "286", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:30.246652", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on sipInternalPort[0] to 849 @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMMAND_SIP_SEND_SIP_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"5\" }, { parameterName := \"SUBSCRIBER\", parameterValue := \"11\" } } }, aspsSip := { { aspRequest := { addr := omit, request := { requestLine := { method := ACK_E (0), requestUri := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" } }, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"VAT_callId_79564\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"ACK\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"from_50592\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"i1o495cq-8\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.150.169\", portField := 26720 }, viaParams := { { id := \"branch\", paramValue := \"via_13102\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.247187", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:30.247199", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on sipInternalPort from mtc @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMMAND_SIP_SEND_SIP_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"5\" }, { parameterName := \"SUBSCRIBER\", parameterValue := \"11\" } } }, aspsSip := { { aspRequest := { addr := omit, request := { requestLine := { method := ACK_E (0), requestUri := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" } }, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"VAT_callId_79564\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"ACK\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"from_50592\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"i1o495cq-8\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.150.169\", portField := 26720 }, viaParams := { { id := \"branch\", paramValue := \"via_13102\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 20" }
Structured  DataFrame { time: "2014/Oct/24 18:34:30.247420", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port sipInternalPort succeeded, message from mtc: @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMMAND_SIP_SEND_SIP_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"5\" }, { parameterName := \"SUBSCRIBER\", parameterValue := \"11\" } } }, aspsSip := { { aspRequest := { addr := omit, request := { requestLine := { method := ACK_E (0), requestUri := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" } }, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"VAT_callId_79564\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"ACK\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"from_50592\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"i1o495cq-8\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.150.169\", portField := 26720 }, viaParams := { { id := \"branch\", paramValue := \"via_13102\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 20" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.247519", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Message with id 20 was extracted from the queue of sipInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.247544", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "80", function_name: "function:sipRun", message: " Stop timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:30.248253", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on sipClientPort to system @IPL4_demo_types.SIP_SendTo : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, proto := { tcp := { } }, msg := { raw := \"ACK sip:10014002007@ericsson.se;csid=2838ab5a-e194-4923-81af-c9f0a544f667 SIP/2.0\\r\\nCall-ID:VAT_callId_79564\\r\\nContent-Length:0\\r\\nCSeq:1 ACK\\r\\nFrom:<sip:10014002006@ericsson.se>;tag=from_50592\\r\\nMax-Forwards:69\\r\\nTo:<sip:10014002007@ericsson.se>;tag=i1o495cq-8\\r\\nVia:SIP/2.0/TCP 142.133.150.169:26720;branch=via_13102\\r\\n\\r\\n\" }}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:30.248388", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Outgoing message was mapped to @IPL4asp_Types.ASP_SendTo : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, proto := { tcp := { } }, msgsip:10014002007@ericsson.se;csid=2838ab5a-e194-4923-81af-c9f0a544f667 SIP/2.0\\r\\nCall-ID:VAT_callId_79564\\r\\nContent-Length:0\\r\\nCSeq:1 ACK\\r\\nFrom:<sip:10014002006@ericsson.se>;tag=from_50592\\r\\nMax-Forwards:69\\r\\nTo:<sip:10014002007@ericsson.se>;tag=i1o495cq-8\\r\\nVia:SIP/2.0/TCP 142.133.150.169:26720;branch=via_13102\\r\\n\\r\\n\")}" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.248592", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "388", function_name: "function:processCommand", message: " Sent on sipInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.248748", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "74", function_name: "function:sipRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.248806", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "253", function_name: "function:receiveInternalMessage", message: " Message enqueued on sipInternalPort[0] from 849 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.248913", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Receive operation on port sipInternalPort[0] succeeded, message from 849: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.248973", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Message with id 21 was extracted from the queue of sipInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.249019", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "255", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.254563", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.265822", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "286", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:30.266643", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on sipInternalPort[0] to 849 @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMMAND_SIP_SEND_SIP_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"5\" }, { parameterName := \"SUBSCRIBER\", parameterValue := \"11\" } } }, aspsSip := { { aspResponse := { addr := omit, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 200, reasonPhrase := \"OK\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_6_1805558430567465450\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" }, { id := \"fid\", paramValue := \"wcg-ft3_1\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"video\", paramValue := omit } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := { fieldName := CONTENT_TYPE_E (19), mediaType := \"application/sdp\" }, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"INVITE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o4954c-7\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := { fieldName := REQUIRE_E (80), optionsTags := { \"timer\" } }, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := { fieldName := SESSION_EXPIRES_E (88), deltaSec := \"3600\", se_params := { { id := \"refresher\", paramValue := \"uac\" } } }, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := { fieldName := SUPPORTED_E (96), optionsTags := { \"timer\" } }, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"to_80618\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f965ce3efd3a62494f8cec71bc2c0d199a\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := { fieldName := CONTRIBUTION_ID_E (117), name_value := \"CHAT:10014002007@ericsson.se\" }, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := \"v=0\\r\\no=10014002007 3590934420 3590934420 IN IP4 142.133.150.169\\r\\ns=-\\r\\nc=IN IP4 142.133.150.169\\r\\nt=0 0\\r\\nm=message 17076 TCP/MSRP *\\r\\na=accept-types:*\\r\\na=connection:new\\r\\na=sendrecv\\r\\na=setup:passive\\r\\na=path:msrp://142.133.150.169:17076/SessionId18VAT;tcp\\r\\n\", payload := omit } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.267078", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:30.267238", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on sipInternalPort from mtc @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMMAND_SIP_SEND_SIP_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"5\" }, { parameterName := \"SUBSCRIBER\", parameterValue := \"11\" } } }, aspsSip := { { aspResponse := { addr := omit, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 200, reasonPhrase := \"OK\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_6_1805558430567465450\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" }, { id := \"fid\", paramValue := \"wcg-ft3_1\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"video\", paramValue := omit } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := { fieldName := CONTENT_TYPE_E (19), mediaType := \"application/sdp\" }, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"INVITE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o4954c-7\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := { fieldName := REQUIRE_E (80), optionsTags := { \"timer\" } }, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := { fieldName := SESSION_EXPIRES_E (88), deltaSec := \"3600\", se_params := { { id := \"refresher\", paramValue := \"uac\" } } }, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := { fieldName := SUPPORTED_E (96), optionsTags := { \"timer\" } }, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"to_80618\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f965ce3efd3a62494f8cec71bc2c0d199a\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := { fieldName := CONTRIBUTION_ID_E (117), name_value := \"CHAT:10014002007@ericsson.se\" }, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := \"v=0\\r\\no=10014002007 3590934420 3590934420 IN IP4 142.133.150.169\\r\\ns=-\\r\\nc=IN IP4 142.133.150.169\\r\\nt=0 0\\r\\nm=message 17076 TCP/MSRP *\\r\\na=accept-types:*\\r\\na=connection:new\\r\\na=sendrecv\\r\\na=setup:passive\\r\\na=path:msrp://142.133.150.169:17076/SessionId18VAT;tcp\\r\\n\", payload := omit } } } }} id 21" }
Structured  DataFrame { time: "2014/Oct/24 18:34:30.267542", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port sipInternalPort succeeded, message from mtc: @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMMAND_SIP_SEND_SIP_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"5\" }, { parameterName := \"SUBSCRIBER\", parameterValue := \"11\" } } }, aspsSip := { { aspResponse := { addr := omit, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 200, reasonPhrase := \"OK\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_6_1805558430567465450\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" }, { id := \"fid\", paramValue := \"wcg-ft3_1\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"video\", paramValue := omit } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := { fieldName := CONTENT_TYPE_E (19), mediaType := \"application/sdp\" }, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"INVITE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o4954c-7\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := { fieldName := REQUIRE_E (80), optionsTags := { \"timer\" } }, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := { fieldName := SESSION_EXPIRES_E (88), deltaSec := \"3600\", se_params := { { id := \"refresher\", paramValue := \"uac\" } } }, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := { fieldName := SUPPORTED_E (96), optionsTags := { \"timer\" } }, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"to_80618\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f965ce3efd3a62494f8cec71bc2c0d199a\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := { fieldName := CONTRIBUTION_ID_E (117), name_value := \"CHAT:10014002007@ericsson.se\" }, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := \"v=0\\r\\no=10014002007 3590934420 3590934420 IN IP4 142.133.150.169\\r\\ns=-\\r\\nc=IN IP4 142.133.150.169\\r\\nt=0 0\\r\\nm=message 17076 TCP/MSRP *\\r\\na=accept-types:*\\r\\na=connection:new\\r\\na=sendrecv\\r\\na=setup:passive\\r\\na=path:msrp://142.133.150.169:17076/SessionId18VAT;tcp\\r\\n\", payload := omit } } } }} id 21" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.267659", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Message with id 21 was extracted from the queue of sipInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.267685", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "80", function_name: "function:sipRun", message: " Stop timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:30.268457", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on sipClientPort to system @IPL4_demo_types.SIP_SendTo : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, proto := { tcp := { } }, msg := { raw := \"SIP/2.0 200 OK\\r\\nCall-ID:142.133.142.3_6_1805558430567465450\\r\\nContact:<sip:10014002007@142.133.150.169:26720;csid=2838ab5a-e194-4923-81af-c9f0a544f667;transport=TCP;fid=wcg-ft3_1>;+g.gsma.rcs.ipcall;+g.3gpp.icsi-ref=\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\";+g.3gpp.cs-voice;+g.3gpp.iari-ref=\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\";+g.oma.sip-im;video\\r\\nContent-Length:252\\r\\nContent-Type:application/sdp\\r\\nCSeq:1 INVITE\\r\\nFrom:<sip:10014002006@ericsson.se>;tag=i1o4954c-7\\r\\nMax-Forwards:69\\r\\nContribution-Id:CHAT:10014002007@ericsson.se\\r\\nRequire:timer\\r\\nSession-Expires:3600;refresher=uac\\r\\nSupported:timer\\r\\nTo:<sip:10014002007@ericsson.se>;tag=to_80618\\r\\nVia:SIP/2.0/TCP 142.133.142.3:5060;branch=z9hG4bKf1f965ce3efd3a62494f8cec71bc2c0d199a\\r\\n\\r\\nv=0\\r\\no=10014002007 3590934420 3590934420 IN IP4 142.133.150.169\\r\\ns=-\\r\\nc=IN IP4 142.133.150.169\\r\\nt=0 0\\r\\nm=message 17076 TCP/MSRP *\\r\\na=accept-types:*\\r\\na=connection:new\\r\\na=sendrecv\\r\\na=setup:passive\\r\\na=path:msrp://142.133.150.169:17076/SessionId18VAT;tcp\\r\\n\" }}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:30.268674", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Outgoing message was mapped to @IPL4asp_Types.ASP_SendTo : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, proto := { tcp := { } }, msgr\\nCall-ID:142.133.142.3_6_1805558430567465450\\r\\nContact:<sip:10014002007@142.133.150.169:26720;csid=2838ab5a-e194-4923-81af-c9f0a544f667;transport=TCP;fid=wcg-ft3_1>;+g.gsma.rcs.ipcall;+g.3gpp.icsi-ref=\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\";+g.3gpp.cs-voice;+g.3gpp.iari-ref=\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\";+g.oma.sip-im;video\\r\\nContent-Length:252\\r\\nContent-Type:application/sdp\\r\\nCSeq:1 INVITE\\r\\nFrom:<sip:10014002006@ericsson.se>;tag=i1o4954c-7\\r\\nMax-Forwards:69\\r\\nContribution-Id:CHAT:10014002007@ericsson.se\\r\\nRequire:timer\\r\\nSession-Expires:3600;refresher=uac\\r\\nSupported:timer\\r\\nTo:<sip:10014002007@ericsson.se>;tag=to_80618\\r\\nVia:SIP/2.0/TCP 142.133.142.3:5060;branch=z9hG4bKf1f965ce3efd3a62494f8cec71bc2c0d199a\\r\\n\\r\\nv=0\\r\\no=10014002007 3590934420 3590934420 IN IP4 142.133.150.169\\r\\ns=-\\r\\nc=IN IP4 142.133.150.169\\r\\nt=0 0\\r\\nm=message 17076 TCP/MSRP *\\r\\na=accept-types:*\\r\\na=connection:new\\r\\na=sendrecv\\r\\na=setup:passive\\r\\na=path:msrp://142.133.150.169:17076/SessionId18VAT;tcp\\r\\n\")}" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.268862", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "388", function_name: "function:processCommand", message: " Sent on sipInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.268966", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "74", function_name: "function:sipRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.269029", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "253", function_name: "function:receiveInternalMessage", message: " Message enqueued on sipInternalPort[0] from 849 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.269107", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Receive operation on port sipInternalPort[0] succeeded, message from 849: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.269144", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Message with id 22 was extracted from the queue of sipInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.269189", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "255", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.270233", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.270299", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "249", function_name: "function:receiveInternalMessage", message: " Receive operation on port msrpInternalPort[0] succeeded, message from 850: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.270341", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "249", function_name: "function:receiveInternalMessage", message: " Message with id 2 was extracted from the queue of msrpInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.270370", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "250", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.270459", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "168", function_name: "function:sendInternalMessage", message: " Sent on msrpInternalPort[0] to 850 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.270632", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "83", function_name: "function:msrpRun", message: " Message enqueued on msrpInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.270650", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.270731", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Receive operation on port msrpInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.270765", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Message with id 2 was extracted from the queue of msrpInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.270788", component: "850", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "85", function_name: "function:msrpRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.270943", component: "850", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "383", function_name: "function:handleClosedConnectionByRemoteSide", message: " Start timer timerCheckMsrpQueue: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:30.324325", component: "857", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on msrpPort from system @IPL4asp_Types.ASP_RecvFrom : { connId := 1, remName := \"142.133.142.3\", remPort := 6060, locName := \"142.133.150.169\", locPort := 17077, proto := { tcp := { } }, userData := 0, msg := '4D535250206F7974713739657A2053454E440D0A546F2D506174683A206D7372703A2F2F3134322E3133332E3135302E3136393A31373037372F53657373696F6E496431385641543B7463700D0A46726F6D2D506174683A206D7372703A2F2F3134322E3133332E3134322E333A363036302F72466871784877686F676F583B7463700D0A427974652D52616E67653A20312D3239362F3239360D0A4D6573736167652D49443A2038335658414131470D0A436F6E74656E742D547970653A206D6573736167652F6370696D0D0A0D0A546F3A203C7369703A616E6F6E796D6F757340616E6F6E796D6F75732E696E76616C69643E0D0A46726F6D3A203C7369703A616E6F6E796D6F757340616E6F6E796D6F75732E696E76616C69643E0D0A4461746554696D653A20323031342D31302D32345432323A33343A32392B30303A30300D0A4E533A20696D646E203C75726E3A696574663A706172616D733A696D646E3E0D0A696D646E2E446973706F736974696F6E2D4E6F74696669636174696F6E3A20706F7369746976652D64656C69766572790D0A696D646E2E4D6573736167652D49443A2038335658414131470D0A0D0A436F6E74656E742D547970653A20746578742F706C61696E0D0A0D0A426F6479206D65737361676520313030313430303230303720746F2031303031343030323030360D0A2D2D2D2D2D2D2D6F7974713739657A240D0A'O (\"MSRP oytq79ez SEND\\r\\nTo-Path: msrp://142.133.150.169:17077/SessionId18VAT;tcp\\r\\nFrom-Path: msrp://142.133.142.3:6060/rFhqxHwhogoX;tcp\\r\\nByte-Range: 1-296/296\\r\\nMessage-ID: 83VXAA1G\\r\\nContent-Type: message/cpim\\r\\n\\r\\nTo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:29+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: 83VXAA1G\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002007 to 10014002006\\r\\n-------oytq79ez$\\r\\n\")} id 2" }
Structured  DataFrame { time: "2014/Oct/24 18:34:30.324981", component: "857", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Incoming message was mapped to @IPL4_MSRP_demo_types.MSRP_RecvFrom : { connId := 1, remName := \"142.133.142.3\", remPort := 6060, locName := \"142.133.150.169\", locPort := 17077, proto := { tcp := { } }, userData := 0, msg := { request := { requestStart := { transactId := \"oytq79ez\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17077\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"rFhqxHwhogoX\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"83VXAA1G\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"296\", total := \"296\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:29+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: 83VXAA1G\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002007 to 10014002006\", binary_message := <unbound> }, endLine := { transactId := \"oytq79ez\", continuationFlag := \"$\" } } }, binary_messageo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:29+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: 83VXAA1G\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002007 to 10014002006\")} id 2" }
Structured  DataFrame { time: "2014/Oct/24 18:34:30.325024", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on sipClientPort from system @IPL4asp_Types.ASP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msg := '41434B207369703A3130303134303032303037403134322E3133332E3135302E3136393A32363732303B637369643D32383338616235612D653139342D343932332D383161662D6339663061353434663636373B7472616E73706F72743D5443503B6669643D7763672D6674335F31205349502F322E300D0A4D61782D466F7277617264733A2036390D0A436F6E74656E742D4C656E6774683A20300D0A546F3A203C7369703A3130303134303032303037406572696373736F6E2E73653E3B7461673D746F5F38303631380D0A437365713A20312041434B0D0A5669613A205349502F322E302F544350203134322E3133332E3134322E333A353036303B6272616E63683D7A39684734624B6631663932323966343637623266653634323435626232626136376236396333313761360D0A557365722D4167656E743A204832530D0A46726F6D3A203C7369703A3130303134303032303036406572696373736F6E2E73653E3B7461673D69316F34393534632D370D0A43616C6C2D49643A203134322E3133332E3134322E335F365F313830353535383433303536373436353435300D0A0D0A'O (\"ACK sip:10014002007@142.133.150.169:26720;csid=2838ab5a-e194-4923-81af-c9f0a544f667;transport=TCP;fid=wcg-ft3_1 SIP/2.0\\r\\nMax-Forwards: 69\\r\\nContent-Length: 0\\r\\nTo: <sip:10014002007@ericsson.se>;tag=to_80618\\r\\nCseq: 1 ACK\\r\\nVia: SIP/2.0/TCP 142.133.142.3:5060;branch=z9hG4bKf1f9229f467b2fe64245bb2ba67b69c317a6\\r\\nUser-Agent: H2S\\r\\nFrom: <sip:10014002006@ericsson.se>;tag=i1o4954c-7\\r\\nCall-Id: 142.133.142.3_6_1805558430567465450\\r\\n\\r\\n\")} id 12" }
Structured  DataFrame { time: "2014/Oct/24 18:34:30.325667", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Incoming message was mapped to @IPL4_demo_types.SIP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msg := { request := { requestLine := { method := ACK_E (0), requestUri := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" }, { id := \"fid\", paramValue := \"wcg-ft3_1\" } }, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_6_1805558430567465450\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"ACK\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o4954c-7\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"to_80618\" } } }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f9229f467b2fe64245bb2ba67b69c317a6\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } }} id 12" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.343948", component: "850", peer_component: "BaseMsrpComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "385", function_name: "function:handleClosedConnectionByRemoteSide", message: " Message enqueued on msrpPort from system @Socket_API_Definitions" }
Structured  DataFrame { time: "2014/Oct/24 18:34:30.351123", component: "850", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on msrpPort from system @IPL4asp_Types.ASP_RecvFrom : { connId := 2, remName := \"142.133.142.3\", remPort := 60548, locName := \"142.133.150.169\", locPort := 17076, proto := { tcp := { } }, userData := 0, msg := '4D535250206E4C32654366384E2053454E440D0A546F2D506174683A206D7372703A2F2F3134322E3133332E3135302E3136393A31373037362F53657373696F6E496431385641543B7463700D0A46726F6D2D506174683A206D7372703A2F2F3134322E3133332E3134322E333A363036302F6A39454D647339534C5A645A3B7463700D0A4D6573736167652D49443A20644E655762654E310D0A2D2D2D2D2D2D2D6E4C32654366384E240D0A'O (\"MSRP nL2eCf8N SEND\\r\\nTo-Path: msrp://142.133.150.169:17076/SessionId18VAT;tcp\\r\\nFrom-Path: msrp://142.133.142.3:6060/j9EMds9SLZdZ;tcp\\r\\nMessage-ID: dNeWbeN1\\r\\n-------nL2eCf8N$\\r\\n\")} id 2" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.351431", component: "850", peer_component: "BaseMsrpComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "385", function_name: "function:handleClosedConnectionByRemoteSide", message: " Incoming message was mapped to @IPL4_MSRP_demo_types" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.474039", component: "850", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "394", function_name: "function:handleClosedConnectionByRemoteSide", message: " Timeout timerCheckMsrpQueue: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.474294", component: "850", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "287", function_name: "function:baseReceiveMsrpMessage", message: " Start timer timerWaitForMsrpResponse: 15 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.474369", component: "850", peer_component: "BaseMsrpComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "308", function_name: "function:baseReceiveMsrpMessage", message: " Receive operation on port msrpPort succeeded, message from system(" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.474404", component: "850", peer_component: "BaseMsrpComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "308", function_name: "function:baseReceiveMsrpMessage", message: " Message with id 1 was extracted from the queue of msrpPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.474429", component: "850", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "309", function_name: "function:baseReceiveMsrpMessage", message: " Stop timer timerWaitForMsrpResponse: 15 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.474573", component: "850", peer_component: "BaseMsrpComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "290", function_name: "function:baseReceiveMsrpMessage", message: " Receive operation on port msrpPort succeeded, message from system(" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.474622", component: "850", peer_component: "BaseMsrpComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "290", function_name: "function:baseReceiveMsrpMessage", message: " Message with id 2 was extracted from the queue of msrpPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.475086", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "343", function_name: "function:processCommand", message: " Sent on msrpInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.475209", component: "850", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "79", function_name: "function:msrpRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.475378", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "216", function_name: "function:receiveInternalMessage", message: " Message enqueued on msrpInternalPort[0] from 850 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.475545", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Receive operation on port msrpInternalPort[0] succeeded, message from 850: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.475623", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Message with id 3 was extracted from the queue of msrpInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.475664", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "218", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.476565", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.489774", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.489992", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "168", function_name: "function:sendInternalMessage", message: " Sent on msrpInternalPort[0] to 850 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.490279", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.490335", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "83", function_name: "function:msrpRun", message: " Message enqueued on msrpInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.490447", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Receive operation on port msrpInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.490512", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Message with id 3 was extracted from the queue of msrpInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.490554", component: "850", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "85", function_name: "function:msrpRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.490771", component: "850", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "383", function_name: "function:handleClosedConnectionByRemoteSide", message: " Start timer timerCheckMsrpQueue: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.694013", component: "850", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "394", function_name: "function:handleClosedConnectionByRemoteSide", message: " Timeout timerCheckMsrpQueue: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:30.694344", component: "850", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on msrpPort to system @IPL4_MSRP_demo_types.MSRP_Send : { connId := 2, proto := { tcp := { } }, msg := '4D535250206E4C32654366384E20323030204F4B0D0A546F2D506174683A206D7372703A2F2F3134322E3133332E3134322E333A363036302F6A39454D647339534C5A645A3B7463700D0A46726F6D2D506174683A206D7372703A2F2F3134322E3133332E3135302E3136393A31373037362F53657373696F6E496431385641543B7463700D0A2D2D2D2D2D2D2D6E4C32654366384E240D0A'O (\"MSRP nL2eCf8N 200 OK\\r\\nTo-Path: msrp://142.133.142.3:6060/j9EMds9SLZdZ;tcp\\r\\nFrom-Path: msrp://142.133.150.169:17076/SessionId18VAT;tcp\\r\\n-------nL2eCf8N$\\r\\n\")}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:30.694423", component: "850", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Outgoing message was mapped to @IPL4asp_Types.ASP_Send : { connId := 2, proto := { tcp := { } }, msg := '4D535250206E4C32654366384E20323030204F4B0D0A546F2D506174683A206D7372703A2F2F3134322E3133332E3134322E333A363036302F6A39454D647339534C5A645A3B7463700D0A46726F6D2D506174683A206D7372703A2F2F3134322E3133332E3135302E3136393A31373037362F53657373696F6E496431385641543B7463700D0A2D2D2D2D2D2D2D6E4C32654366384E240D0A'O (\"MSRP nL2eCf8N 200 OK\\r\\nTo-Path: msrp://142.133.142.3:6060/j9EMds9SLZdZ;tcp\\r\\nFrom-Path: msrp://142.133.150.169:17076/SessionId18VAT;tcp\\r\\n-------nL2eCf8N$\\r\\n\")}" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.694599", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "343", function_name: "function:processCommand", message: " Sent on msrpInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.694682", component: "850", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "79", function_name: "function:msrpRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.694805", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "216", function_name: "function:receiveInternalMessage", message: " Message enqueued on msrpInternalPort[0] from 850 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.694948", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Receive operation on port msrpInternalPort[0] succeeded, message from 850: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.695057", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Message with id 4 was extracted from the queue of msrpInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.695110", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "218", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.697367", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.709777", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "286", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.709921", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "202", function_name: "function:sendInternalMessage", message: " Sent on sipInternalPort[0] to 849 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.710226", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.710386", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "78", function_name: "function:sipRun", message: " Message enqueued on sipInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.710493", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Receive operation on port sipInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.710527", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Message with id 22 was extracted from the queue of sipInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.710550", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "80", function_name: "function:sipRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.710755", component: "849", peer_component: "BaseSipClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "320", function_name: "function:generalReceiveSip", message: " Start timer timerWaitForSipMessage: 15 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:30.711037", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port sipClientPort succeeded, message from system(): @IPL4_demo_types.SIP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msg := { request := { requestLine := { method := ACK_E (0), requestUri := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" }, { id := \"fid\", paramValue := \"wcg-ft3_1\" } }, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_6_1805558430567465450\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"ACK\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o4954c-7\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"to_80618\" } } }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f9229f467b2fe64245bb2ba67b69c317a6\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } }} id 12" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.711170", component: "849", peer_component: "BaseSipClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "345", function_name: "function:generalReceiveSip", message: " Message with id 12 was extracted from the queue of sipClientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.711203", component: "849", peer_component: "BaseSipClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "346", function_name: "function:generalReceiveSip", message: " Stop timer timerWaitForSipMessage: 15 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:30.712241", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on sipInternalPort to mtc @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspRequest := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, request := { requestLine := { method := ACK_E (0), requestUri := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" }, { id := \"fid\", paramValue := \"wcg-ft3_1\" } }, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_6_1805558430567465450\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"ACK\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o4954c-7\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"to_80618\" } } }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f9229f467b2fe64245bb2ba67b69c317a6\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.712611", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "74", function_name: "function:sipRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:30.712772", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on sipInternalPort[0] from 849 @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspRequest := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, request := { requestLine := { method := ACK_E (0), requestUri := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" }, { id := \"fid\", paramValue := \"wcg-ft3_1\" } }, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_6_1805558430567465450\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"ACK\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o4954c-7\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"to_80618\" } } }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f9229f467b2fe64245bb2ba67b69c317a6\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 23" }
Structured  DataFrame { time: "2014/Oct/24 18:34:30.713004", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port sipInternalPort[0] succeeded, message from 849: @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspRequest := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, request := { requestLine := { method := ACK_E (0), requestUri := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" }, { id := \"fid\", paramValue := \"wcg-ft3_1\" } }, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_6_1805558430567465450\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 1, method := \"ACK\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o4954c-7\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"to_80618\" } } }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f9229f467b2fe64245bb2ba67b69c317a6\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 23" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.713118", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Message with id 23 was extracted from the queue of sipInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.713174", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "255", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.716711", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.729783", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.729906", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "168", function_name: "function:sendInternalMessage", message: " Sent on msrpInternalPort[1] to 857 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.730094", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "83", function_name: "function:msrpRun", message: " Message enqueued on msrpInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.730170", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.730278", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Receive operation on port msrpInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.730332", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Message with id 3 was extracted from the queue of msrpInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.730376", component: "857", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "85", function_name: "function:msrpRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.730518", component: "857", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "383", function_name: "function:handleClosedConnectionByRemoteSide", message: " Start timer timerCheckMsrpQueue: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.934256", component: "857", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "394", function_name: "function:handleClosedConnectionByRemoteSide", message: " Timeout timerCheckMsrpQueue: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.934501", component: "857", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "287", function_name: "function:baseReceiveMsrpMessage", message: " Start timer timerWaitForMsrpResponse: 15 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:30.934690", component: "857", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port msrpPort succeeded, message from system(): @IPL4_MSRP_demo_types.MSRP_RecvFrom : { connId := 1, remName := \"142.133.142.3\", remPort := 6060, locName := \"142.133.150.169\", locPort := 17077, proto := { tcp := { } }, userData := 0, msg := { request := { requestStart := { transactId := \"oytq79ez\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17077\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"rFhqxHwhogoX\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"83VXAA1G\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"296\", total := \"296\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:29+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: 83VXAA1G\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002007 to 10014002006\", binary_message := <unbound> }, endLine := { transactId := \"oytq79ez\", continuationFlag := \"$\" } } }, binary_message := '546F3A203C7369703A616E6F6E796D6F757340616E6F6E796D6F75732E696E76616C69643E0D0A46726F6D3A203C7369703A616E6F6E796D6F757340616E6F6E796D6F75732E696E76616C69643E0D0A4461746554696D653A20323031342D31302D32345432323A33343A32392B30303A30300D0A4E533A20696D646E203C75726E3A696574663A706172616D733A696D646E3E0D0A696D646E2E446973706F736974696F6E2D4E6F74696669636174696F6E3A20706F7369746976652D64656C69766572790D0A696D646E2E4D6573736167652D49443A2038335658414131470D0A0D0A436F6E74656E742D547970653A20746578742F706C61696E0D0A0D0A426F6479206D65737361676520313030313430303230303720746F203130303134303032303036'O (\"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:29+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: 83VXAA1G\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002007 to 10014002006\")} id 2" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.934805", component: "857", peer_component: "BaseMsrpComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "290", function_name: "function:baseReceiveMsrpMessage", message: " Message with id 2 was extracted from the queue of msrpPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.934897", component: "857", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "295", function_name: "function:baseReceiveMsrpMessage", message: " Stop timer timerWaitForMsrpResponse: 15 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:30.935339", component: "857", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on msrpInternalPort to mtc @variables.internalPortMessageWithMsrpMessages : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_MSRP_EXPECT_MESSAGE\" } } }, msrpMessages := { { request := { requestStart := { transactId := \"oytq79ez\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17077\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"rFhqxHwhogoX\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"83VXAA1G\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"296\", total := \"296\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:29+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: 83VXAA1G\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002007 to 10014002006\", binary_messageo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:29+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: 83VXAA1G\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002007 to 10014002006\") }, endLine := { transactId := \"oytq79ez\", continuationFlag := \"$\" } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.935480", component: "857", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "79", function_name: "function:msrpRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:30.935740", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on msrpInternalPort[1] from 857 @variables.internalPortMessageWithMsrpMessages : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_MSRP_EXPECT_MESSAGE\" } } }, msrpMessages := { { request := { requestStart := { transactId := \"oytq79ez\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17077\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"rFhqxHwhogoX\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"83VXAA1G\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"296\", total := \"296\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:29+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: 83VXAA1G\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002007 to 10014002006\", binary_messageo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:29+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: 83VXAA1G\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002007 to 10014002006\") }, endLine := { transactId := \"oytq79ez\", continuationFlag := \"$\" } } } }} id 4" }
Structured  DataFrame { time: "2014/Oct/24 18:34:30.935991", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port msrpInternalPort[1] succeeded, message from 857: @variables.internalPortMessageWithMsrpMessages : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_MSRP_EXPECT_MESSAGE\" } } }, msrpMessages := { { request := { requestStart := { transactId := \"oytq79ez\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17077\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"rFhqxHwhogoX\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"83VXAA1G\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"296\", total := \"296\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:29+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: 83VXAA1G\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002007 to 10014002006\", binary_messageo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:29+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: 83VXAA1G\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002007 to 10014002006\") }, endLine := { transactId := \"oytq79ez\", continuationFlag := \"$\" } } } }} id 4" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.936116", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Message with id 4 was extracted from the queue of msrpInternalPort[1]" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.936160", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "218", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.937563", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.949775", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.949955", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "168", function_name: "function:sendInternalMessage", message: " Sent on msrpInternalPort[1] to 857 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.950215", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.950294", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "83", function_name: "function:msrpRun", message: " Message enqueued on msrpInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.950450", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Receive operation on port msrpInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.950517", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Message with id 4 was extracted from the queue of msrpInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.950556", component: "857", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "85", function_name: "function:msrpRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:30.950839", component: "857", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "383", function_name: "function:handleClosedConnectionByRemoteSide", message: " Start timer timerCheckMsrpQueue: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.154242", component: "857", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "394", function_name: "function:handleClosedConnectionByRemoteSide", message: " Timeout timerCheckMsrpQueue: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:31.154550", component: "857", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on msrpPort to system @IPL4_MSRP_demo_types.MSRP_Send : { connId := 1, proto := { tcp := { } }, msg := '4D535250206F7974713739657A20323030204F4B0D0A546F2D506174683A206D7372703A2F2F3134322E3133332E3134322E333A363036302F72466871784877686F676F583B7463700D0A46726F6D2D506174683A206D7372703A2F2F3134322E3133332E3135302E3136393A31373037372F53657373696F6E496431385641543B7463700D0A2D2D2D2D2D2D2D6F7974713739657A240D0A'O (\"MSRP oytq79ez 200 OK\\r\\nTo-Path: msrp://142.133.142.3:6060/rFhqxHwhogoX;tcp\\r\\nFrom-Path: msrp://142.133.150.169:17077/SessionId18VAT;tcp\\r\\n-------oytq79ez$\\r\\n\")}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:31.154628", component: "857", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Outgoing message was mapped to @IPL4asp_Types.ASP_Send : { connId := 1, proto := { tcp := { } }, msg := '4D535250206F7974713739657A20323030204F4B0D0A546F2D506174683A206D7372703A2F2F3134322E3133332E3134322E333A363036302F72466871784877686F676F583B7463700D0A46726F6D2D506174683A206D7372703A2F2F3134322E3133332E3135302E3136393A31373037372F53657373696F6E496431385641543B7463700D0A2D2D2D2D2D2D2D6F7974713739657A240D0A'O (\"MSRP oytq79ez 200 OK\\r\\nTo-Path: msrp://142.133.142.3:6060/rFhqxHwhogoX;tcp\\r\\nFrom-Path: msrp://142.133.150.169:17077/SessionId18VAT;tcp\\r\\n-------oytq79ez$\\r\\n\")}" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.154867", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "343", function_name: "function:processCommand", message: " Sent on msrpInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.154973", component: "857", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "79", function_name: "function:msrpRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.155090", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "216", function_name: "function:receiveInternalMessage", message: " Message enqueued on msrpInternalPort[1] from 857 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.155189", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Receive operation on port msrpInternalPort[1] succeeded, message from 857: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.155254", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Message with id 5 was extracted from the queue of msrpInternalPort[1]" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.155287", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "218", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.163674", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.173774", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:31.174058", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on msrpInternalPort[0] to 850 @variables.internalPortMessageWithMsrpMessages : { internalMessage := { description := \"COMMAND_MSRP_SEND_MESSAGE\", parameters := { { parameterName := \"LISTENER_PORT\", parameterValue := \"17076\" } } }, msrpMessages := { { request := { requestStart := { transactId := \"oytq7VAT\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"j9EMds9SLZdZ\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17076\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"83VXAA1G\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"296\", total := \"296\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:29+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: 83VXAA1G\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002007 to 10014002006\", binary_message := omit }, endLine := { transactId := \"oytq7VAT\", continuationFlag := \"$\" } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.174301", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:31.174387", component: "850", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on msrpInternalPort from mtc @variables.internalPortMessageWithMsrpMessages : { internalMessage := { description := \"COMMAND_MSRP_SEND_MESSAGE\", parameters := { { parameterName := \"LISTENER_PORT\", parameterValue := \"17076\" } } }, msrpMessages := { { request := { requestStart := { transactId := \"oytq7VAT\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"j9EMds9SLZdZ\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17076\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"83VXAA1G\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"296\", total := \"296\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:29+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: 83VXAA1G\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002007 to 10014002006\", binary_message := omit }, endLine := { transactId := \"oytq7VAT\", continuationFlag := \"$\" } } } }} id 4" }
Structured  DataFrame { time: "2014/Oct/24 18:34:31.174569", component: "850", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port msrpInternalPort succeeded, message from mtc: @variables.internalPortMessageWithMsrpMessages : { internalMessage := { description := \"COMMAND_MSRP_SEND_MESSAGE\", parameters := { { parameterName := \"LISTENER_PORT\", parameterValue := \"17076\" } } }, msrpMessages := { { request := { requestStart := { transactId := \"oytq7VAT\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"j9EMds9SLZdZ\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17076\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"83VXAA1G\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"296\", total := \"296\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:29+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: 83VXAA1G\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002007 to 10014002006\", binary_message := omit }, endLine := { transactId := \"oytq7VAT\", continuationFlag := \"$\" } } } }} id 4" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.174618", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Message with id 4 was extracted from the queue of msrpInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.174647", component: "850", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "85", function_name: "function:msrpRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.174901", component: "850", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "383", function_name: "function:handleClosedConnectionByRemoteSide", message: " Start timer timerCheckMsrpQueue: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.378000", component: "850", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "394", function_name: "function:handleClosedConnectionByRemoteSide", message: " Timeout timerCheckMsrpQueue: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:31.378335", component: "850", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on msrpPort to system @IPL4_MSRP_demo_types.MSRP_Send : { connId := 2, proto := { tcp := { } }, msgoytq7VAT SEND\\r\\nTo-Path: msrp://142.133.142.3:6060/j9EMds9SLZdZ;tcp\\r\\nFrom-Path: msrp://142.133.150.169:17076/SessionId18VAT;tcp\\r\\nMessage-ID: 83VXAA1G\\r\\nByte-Range: 1-296/296\\r\\nContent-Type: message/cpim\\r\\n\\r\\nTo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:29+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: 83VXAA1G\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002007 to 10014002006\\r\\n-------oytq7VAT$\\r\\n\")}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:31.378558", component: "850", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Outgoing message was mapped to @IPL4asp_Types.ASP_Send : { connId := 2, proto := { tcp := { } }, msgoytq7VAT SEND\\r\\nTo-Path: msrp://142.133.142.3:6060/j9EMds9SLZdZ;tcp\\r\\nFrom-Path: msrp://142.133.150.169:17076/SessionId18VAT;tcp\\r\\nMessage-ID: 83VXAA1G\\r\\nByte-Range: 1-296/296\\r\\nContent-Type: message/cpim\\r\\n\\r\\nTo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:29+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: 83VXAA1G\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002007 to 10014002006\\r\\n-------oytq7VAT$\\r\\n\")}" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.378778", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "343", function_name: "function:processCommand", message: " Sent on msrpInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.378872", component: "850", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "79", function_name: "function:msrpRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.378937", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "216", function_name: "function:receiveInternalMessage", message: " Message enqueued on msrpInternalPort[0] from 850 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.379021", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Receive operation on port msrpInternalPort[0] succeeded, message from 850: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.379052", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Message with id 5 was extracted from the queue of msrpInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.379074", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "218", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.379662", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.389721", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.389829", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "168", function_name: "function:sendInternalMessage", message: " Sent on msrpInternalPort[0] to 850 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.389968", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.389978", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "83", function_name: "function:msrpRun", message: " Message enqueued on msrpInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.390045", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Receive operation on port msrpInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.390091", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Message with id 5 was extracted from the queue of msrpInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.390110", component: "850", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "85", function_name: "function:msrpRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.390229", component: "850", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "383", function_name: "function:handleClosedConnectionByRemoteSide", message: " Start timer timerCheckMsrpQueue: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:31.397396", component: "850", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on msrpPort from system @IPL4asp_Types.ASP_RecvFrom : { connId := 2, remName := \"142.133.142.3\", remPort := 60548, locName := \"142.133.150.169\", locPort := 17076, proto := { tcp := { } }, userData := 0, msg := '4D535250206F7974713756415420323030204F4B0D0A546F2D506174683A206D7372703A2F2F3134322E3133332E3135302E3136393A31373037362F53657373696F6E496431385641543B7463700D0A46726F6D2D506174683A206D7372703A2F2F3134322E3133332E3134322E333A363036302F6A39454D647339534C5A645A3B7463700D0A2D2D2D2D2D2D2D6F79747137564154240D0A'O (\"MSRP oytq7VAT 200 OK\\r\\nTo-Path: msrp://142.133.150.169:17076/SessionId18VAT;tcp\\r\\nFrom-Path: msrp://142.133.142.3:6060/j9EMds9SLZdZ;tcp\\r\\n-------oytq7VAT$\\r\\n\")} id 3" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.397535", component: "850", peer_component: "BaseMsrpComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "385", function_name: "function:handleClosedConnectionByRemoteSide", message: " Incoming message was mapped to @IPL4_MSRP_demo_types" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.590270", component: "850", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "394", function_name: "function:handleClosedConnectionByRemoteSide", message: " Timeout timerCheckMsrpQueue: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.590440", component: "850", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "287", function_name: "function:baseReceiveMsrpMessage", message: " Start timer timerWaitForMsrpResponse: 15 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.590517", component: "850", peer_component: "BaseMsrpComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "290", function_name: "function:baseReceiveMsrpMessage", message: " Receive operation on port msrpPort succeeded, message from system(" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.590588", component: "850", peer_component: "BaseMsrpComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "290", function_name: "function:baseReceiveMsrpMessage", message: " Message with id 3 was extracted from the queue of msrpPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.590639", component: "850", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "295", function_name: "function:baseReceiveMsrpMessage", message: " Stop timer timerWaitForMsrpResponse: 15 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.590862", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "343", function_name: "function:processCommand", message: " Sent on msrpInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.590943", component: "850", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "79", function_name: "function:msrpRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.591141", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "216", function_name: "function:receiveInternalMessage", message: " Message enqueued on msrpInternalPort[0] from 850 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.591223", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Receive operation on port msrpInternalPort[0] succeeded, message from 850: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.591266", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Message with id 6 was extracted from the queue of msrpInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.591286", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "218", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.597406", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.609735", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "267", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:31.609867", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort[5] to 856 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"6\" } } }, aspHttp := { { httpMessage := { method := \"GET\", url := \"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/channels\", body := \"\", contentType := \"\", statusCode := \"\", header := { } } } }}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:31.609996", component: "856", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort from mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"6\" } } }, aspHttp := { { httpMessage := { method := \"GET\", url := \"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/channels\", body := \"\", contentType := \"\", statusCode := \"\", header := { } } } }} id 2" }
Structured  DataFrame { time: "2014/Oct/24 18:34:31.610065", component: "856", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort succeeded, message from mtc: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"6\" } } }, aspHttp := { { httpMessage := { method := \"GET\", url := \"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/channels\", body := \"\", contentType := \"\", statusCode := \"\", header := { } } } }} id 2" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.610087", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.610090", component: "856", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "67", function_name: "function:httpNodeRun", message: " Message with id 2 was extracted from the queue of httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.610105", component: "856", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "68", function_name: "function:httpNodeRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.610256", component: "856", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "307", function_name: "function:clearHTTPClientPort", message: " Start timer timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.610273", component: "856", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "313", function_name: "function:clearHTTPClientPort", message: " Timeout timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.610322", component: "856", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Sent on clientPort to system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.611028", component: "856", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Message enqueued on clientPort from system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.611058", component: "856", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "243", function_name: "function:sendHTTPClientRequest", message: " Start timer timerWaitForHTTPOpenConnection: 2 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.611081", component: "856", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Receive operation on port clientPort succeeded, message from system(" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.611097", component: "856", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Message with id 3 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.611111", component: "856", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "246", function_name: "function:sendHTTPClientRequest", message: " Stop timer timerWaitForHTTPOpenConnection: 2 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:31.611151", component: "856", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on clientPort to system @HTTPmsg_Types.HTTPMessage : { request := { client_id := 10, method := \"GET\", uri := \"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/channels\", version_major := 1, version_minor := 1, header := { { header_name := \"Host\", header_value := \"142.133.142.3\" }, { header_name := \"Content-Length\", header_value := \"0\" } }, body := \"\" }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.611226", component: "856", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "189", function_name: "function:receiveAnyHTTPClientResponse", message: " Start timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:31.626863", component: "856", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on clientPort from system @HTTPmsg_Types.HTTPMessage : { response := { client_id := 10, version_major := 1, version_minor := 1, statuscode := 200, statustext := \"OK\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:31 GMT\" } }, body := \"{\\n \\\"events\\\": {\\n \\\"list\\\": [ {\\n \\\"eventObject\\\": {\\n \\\"@type\\\": \\\"message\\\",\\n \\\"from\\\": \\\"sip:10014002007@ericsson.se\\\",\\n \\\"contentType\\\": \\\"text/plain\\\",\\n \\\"reportRequest\\\": [ \\\"Delivered\\\" ],\\n \\\"msgId\\\": \\\"83VXAA1G\\\",\\n \\\"dateTime\\\": \\\"2014-10-24T22:34:29+00:00\\\",\\n \\\"body\\\": \\\"Body message 10014002007 to 10014002006\\\",\\n \\\"type\\\": \\\"session-message\\\"\\n }\\n } ]\\n }\\n}\" }} id 4" }
Structured  DataFrame { time: "2014/Oct/24 18:34:31.626949", component: "856", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port clientPort succeeded, message from system(): @HTTPmsg_Types.HTTPMessage : { response := { client_id := 10, version_major := 1, version_minor := 1, statuscode := 200, statustext := \"OK\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:31 GMT\" } }, body := \"{\\n \\\"events\\\": {\\n \\\"list\\\": [ {\\n \\\"eventObject\\\": {\\n \\\"@type\\\": \\\"message\\\",\\n \\\"from\\\": \\\"sip:10014002007@ericsson.se\\\",\\n \\\"contentType\\\": \\\"text/plain\\\",\\n \\\"reportRequest\\\": [ \\\"Delivered\\\" ],\\n \\\"msgId\\\": \\\"83VXAA1G\\\",\\n \\\"dateTime\\\": \\\"2014-10-24T22:34:29+00:00\\\",\\n \\\"body\\\": \\\"Body message 10014002007 to 10014002006\\\",\\n \\\"type\\\": \\\"session-message\\\"\\n }\\n } ]\\n }\\n}\" }} id 4" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.626981", component: "856", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "193", function_name: "function:receiveAnyHTTPClientResponse", message: " Message with id 4 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.626999", component: "856", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "194", function_name: "function:receiveAnyHTTPClientResponse", message: " Stop timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:31.627107", component: "856", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort to mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\n \\\"events\\\": {\\n \\\"list\\\": [ {\\n \\\"eventObject\\\": {\\n \\\"@type\\\": \\\"message\\\",\\n \\\"from\\\": \\\"sip:10014002007@ericsson.se\\\",\\n \\\"contentType\\\": \\\"text/plain\\\",\\n \\\"reportRequest\\\": [ \\\"Delivered\\\" ],\\n \\\"msgId\\\": \\\"83VXAA1G\\\",\\n \\\"dateTime\\\": \\\"2014-10-24T22:34:29+00:00\\\",\\n \\\"body\\\": \\\"Body message 10014002007 to 10014002006\\\",\\n \\\"type\\\": \\\"session-message\\\"\\n }\\n } ]\\n }\\n}\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:31 GMT\" } } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.627182", component: "856", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "62", function_name: "function:httpNodeRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:31.627272", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort[5] from 856 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\n \\\"events\\\": {\\n \\\"list\\\": [ {\\n \\\"eventObject\\\": {\\n \\\"@type\\\": \\\"message\\\",\\n \\\"from\\\": \\\"sip:10014002007@ericsson.se\\\",\\n \\\"contentType\\\": \\\"text/plain\\\",\\n \\\"reportRequest\\\": [ \\\"Delivered\\\" ],\\n \\\"msgId\\\": \\\"83VXAA1G\\\",\\n \\\"dateTime\\\": \\\"2014-10-24T22:34:29+00:00\\\",\\n \\\"body\\\": \\\"Body message 10014002007 to 10014002006\\\",\\n \\\"type\\\": \\\"session-message\\\"\\n }\\n } ]\\n }\\n}\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:31 GMT\" } } } } }} id 3" }
Structured  DataFrame { time: "2014/Oct/24 18:34:31.627377", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort[5] succeeded, message from 856: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\n \\\"events\\\": {\\n \\\"list\\\": [ {\\n \\\"eventObject\\\": {\\n \\\"@type\\\": \\\"message\\\",\\n \\\"from\\\": \\\"sip:10014002007@ericsson.se\\\",\\n \\\"contentType\\\": \\\"text/plain\\\",\\n \\\"reportRequest\\\": [ \\\"Delivered\\\" ],\\n \\\"msgId\\\": \\\"83VXAA1G\\\",\\n \\\"dateTime\\\": \\\"2014-10-24T22:34:29+00:00\\\",\\n \\\"body\\\": \\\"Body message 10014002007 to 10014002006\\\",\\n \\\"type\\\": \\\"session-message\\\"\\n }\\n } ]\\n }\\n}\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:31 GMT\" } } } } }} id 3" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.627410", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Message with id 3 was extracted from the queue of httpNodeInternalPort[5]" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.627428", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "241", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.632536", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:31.633875", component: "850", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on msrpPort from system @IPL4asp_Types.ASP_RecvFrom : { connId := 2, remName := \"142.133.142.3\", remPort := 60548, locName := \"142.133.150.169\", locPort := 17076, proto := { tcp := { } }, userData := 0, msgybLNxKDg SEND\\r\\nTo-Path: msrp://142.133.150.169:17076/SessionId18VAT;tcp\\r\\nFrom-Path: msrp://142.133.142.3:6060/j9EMds9SLZdZ;tcp\\r\\nByte-Range: 1-578/578\\r\\nMessage-ID: imdn-BEFliYaO\\r\\nContent-Type: message/cpim\\r\\n\\r\\nTo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:31+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: imdn-BEFliYaO\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>83VXAA1G</message-id><datetime>2014-10-24T22:34:29+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\\r\\n-------ybLNxKDg$\\r\\n\")} id 4" }
Structured  DataFrame { time: "2014/Oct/24 18:34:31.634214", component: "850", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Incoming message was mapped to @IPL4_MSRP_demo_types.MSRP_RecvFrom : { connId := 2, remName := \"142.133.142.3\", remPort := 60548, locName := \"142.133.150.169\", locPort := 17076, proto := { tcp := { } }, userData := 0, msg := { request := { requestStart := { transactId := \"ybLNxKDg\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17076\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"j9EMds9SLZdZ\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"imdn-BEFliYaO\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"578\", total := \"578\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:31+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: imdn-BEFliYaO\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>83VXAA1G</message-id><datetime>2014-10-24T22:34:29+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\", binary_message := <unbound> }, endLine := { transactId := \"ybLNxKDg\", continuationFlag := \"$\" } } }, binary_messageo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:31+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: imdn-BEFliYaO\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>83VXAA1G</message-id><datetime>2014-10-24T22:34:29+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\")} id 4" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.645741", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.645827", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "168", function_name: "function:sendInternalMessage", message: " Sent on msrpInternalPort[0] to 850 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.645942", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.645948", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "83", function_name: "function:msrpRun", message: " Message enqueued on msrpInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.646003", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Receive operation on port msrpInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.646025", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Message with id 6 was extracted from the queue of msrpInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.646040", component: "850", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "85", function_name: "function:msrpRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.646147", component: "850", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "383", function_name: "function:handleClosedConnectionByRemoteSide", message: " Start timer timerCheckMsrpQueue: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.846170", component: "850", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "394", function_name: "function:handleClosedConnectionByRemoteSide", message: " Timeout timerCheckMsrpQueue: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.846374", component: "850", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "287", function_name: "function:baseReceiveMsrpMessage", message: " Start timer timerWaitForMsrpResponse: 15 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:31.846544", component: "850", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port msrpPort succeeded, message from system(): @IPL4_MSRP_demo_types.MSRP_RecvFrom : { connId := 2, remName := \"142.133.142.3\", remPort := 60548, locName := \"142.133.150.169\", locPort := 17076, proto := { tcp := { } }, userData := 0, msg := { request := { requestStart := { transactId := \"ybLNxKDg\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17076\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"j9EMds9SLZdZ\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"imdn-BEFliYaO\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"578\", total := \"578\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:31+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: imdn-BEFliYaO\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>83VXAA1G</message-id><datetime>2014-10-24T22:34:29+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\", binary_message := <unbound> }, endLine := { transactId := \"ybLNxKDg\", continuationFlag := \"$\" } } }, binary_message := '546F3A203C7369703A616E6F6E796D6F757340616E6F6E796D6F75732E696E76616C69643E0D0A46726F6D3A203C7369703A616E6F6E796D6F757340616E6F6E796D6F75732E696E76616C69643E0D0A4461746554696D653A20323031342D31302D32345432323A33343A33312B30303A30300D0A4E533A20696D646E203C75726E3A696574663A706172616D733A696D646E3E0D0A696D646E2E4D6573736167652D49443A20696D646E2D4245466C6959614F0D0A0D0A436F6E74656E742D547970653A206D6573736167652F696D646E2B786D6C0D0A436F6E74656E742D446973706F736974696F6E3A206E6F74696669636174696F6E0D0A436F6E74656E742D4C656E6774683A203330340D0A0D0A3C3F786D6C2076657273696F6E3D27312E302720656E636F64696E673D275554462D38273F3E3C696D646E20786D6C6E733D2275726E3A696574663A706172616D733A786D6C3A6E733A696D646E223E3C6D6573736167652D69643E38335658414131473C2F6D6573736167652D69643E3C6461746574696D653E323031342D31302D32345432323A33343A32392B30303A30303C2F6461746574696D653E3C726563697069656E742D7572693E7369703A616E6F6E796D6F757340616E6F6E796D6F75732E696E76616C69643C2F726563697069656E742D7572693E3C64656C69766572792D6E6F74696669636174696F6E3E3C7374617475733E3C64656C6976657265642F3E3C2F7374617475733E3C2F64656C69766572792D6E6F74696669636174696F6E3E3C2F696D646E3E'O (\"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:31+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: imdn-BEFliYaO\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>83VXAA1G</message-id><datetime>2014-10-24T22:34:29+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\")} id 4" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.846602", component: "850", peer_component: "BaseMsrpComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "290", function_name: "function:baseReceiveMsrpMessage", message: " Message with id 4 was extracted from the queue of msrpPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.846667", component: "850", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "295", function_name: "function:baseReceiveMsrpMessage", message: " Stop timer timerWaitForMsrpResponse: 15 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:31.847001", component: "850", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on msrpInternalPort to mtc @variables.internalPortMessageWithMsrpMessages : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_MSRP_EXPECT_MESSAGE\" } } }, msrpMessages := { { request := { requestStart := { transactId := \"ybLNxKDg\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17076\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"j9EMds9SLZdZ\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"imdn-BEFliYaO\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"578\", total := \"578\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:31+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: imdn-BEFliYaO\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>83VXAA1G</message-id><datetime>2014-10-24T22:34:29+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\", binary_messageo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:31+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: imdn-BEFliYaO\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>83VXAA1G</message-id><datetime>2014-10-24T22:34:29+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\") }, endLine := { transactId := \"ybLNxKDg\", continuationFlag := \"$\" } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.847108", component: "850", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "79", function_name: "function:msrpRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:31.847317", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on msrpInternalPort[0] from 850 @variables.internalPortMessageWithMsrpMessages : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_MSRP_EXPECT_MESSAGE\" } } }, msrpMessages := { { request := { requestStart := { transactId := \"ybLNxKDg\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17076\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"j9EMds9SLZdZ\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"imdn-BEFliYaO\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"578\", total := \"578\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:31+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: imdn-BEFliYaO\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>83VXAA1G</message-id><datetime>2014-10-24T22:34:29+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\", binary_message := '546F3A203C7369703A616E6F6E796D6F757340616E6F6E796D6F75732E696E76616C69643E0D0A46726F6D3A203C7369703A616E6F6E796D6F757340616E6F6E796D6F75732E696E76616C69643E0D0A4461746554696D653A20323031342D31302D32345432323A33343A33312B30303A30300D0A4E533A20696D646E203C75726E3A696574663A706172616D733A696D646E3E0D0A696D646E2E4D6573736167652D49443A20696D646E2D4245466C6959614F0D0A0D0A436F6E74656E742D547970653A206D6573736167652F696D646E2B786D6C0D0A436F6E74656E742D446973706F736974696F6E3A206E6F74696669636174696F6E0D0A436F6E74656E742D4C656E6774683A203330340D0A0D0A3C3F786D6C2076657273696F6E3D27312E302720656E636F64696E673D275554462D38273F3E3C696D646E20786D6C6E733D2275726E3A696574663A706172616D733A786D6C3A6E733A696D646E223E3C6D6573736167652D69643E38335658414131473C2F6D6573736167652D69643E3C6461746574696D653E323031342D31302D32345432323A33343A32392B30303A30303C2F6461746574696D653E3C726563697069656E742D7572693E7369703A616E6F6E796D6F757340616E6F6E796D6F75732E696E76616C69643C2F726563697069656E742D7572693E3C64656C69766572792D6E6F74696669636174696F6E3E3C7374617475733E3C64656C6976657265642F3E3C2F7374617475733E3C2F64656C69766572792D6E6F74696669636174696F6E3E3C2F696D646E3E'O (\"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:31+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: imdn-BEFliYaO\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>83VXAA1G</message-id><datetime>2014-10-24T22:34:29+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\") }, endLine := { transactId := \"ybLNxKDg\", continuationFlag := \"$\" } } } }} id 7" }
Structured  DataFrame { time: "2014/Oct/24 18:34:31.847511", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port msrpInternalPort[0] succeeded, message from 850: @variables.internalPortMessageWithMsrpMessages : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_MSRP_EXPECT_MESSAGE\" } } }, msrpMessages := { { request := { requestStart := { transactId := \"ybLNxKDg\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17076\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"j9EMds9SLZdZ\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"imdn-BEFliYaO\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"578\", total := \"578\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:31+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: imdn-BEFliYaO\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>83VXAA1G</message-id><datetime>2014-10-24T22:34:29+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\", binary_messageo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:31+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: imdn-BEFliYaO\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>83VXAA1G</message-id><datetime>2014-10-24T22:34:29+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\") }, endLine := { transactId := \"ybLNxKDg\", continuationFlag := \"$\" } } } }} id 7" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.847565", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Message with id 7 was extracted from the queue of msrpInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.847584", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "218", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.850095", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.861482", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.861603", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "168", function_name: "function:sendInternalMessage", message: " Sent on msrpInternalPort[0] to 850 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.861738", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "83", function_name: "function:msrpRun", message: " Message enqueued on msrpInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.861774", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.861800", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Receive operation on port msrpInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.861825", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Message with id 7 was extracted from the queue of msrpInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.861851", component: "850", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "85", function_name: "function:msrpRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:31.861989", component: "850", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "383", function_name: "function:handleClosedConnectionByRemoteSide", message: " Start timer timerCheckMsrpQueue: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.062014", component: "850", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "394", function_name: "function:handleClosedConnectionByRemoteSide", message: " Timeout timerCheckMsrpQueue: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:32.062284", component: "850", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on msrpPort to system @IPL4_MSRP_demo_types.MSRP_Send : { connId := 2, proto := { tcp := { } }, msg := '4D5352502079624C4E784B446720323030204F4B0D0A546F2D506174683A206D7372703A2F2F3134322E3133332E3134322E333A363036302F6A39454D647339534C5A645A3B7463700D0A46726F6D2D506174683A206D7372703A2F2F3134322E3133332E3135302E3136393A31373037362F53657373696F6E496431385641543B7463700D0A2D2D2D2D2D2D2D79624C4E784B4467240D0A'O (\"MSRP ybLNxKDg 200 OK\\r\\nTo-Path: msrp://142.133.142.3:6060/j9EMds9SLZdZ;tcp\\r\\nFrom-Path: msrp://142.133.150.169:17076/SessionId18VAT;tcp\\r\\n-------ybLNxKDg$\\r\\n\")}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:32.062363", component: "850", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Outgoing message was mapped to @IPL4asp_Types.ASP_Send : { connId := 2, proto := { tcp := { } }, msg := '4D5352502079624C4E784B446720323030204F4B0D0A546F2D506174683A206D7372703A2F2F3134322E3133332E3134322E333A363036302F6A39454D647339534C5A645A3B7463700D0A46726F6D2D506174683A206D7372703A2F2F3134322E3133332E3135302E3136393A31373037362F53657373696F6E496431385641543B7463700D0A2D2D2D2D2D2D2D79624C4E784B4467240D0A'O (\"MSRP ybLNxKDg 200 OK\\r\\nTo-Path: msrp://142.133.142.3:6060/j9EMds9SLZdZ;tcp\\r\\nFrom-Path: msrp://142.133.150.169:17076/SessionId18VAT;tcp\\r\\n-------ybLNxKDg$\\r\\n\")}" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.062513", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "343", function_name: "function:processCommand", message: " Sent on msrpInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.062572", component: "850", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "79", function_name: "function:msrpRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.062649", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "216", function_name: "function:receiveInternalMessage", message: " Message enqueued on msrpInternalPort[0] from 850 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.062756", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Receive operation on port msrpInternalPort[0] succeeded, message from 850: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.062791", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Message with id 8 was extracted from the queue of msrpInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.062812", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "218", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.067459", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.077503", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:32.077762", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on msrpInternalPort[1] to 857 @variables.internalPortMessageWithMsrpMessages : { internalMessage := { description := \"COMMAND_MSRP_SEND_MESSAGE\", parameters := { { parameterName := \"LISTENER_PORT\", parameterValue := \"17077\" } } }, msrpMessages := { { request := { requestStart := { transactId := \"48177VAT\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"rFhqxHwhogoX\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17077\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"78239VAT\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"*\", total := \"*\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2013-10-01T13:33:33+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: VAT_imdn_xx1xx\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>83VXAA1G</message-id><datetime>2014-10-24T22:34:29+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\", binary_message := omit }, endLine := { transactId := \"48177VAT\", continuationFlag := \"$\" } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.077938", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:32.078067", component: "857", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on msrpInternalPort from mtc @variables.internalPortMessageWithMsrpMessages : { internalMessage := { description := \"COMMAND_MSRP_SEND_MESSAGE\", parameters := { { parameterName := \"LISTENER_PORT\", parameterValue := \"17077\" } } }, msrpMessages := { { request := { requestStart := { transactId := \"48177VAT\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"rFhqxHwhogoX\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17077\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"78239VAT\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"*\", total := \"*\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2013-10-01T13:33:33+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: VAT_imdn_xx1xx\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>83VXAA1G</message-id><datetime>2014-10-24T22:34:29+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\", binary_message := omit }, endLine := { transactId := \"48177VAT\", continuationFlag := \"$\" } } } }} id 5" }
Structured  DataFrame { time: "2014/Oct/24 18:34:32.078337", component: "857", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port msrpInternalPort succeeded, message from mtc: @variables.internalPortMessageWithMsrpMessages : { internalMessage := { description := \"COMMAND_MSRP_SEND_MESSAGE\", parameters := { { parameterName := \"LISTENER_PORT\", parameterValue := \"17077\" } } }, msrpMessages := { { request := { requestStart := { transactId := \"48177VAT\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"rFhqxHwhogoX\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17077\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"78239VAT\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"*\", total := \"*\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2013-10-01T13:33:33+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: VAT_imdn_xx1xx\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>83VXAA1G</message-id><datetime>2014-10-24T22:34:29+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\", binary_message := omit }, endLine := { transactId := \"48177VAT\", continuationFlag := \"$\" } } } }} id 5" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.078406", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Message with id 5 was extracted from the queue of msrpInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.078436", component: "857", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "85", function_name: "function:msrpRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.078629", component: "857", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "383", function_name: "function:handleClosedConnectionByRemoteSide", message: " Start timer timerCheckMsrpQueue: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.282241", component: "857", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "394", function_name: "function:handleClosedConnectionByRemoteSide", message: " Timeout timerCheckMsrpQueue: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:32.282652", component: "857", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on msrpPort to system @IPL4_MSRP_demo_types.MSRP_Send : { connId := 1, proto := { tcp := { } }, msgr\\nTo-Path: msrp://142.133.142.3:6060/rFhqxHwhogoX;tcp\\r\\nFrom-Path: msrp://142.133.150.169:17077/SessionId18VAT;tcp\\r\\nMessage-ID: 78239VAT\\r\\nByte-Range: 1-*/*\\r\\nContent-Type: message/cpim\\r\\n\\r\\nTo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2013-10-01T13:33:33+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: VAT_imdn_xx1xx\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>83VXAA1G</message-id><datetime>2014-10-24T22:34:29+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\\r\\n-------48177VAT$\\r\\n\")}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:32.282844", component: "857", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Outgoing message was mapped to @IPL4asp_Types.ASP_Send : { connId := 1, proto := { tcp := { } }, msgr\\nTo-Path: msrp://142.133.142.3:6060/rFhqxHwhogoX;tcp\\r\\nFrom-Path: msrp://142.133.150.169:17077/SessionId18VAT;tcp\\r\\nMessage-ID: 78239VAT\\r\\nByte-Range: 1-*/*\\r\\nContent-Type: message/cpim\\r\\n\\r\\nTo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2013-10-01T13:33:33+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: VAT_imdn_xx1xx\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>83VXAA1G</message-id><datetime>2014-10-24T22:34:29+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\\r\\n-------48177VAT$\\r\\n\")}" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.283072", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "343", function_name: "function:processCommand", message: " Sent on msrpInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.283162", component: "857", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "79", function_name: "function:msrpRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.283335", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "216", function_name: "function:receiveInternalMessage", message: " Message enqueued on msrpInternalPort[1] from 857 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.283495", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Receive operation on port msrpInternalPort[1] succeeded, message from 857: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.283555", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Message with id 6 was extracted from the queue of msrpInternalPort[1]" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.283603", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "218", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.284525", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.294592", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.294785", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "168", function_name: "function:sendInternalMessage", message: " Sent on msrpInternalPort[1] to 857 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.294962", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "83", function_name: "function:msrpRun", message: " Message enqueued on msrpInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.295015", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.295042", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Receive operation on port msrpInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.295074", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Message with id 6 was extracted from the queue of msrpInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.295094", component: "857", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "85", function_name: "function:msrpRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.295224", component: "857", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "383", function_name: "function:handleClosedConnectionByRemoteSide", message: " Start timer timerCheckMsrpQueue: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:32.297625", component: "857", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on msrpPort from system @IPL4asp_Types.ASP_RecvFrom : { connId := 1, remName := \"142.133.142.3\", remPort := 6060, locName := \"142.133.150.169\", locPort := 17077, proto := { tcp := { } }, userData := 0, msg := '4D53525020343831373756415420323030204F4B0D0A546F2D506174683A206D7372703A2F2F3134322E3133332E3135302E3136393A31373037372F53657373696F6E496431385641543B7463700D0A46726F6D2D506174683A206D7372703A2F2F3134322E3133332E3134322E333A363036302F72466871784877686F676F583B7463700D0A2D2D2D2D2D2D2D3438313737564154240D0A'O (\"MSRP 48177VAT 200 OK\\r\\nTo-Path: msrp://142.133.150.169:17077/SessionId18VAT;tcp\\r\\nFrom-Path: msrp://142.133.142.3:6060/rFhqxHwhogoX;tcp\\r\\n-------48177VAT$\\r\\n\")} id 3" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.297812", component: "857", peer_component: "BaseMsrpComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "385", function_name: "function:handleClosedConnectionByRemoteSide", message: " Incoming message was mapped to @IPL4_MSRP_demo_types" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.497553", component: "857", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "394", function_name: "function:handleClosedConnectionByRemoteSide", message: " Timeout timerCheckMsrpQueue: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.497806", component: "857", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "287", function_name: "function:baseReceiveMsrpMessage", message: " Start timer timerWaitForMsrpResponse: 15 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.497912", component: "857", peer_component: "BaseMsrpComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "290", function_name: "function:baseReceiveMsrpMessage", message: " Receive operation on port msrpPort succeeded, message from system(" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.497958", component: "857", peer_component: "BaseMsrpComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "290", function_name: "function:baseReceiveMsrpMessage", message: " Message with id 3 was extracted from the queue of msrpPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.498018", component: "857", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "295", function_name: "function:baseReceiveMsrpMessage", message: " Stop timer timerWaitForMsrpResponse: 15 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.498409", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "343", function_name: "function:processCommand", message: " Sent on msrpInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.498516", component: "857", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "79", function_name: "function:msrpRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.498648", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "216", function_name: "function:receiveInternalMessage", message: " Message enqueued on msrpInternalPort[1] from 857 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.498772", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Receive operation on port msrpInternalPort[1] succeeded, message from 857: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.498840", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Message with id 7 was extracted from the queue of msrpInternalPort[1]" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.498872", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "218", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.502714", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.513524", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "267", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:32.513845", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort[4] to 855 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"7\" } } }, aspHttp := { { httpMessage := { method := \"GET\", url := \"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/channels\", body := \"\", contentType := \"\", statusCode := \"\", header := { } } } }}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:32.514070", component: "855", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort from mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"7\" } } }, aspHttp := { { httpMessage := { method := \"GET\", url := \"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/channels\", body := \"\", contentType := \"\", statusCode := \"\", header := { } } } }} id 2" }
Structured  DataFrame { time: "2014/Oct/24 18:34:32.514235", component: "855", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort succeeded, message from mtc: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"7\" } } }, aspHttp := { { httpMessage := { method := \"GET\", url := \"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/channels\", body := \"\", contentType := \"\", statusCode := \"\", header := { } } } }} id 2" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.514244", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.514299", component: "855", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "67", function_name: "function:httpNodeRun", message: " Message with id 2 was extracted from the queue of httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.514325", component: "855", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "68", function_name: "function:httpNodeRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.514576", component: "855", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "307", function_name: "function:clearHTTPClientPort", message: " Start timer timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.514604", component: "855", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "313", function_name: "function:clearHTTPClientPort", message: " Timeout timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.514680", component: "855", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Sent on clientPort to system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.515518", component: "855", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Message enqueued on clientPort from system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.515563", component: "855", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "243", function_name: "function:sendHTTPClientRequest", message: " Start timer timerWaitForHTTPOpenConnection: 2 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.515599", component: "855", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Receive operation on port clientPort succeeded, message from system(" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.515624", component: "855", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Message with id 3 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.515646", component: "855", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "246", function_name: "function:sendHTTPClientRequest", message: " Stop timer timerWaitForHTTPOpenConnection: 2 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:32.515718", component: "855", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on clientPort to system @HTTPmsg_Types.HTTPMessage : { request := { client_id := 10, method := \"GET\", uri := \"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/channels\", version_major := 1, version_minor := 1, header := { { header_name := \"Host\", header_value := \"142.133.142.3\" }, { header_name := \"Content-Length\", header_value := \"0\" } }, body := \"\" }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.515835", component: "855", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "189", function_name: "function:receiveAnyHTTPClientResponse", message: " Start timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:32.529176", component: "855", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on clientPort from system @HTTPmsg_Types.HTTPMessage : { response := { client_id := 10, version_major := 1, version_minor := 1, statuscode := 200, statustext := \"OK\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:31 GMT\" } }, body := \"{\\n \\\"events\\\": {\\n \\\"list\\\": [ {\\n \\\"eventObject\\\": {\\n \\\"@type\\\": \\\"MessageStatusNotification\\\",\\n \\\"chatMessageStatusNotification\\\": {\\n \\\"link\\\": [ {\\n \\\"href\\\": \\\"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/chat/v1/sip:10014002007@ericsson.se/oneToOne/sip:10014002006@ericsson.se/adhoc\\\",\\n \\\"rel\\\": \\\"ChatSessionInformation\\\"\\n }, {\\n \\\"href\\\": \\\"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/chat/v1/sip:10014002007@ericsson.se/oneToOne/sip:10014002006@ericsson.se/adhoc/messages/83VXAA1G\\\",\\n \\\"rel\\\": \\\"ChatMessage\\\"\\n } ],\\n \\\"status\\\": \\\"Delivered\\\"\\n },\\n \\\"originalDateTime\\\": \\\"2014-10-24T22:34:29+00:00\\\",\\n \\\"dateTime\\\": \\\"2013-10-01T13:33:33+00:00\\\"\\n }\\n } ]\\n }\\n}\" }} id 4" }
Structured  DataFrame { time: "2014/Oct/24 18:34:32.529375", component: "855", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port clientPort succeeded, message from system(): @HTTPmsg_Types.HTTPMessage : { response := { client_id := 10, version_major := 1, version_minor := 1, statuscode := 200, statustext := \"OK\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:31 GMT\" } }, body := \"{\\n \\\"events\\\": {\\n \\\"list\\\": [ {\\n \\\"eventObject\\\": {\\n \\\"@type\\\": \\\"MessageStatusNotification\\\",\\n \\\"chatMessageStatusNotification\\\": {\\n \\\"link\\\": [ {\\n \\\"href\\\": \\\"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/chat/v1/sip:10014002007@ericsson.se/oneToOne/sip:10014002006@ericsson.se/adhoc\\\",\\n \\\"rel\\\": \\\"ChatSessionInformation\\\"\\n }, {\\n \\\"href\\\": \\\"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/chat/v1/sip:10014002007@ericsson.se/oneToOne/sip:10014002006@ericsson.se/adhoc/messages/83VXAA1G\\\",\\n \\\"rel\\\": \\\"ChatMessage\\\"\\n } ],\\n \\\"status\\\": \\\"Delivered\\\"\\n },\\n \\\"originalDateTime\\\": \\\"2014-10-24T22:34:29+00:00\\\",\\n \\\"dateTime\\\": \\\"2013-10-01T13:33:33+00:00\\\"\\n }\\n } ]\\n }\\n}\" }} id 4" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.529424", component: "855", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "193", function_name: "function:receiveAnyHTTPClientResponse", message: " Message with id 4 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.529451", component: "855", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "194", function_name: "function:receiveAnyHTTPClientResponse", message: " Stop timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:32.529661", component: "855", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort to mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\n \\\"events\\\": {\\n \\\"list\\\": [ {\\n \\\"eventObject\\\": {\\n \\\"@type\\\": \\\"MessageStatusNotification\\\",\\n \\\"chatMessageStatusNotification\\\": {\\n \\\"link\\\": [ {\\n \\\"href\\\": \\\"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/chat/v1/sip:10014002007@ericsson.se/oneToOne/sip:10014002006@ericsson.se/adhoc\\\",\\n \\\"rel\\\": \\\"ChatSessionInformation\\\"\\n }, {\\n \\\"href\\\": \\\"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/chat/v1/sip:10014002007@ericsson.se/oneToOne/sip:10014002006@ericsson.se/adhoc/messages/83VXAA1G\\\",\\n \\\"rel\\\": \\\"ChatMessage\\\"\\n } ],\\n \\\"status\\\": \\\"Delivered\\\"\\n },\\n \\\"originalDateTime\\\": \\\"2014-10-24T22:34:29+00:00\\\",\\n \\\"dateTime\\\": \\\"2013-10-01T13:33:33+00:00\\\"\\n }\\n } ]\\n }\\n}\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:31 GMT\" } } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.529794", component: "855", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "62", function_name: "function:httpNodeRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:32.530008", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort[4] from 855 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\n \\\"events\\\": {\\n \\\"list\\\": [ {\\n \\\"eventObject\\\": {\\n \\\"@type\\\": \\\"MessageStatusNotification\\\",\\n \\\"chatMessageStatusNotification\\\": {\\n \\\"link\\\": [ {\\n \\\"href\\\": \\\"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/chat/v1/sip:10014002007@ericsson.se/oneToOne/sip:10014002006@ericsson.se/adhoc\\\",\\n \\\"rel\\\": \\\"ChatSessionInformation\\\"\\n }, {\\n \\\"href\\\": \\\"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/chat/v1/sip:10014002007@ericsson.se/oneToOne/sip:10014002006@ericsson.se/adhoc/messages/83VXAA1G\\\",\\n \\\"rel\\\": \\\"ChatMessage\\\"\\n } ],\\n \\\"status\\\": \\\"Delivered\\\"\\n },\\n \\\"originalDateTime\\\": \\\"2014-10-24T22:34:29+00:00\\\",\\n \\\"dateTime\\\": \\\"2013-10-01T13:33:33+00:00\\\"\\n }\\n } ]\\n }\\n}\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:31 GMT\" } } } } }} id 3" }
Structured  DataFrame { time: "2014/Oct/24 18:34:32.530194", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort[4] succeeded, message from 855: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\n \\\"events\\\": {\\n \\\"list\\\": [ {\\n \\\"eventObject\\\": {\\n \\\"@type\\\": \\\"MessageStatusNotification\\\",\\n \\\"chatMessageStatusNotification\\\": {\\n \\\"link\\\": [ {\\n \\\"href\\\": \\\"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/chat/v1/sip:10014002007@ericsson.se/oneToOne/sip:10014002006@ericsson.se/adhoc\\\",\\n \\\"rel\\\": \\\"ChatSessionInformation\\\"\\n }, {\\n \\\"href\\\": \\\"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/chat/v1/sip:10014002007@ericsson.se/oneToOne/sip:10014002006@ericsson.se/adhoc/messages/83VXAA1G\\\",\\n \\\"rel\\\": \\\"ChatMessage\\\"\\n } ],\\n \\\"status\\\": \\\"Delivered\\\"\\n },\\n \\\"originalDateTime\\\": \\\"2014-10-24T22:34:29+00:00\\\",\\n \\\"dateTime\\\": \\\"2013-10-01T13:33:33+00:00\\\"\\n }\\n } ]\\n }\\n}\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:31 GMT\" } } } } }} id 3" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.530246", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Message with id 3 was extracted from the queue of httpNodeInternalPort[4]" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.530276", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "241", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.533271", component: "mtc", peer_component: "lib", event_type: "TIMEROP", event_description: "ttcn", port: "114", function_name: "function:sleep", message: " Start timer timerGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.685790", component: "mtc", peer_component: "lib", event_type: "TIMEROP", event_description: "ttcn", port: "115", function_name: "function:sleep", message: " Timeout timerGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.686815", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.697647", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "267", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:32.698184", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort[1] to 852 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"PARAM_PORT_OVERRIDE\", parameterValue := \"8888\" } } }, aspHttp := { { httpMessage := { method := \"POST\", url := \"/jolokia/\", body := \"[ { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,successfulTerminating=successfulTerminating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,successfulOriginating=successfulOriginating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulOriginating=unsuccessfulOriginating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulTerminating=unsuccessfulTerminating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,textMessages=textMessages-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,mediaMessages=mediaMessages-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,MSRPSession=MSRPSession-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=GAUGE,format=INTEGER,MSRPCurrentlyActive=MSRPCurrentlyActive1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } ] \", contentType := \"application/json\", statusCode := \"\", header := omit } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.698498", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:32.699059", component: "852", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort from mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"PARAM_PORT_OVERRIDE\", parameterValue := \"8888\" } } }, aspHttp := { { httpMessage := { method := \"POST\", url := \"/jolokia/\", body := \"[ { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,successfulTerminating=successfulTerminating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,successfulOriginating=successfulOriginating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulOriginating=unsuccessfulOriginating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulTerminating=unsuccessfulTerminating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,textMessages=textMessages-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,mediaMessages=mediaMessages-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,MSRPSession=MSRPSession-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=GAUGE,format=INTEGER,MSRPCurrentlyActive=MSRPCurrentlyActive1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } ] \", contentType := \"application/json\", statusCode := \"\", header := omit } } }} id 3" }
Structured  DataFrame { time: "2014/Oct/24 18:34:32.699512", component: "852", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort succeeded, message from mtc: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"PARAM_PORT_OVERRIDE\", parameterValue := \"8888\" } } }, aspHttp := { { httpMessage := { method := \"POST\", url := \"/jolokia/\", body := \"[ { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,successfulTerminating=successfulTerminating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,successfulOriginating=successfulOriginating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulOriginating=unsuccessfulOriginating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulTerminating=unsuccessfulTerminating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,textMessages=textMessages-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,mediaMessages=mediaMessages-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,MSRPSession=MSRPSession-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=GAUGE,format=INTEGER,MSRPCurrentlyActive=MSRPCurrentlyActive1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } ] \", contentType := \"application/json\", statusCode := \"\", header := omit } } }} id 3" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.699642", component: "852", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "67", function_name: "function:httpNodeRun", message: " Message with id 3 was extracted from the queue of httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.699692", component: "852", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "68", function_name: "function:httpNodeRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.699977", component: "852", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "307", function_name: "function:clearHTTPClientPort", message: " Start timer timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.700021", component: "852", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "313", function_name: "function:clearHTTPClientPort", message: " Timeout timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.700154", component: "852", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Sent on clientPort to system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.700952", component: "852", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Message enqueued on clientPort from system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.701014", component: "852", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "243", function_name: "function:sendHTTPClientRequest", message: " Start timer timerWaitForHTTPOpenConnection: 2 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.701072", component: "852", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Receive operation on port clientPort succeeded, message from system(" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.701120", component: "852", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Message with id 5 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.701163", component: "852", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "246", function_name: "function:sendHTTPClientRequest", message: " Stop timer timerWaitForHTTPOpenConnection: 2 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:32.701531", component: "852", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on clientPort to system @HTTPmsg_Types.HTTPMessage : { request := { client_id := 11, method := \"POST\", uri := \"/jolokia/\", version_major := 1, version_minor := 1, header := { { header_name := \"Host\", header_value := \"142.133.142.3\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Content-Length\", header_value := \"1971\" } }, body := \"[ { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,successfulTerminating=successfulTerminating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,successfulOriginating=successfulOriginating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulOriginating=unsuccessfulOriginating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulTerminating=unsuccessfulTerminating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,textMessages=textMessages-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,mediaMessages=mediaMessages-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,MSRPSession=MSRPSession-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=GAUGE,format=INTEGER,MSRPCurrentlyActive=MSRPCurrentlyActive1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } ] \" }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.701746", component: "852", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "189", function_name: "function:receiveAnyHTTPClientResponse", message: " Start timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:32.709115", component: "852", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on clientPort from system @HTTPmsg_Types.HTTPMessage : { response := { client_id := 11, version_major := 1, version_minor := 1, statuscode := 200, statustext := \"OK\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache\" }, { header_name := \"Pragma\", header_value := \"no-cache\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:32 GMT\" }, { header_name := \"Expires\", header_value := \"Fri, 24 Oct 2014 21:34:32 GMT\" }, { header_name := \"Content-Type\", header_value := \"text/plain;charset=utf-8\" }, { header_name := \"Content-Length\", header_value := \"1762\" } }, body := \"[{\\\"timestamp\\\":1414190072,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,successfulTerminating=successfulTerminating-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":2},{\\\"timestamp\\\":1414190072,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,successfulOriginating=successfulOriginating-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":2},{\\\"timestamp\\\":1414190072,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulOriginating=unsuccessfulOriginating-1\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":1},{\\\"timestamp\\\":1414190072,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulTerminating=unsuccessfulTerminating-1\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":1},{\\\"timestamp\\\":1414190072,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,textMessages=textMessages-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":4},{\\\"timestamp\\\":1414190072,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,mediaMessages=mediaMessages-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190072,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,MSRPSession=MSRPSession-1,interface=WcgChatCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":2},{\\\"timestamp\\\":1414190072,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,MSRPCurrentlyActive=MSRPCurrentlyActive1,format=INTEGER,interface=WcgGlobalCounterGroup,type=GAUGE\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":2}]\" }} id 6" }
Structured  DataFrame { time: "2014/Oct/24 18:34:32.709441", component: "852", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port clientPort succeeded, message from system(): @HTTPmsg_Types.HTTPMessage : { response := { client_id := 11, version_major := 1, version_minor := 1, statuscode := 200, statustext := \"OK\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache\" }, { header_name := \"Pragma\", header_value := \"no-cache\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:32 GMT\" }, { header_name := \"Expires\", header_value := \"Fri, 24 Oct 2014 21:34:32 GMT\" }, { header_name := \"Content-Type\", header_value := \"text/plain;charset=utf-8\" }, { header_name := \"Content-Length\", header_value := \"1762\" } }, body := \"[{\\\"timestamp\\\":1414190072,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,successfulTerminating=successfulTerminating-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":2},{\\\"timestamp\\\":1414190072,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,successfulOriginating=successfulOriginating-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":2},{\\\"timestamp\\\":1414190072,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulOriginating=unsuccessfulOriginating-1\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":1},{\\\"timestamp\\\":1414190072,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulTerminating=unsuccessfulTerminating-1\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":1},{\\\"timestamp\\\":1414190072,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,textMessages=textMessages-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":4},{\\\"timestamp\\\":1414190072,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,mediaMessages=mediaMessages-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190072,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,MSRPSession=MSRPSession-1,interface=WcgChatCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":2},{\\\"timestamp\\\":1414190072,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,MSRPCurrentlyActive=MSRPCurrentlyActive1,format=INTEGER,interface=WcgGlobalCounterGroup,type=GAUGE\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":2}]\" }} id 6" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.709500", component: "852", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "193", function_name: "function:receiveAnyHTTPClientResponse", message: " Message with id 6 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.709527", component: "852", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "194", function_name: "function:receiveAnyHTTPClientResponse", message: " Stop timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:32.709858", component: "852", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort to mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"[{\\\"timestamp\\\":1414190072,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,successfulTerminating=successfulTerminating-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":2},{\\\"timestamp\\\":1414190072,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,successfulOriginating=successfulOriginating-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":2},{\\\"timestamp\\\":1414190072,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulOriginating=unsuccessfulOriginating-1\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":1},{\\\"timestamp\\\":1414190072,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulTerminating=unsuccessfulTerminating-1\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":1},{\\\"timestamp\\\":1414190072,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,textMessages=textMessages-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":4},{\\\"timestamp\\\":1414190072,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,mediaMessages=mediaMessages-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190072,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,MSRPSession=MSRPSession-1,interface=WcgChatCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":2},{\\\"timestamp\\\":1414190072,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,MSRPCurrentlyActive=MSRPCurrentlyActive1,format=INTEGER,interface=WcgGlobalCounterGroup,type=GAUGE\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":2}]\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache\" }, { header_name := \"Pragma\", header_value := \"no-cache\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:32 GMT\" }, { header_name := \"Expires\", header_value := \"Fri, 24 Oct 2014 21:34:32 GMT\" }, { header_name := \"Content-Type\", header_value := \"text/plain;charset=utf-8\" }, { header_name := \"Content-Length\", header_value := \"1762\" } } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.710059", component: "852", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "62", function_name: "function:httpNodeRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:32.710457", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort[1] from 852 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"[{\\\"timestamp\\\":1414190072,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,successfulTerminating=successfulTerminating-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":2},{\\\"timestamp\\\":1414190072,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,successfulOriginating=successfulOriginating-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":2},{\\\"timestamp\\\":1414190072,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulOriginating=unsuccessfulOriginating-1\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":1},{\\\"timestamp\\\":1414190072,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulTerminating=unsuccessfulTerminating-1\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":1},{\\\"timestamp\\\":1414190072,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,textMessages=textMessages-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":4},{\\\"timestamp\\\":1414190072,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,mediaMessages=mediaMessages-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190072,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,MSRPSession=MSRPSession-1,interface=WcgChatCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":2},{\\\"timestamp\\\":1414190072,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,MSRPCurrentlyActive=MSRPCurrentlyActive1,format=INTEGER,interface=WcgGlobalCounterGroup,type=GAUGE\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":2}]\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache\" }, { header_name := \"Pragma\", header_value := \"no-cache\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:32 GMT\" }, { header_name := \"Expires\", header_value := \"Fri, 24 Oct 2014 21:34:32 GMT\" }, { header_name := \"Content-Type\", header_value := \"text/plain;charset=utf-8\" }, { header_name := \"Content-Length\", header_value := \"1762\" } } } } }} id 4" }
Structured  DataFrame { time: "2014/Oct/24 18:34:32.710802", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort[1] succeeded, message from 852: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"[{\\\"timestamp\\\":1414190072,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,successfulTerminating=successfulTerminating-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":2},{\\\"timestamp\\\":1414190072,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,successfulOriginating=successfulOriginating-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":2},{\\\"timestamp\\\":1414190072,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulOriginating=unsuccessfulOriginating-1\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":1},{\\\"timestamp\\\":1414190072,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulTerminating=unsuccessfulTerminating-1\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":1},{\\\"timestamp\\\":1414190072,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,textMessages=textMessages-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":4},{\\\"timestamp\\\":1414190072,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,mediaMessages=mediaMessages-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190072,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,MSRPSession=MSRPSession-1,interface=WcgChatCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":2},{\\\"timestamp\\\":1414190072,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,MSRPCurrentlyActive=MSRPCurrentlyActive1,format=INTEGER,interface=WcgGlobalCounterGroup,type=GAUGE\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":2}]\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache\" }, { header_name := \"Pragma\", header_value := \"no-cache\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:32 GMT\" }, { header_name := \"Expires\", header_value := \"Fri, 24 Oct 2014 21:34:32 GMT\" }, { header_name := \"Content-Type\", header_value := \"text/plain;charset=utf-8\" }, { header_name := \"Content-Length\", header_value := \"1762\" } } } } }} id 4" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.710889", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Message with id 4 was extracted from the queue of httpNodeInternalPort[1]" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.710921", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "241", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.715001", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.725523", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "267", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:32.725805", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort[2] to 853 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"9\" } } }, aspHttp := { { httpMessage := { method := \"POST\", url := \"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/message/send\", body := \"{ \\\"to\\\": \\\"sip:10014002007@ericsson.se\\\", \\\"body\\\": \\\"Body message 10014002006 to 10014002007\\\", \\\"contentType\\\": \\\"text/plain\\\"} \", contentType := \"application/json\", statusCode := \"\", header := { } } } }}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:32.726016", component: "853", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort from mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"9\" } } }, aspHttp := { { httpMessage := { method := \"POST\", url := \"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/message/send\", body := \"{ \\\"to\\\": \\\"sip:10014002007@ericsson.se\\\", \\\"body\\\": \\\"Body message 10014002006 to 10014002007\\\", \\\"contentType\\\": \\\"text/plain\\\"} \", contentType := \"application/json\", statusCode := \"\", header := { } } } }} id 3" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.726085", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:32.726122", component: "853", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort succeeded, message from mtc: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"9\" } } }, aspHttp := { { httpMessage := { method := \"POST\", url := \"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/message/send\", body := \"{ \\\"to\\\": \\\"sip:10014002007@ericsson.se\\\", \\\"body\\\": \\\"Body message 10014002006 to 10014002007\\\", \\\"contentType\\\": \\\"text/plain\\\"} \", contentType := \"application/json\", statusCode := \"\", header := { } } } }} id 3" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.726159", component: "853", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "67", function_name: "function:httpNodeRun", message: " Message with id 3 was extracted from the queue of httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.726182", component: "853", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "68", function_name: "function:httpNodeRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.726460", component: "853", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "307", function_name: "function:clearHTTPClientPort", message: " Start timer timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.726502", component: "853", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "313", function_name: "function:clearHTTPClientPort", message: " Timeout timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.726578", component: "853", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Sent on clientPort to system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.727230", component: "853", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Message enqueued on clientPort from system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.727274", component: "853", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "243", function_name: "function:sendHTTPClientRequest", message: " Start timer timerWaitForHTTPOpenConnection: 2 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.727310", component: "853", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Receive operation on port clientPort succeeded, message from system(" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.727334", component: "853", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Message with id 5 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.727356", component: "853", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "246", function_name: "function:sendHTTPClientRequest", message: " Stop timer timerWaitForHTTPOpenConnection: 2 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:32.727477", component: "853", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on clientPort to system @HTTPmsg_Types.HTTPMessage : { request := { client_id := 11, method := \"POST\", uri := \"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/message/send\", version_major := 1, version_minor := 1, header := { { header_name := \"Host\", header_value := \"142.133.142.3\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Content-Length\", header_value := \"119\" } }, body := \"{ \\\"to\\\": \\\"sip:10014002007@ericsson.se\\\", \\\"body\\\": \\\"Body message 10014002006 to 10014002007\\\", \\\"contentType\\\": \\\"text/plain\\\"} \" }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.727593", component: "853", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "189", function_name: "function:receiveAnyHTTPClientResponse", message: " Start timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:32.758159", component: "853", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on clientPort from system @HTTPmsg_Types.HTTPMessage : { response := { client_id := 11, version_major := 1, version_minor := 1, statuscode := 200, statustext := \"OK\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:32 GMT\" } }, body := \"{\\n \\\"msgId\\\": \\\"QEEEL8pw\\\"\\n}\" }} id 6" }
Structured  DataFrame { time: "2014/Oct/24 18:34:32.758287", component: "853", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port clientPort succeeded, message from system(): @HTTPmsg_Types.HTTPMessage : { response := { client_id := 11, version_major := 1, version_minor := 1, statuscode := 200, statustext := \"OK\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:32 GMT\" } }, body := \"{\\n \\\"msgId\\\": \\\"QEEEL8pw\\\"\\n}\" }} id 6" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.758327", component: "853", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "193", function_name: "function:receiveAnyHTTPClientResponse", message: " Message with id 6 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.758354", component: "853", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "194", function_name: "function:receiveAnyHTTPClientResponse", message: " Stop timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:32.758494", component: "853", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort to mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\n \\\"msgId\\\": \\\"QEEEL8pw\\\"\\n}\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:32 GMT\" } } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.758590", component: "853", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "62", function_name: "function:httpNodeRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:32.758718", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort[2] from 853 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\n \\\"msgId\\\": \\\"QEEEL8pw\\\"\\n}\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:32 GMT\" } } } } }} id 4" }
Structured  DataFrame { time: "2014/Oct/24 18:34:32.758872", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort[2] succeeded, message from 853: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\n \\\"msgId\\\": \\\"QEEEL8pw\\\"\\n}\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:32 GMT\" } } } } }} id 4" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.758955", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Message with id 4 was extracted from the queue of httpNodeInternalPort[2]" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.758986", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "241", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:32.760532", component: "850", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on msrpPort from system @IPL4asp_Types.ASP_RecvFrom : { connId := 2, remName := \"142.133.142.3\", remPort := 60548, locName := \"142.133.150.169\", locPort := 17076, proto := { tcp := { } }, userData := 0, msgoMkHjV SEND\\r\\nTo-Path: msrp://142.133.150.169:17076/SessionId18VAT;tcp\\r\\nFrom-Path: msrp://142.133.142.3:6060/j9EMds9SLZdZ;tcp\\r\\nByte-Range: 1-296/296\\r\\nMessage-ID: QEEEL8pw\\r\\nContent-Type: message/cpim\\r\\n\\r\\nTo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:32+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: QEEEL8pw\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002006 to 10014002007\\r\\n-------Z4oMkHjV$\\r\\n\")} id 5" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.760627", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:32.761022", component: "850", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Incoming message was mapped to @IPL4_MSRP_demo_types.MSRP_RecvFrom : { connId := 2, remName := \"142.133.142.3\", remPort := 60548, locName := \"142.133.150.169\", locPort := 17076, proto := { tcp := { } }, userData := 0, msg := { request := { requestStart := { transactId := \"Z4oMkHjV\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17076\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"j9EMds9SLZdZ\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"QEEEL8pw\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"296\", total := \"296\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:32+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: QEEEL8pw\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002006 to 10014002007\", binary_message := <unbound> }, endLine := { transactId := \"Z4oMkHjV\", continuationFlag := \"$\" } } }, binary_messageo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:32+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: QEEEL8pw\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002006 to 10014002007\")} id 5" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.773797", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.773987", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "168", function_name: "function:sendInternalMessage", message: " Sent on msrpInternalPort[0] to 850 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.774182", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.774261", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "83", function_name: "function:msrpRun", message: " Message enqueued on msrpInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.774423", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Receive operation on port msrpInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.774484", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Message with id 8 was extracted from the queue of msrpInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.774526", component: "850", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "85", function_name: "function:msrpRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.774805", component: "850", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "383", function_name: "function:handleClosedConnectionByRemoteSide", message: " Start timer timerCheckMsrpQueue: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.978021", component: "850", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "394", function_name: "function:handleClosedConnectionByRemoteSide", message: " Timeout timerCheckMsrpQueue: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.978317", component: "850", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "287", function_name: "function:baseReceiveMsrpMessage", message: " Start timer timerWaitForMsrpResponse: 15 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:32.978513", component: "850", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port msrpPort succeeded, message from system(): @IPL4_MSRP_demo_types.MSRP_RecvFrom : { connId := 2, remName := \"142.133.142.3\", remPort := 60548, locName := \"142.133.150.169\", locPort := 17076, proto := { tcp := { } }, userData := 0, msg := { request := { requestStart := { transactId := \"Z4oMkHjV\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17076\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"j9EMds9SLZdZ\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"QEEEL8pw\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"296\", total := \"296\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:32+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: QEEEL8pw\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002006 to 10014002007\", binary_message := <unbound> }, endLine := { transactId := \"Z4oMkHjV\", continuationFlag := \"$\" } } }, binary_messageo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:32+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: QEEEL8pw\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002006 to 10014002007\")} id 5" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.978606", component: "850", peer_component: "BaseMsrpComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "290", function_name: "function:baseReceiveMsrpMessage", message: " Message with id 5 was extracted from the queue of msrpPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.978689", component: "850", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "295", function_name: "function:baseReceiveMsrpMessage", message: " Stop timer timerWaitForMsrpResponse: 15 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:32.979207", component: "850", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on msrpInternalPort to mtc @variables.internalPortMessageWithMsrpMessages : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_MSRP_EXPECT_MESSAGE\" } } }, msrpMessages := { { request := { requestStart := { transactId := \"Z4oMkHjV\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17076\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"j9EMds9SLZdZ\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"QEEEL8pw\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"296\", total := \"296\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:32+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: QEEEL8pw\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002006 to 10014002007\", binary_messageo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:32+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: QEEEL8pw\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002006 to 10014002007\") }, endLine := { transactId := \"Z4oMkHjV\", continuationFlag := \"$\" } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.979355", component: "850", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "79", function_name: "function:msrpRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:32.979557", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on msrpInternalPort[0] from 850 @variables.internalPortMessageWithMsrpMessages : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_MSRP_EXPECT_MESSAGE\" } } }, msrpMessages := { { request := { requestStart := { transactId := \"Z4oMkHjV\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17076\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"j9EMds9SLZdZ\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"QEEEL8pw\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"296\", total := \"296\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:32+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: QEEEL8pw\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002006 to 10014002007\", binary_messageo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:32+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: QEEEL8pw\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002006 to 10014002007\") }, endLine := { transactId := \"Z4oMkHjV\", continuationFlag := \"$\" } } } }} id 9" }
Structured  DataFrame { time: "2014/Oct/24 18:34:32.979823", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port msrpInternalPort[0] succeeded, message from 850: @variables.internalPortMessageWithMsrpMessages : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_MSRP_EXPECT_MESSAGE\" } } }, msrpMessages := { { request := { requestStart := { transactId := \"Z4oMkHjV\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17076\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"j9EMds9SLZdZ\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"QEEEL8pw\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"296\", total := \"296\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:32+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: QEEEL8pw\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002006 to 10014002007\", binary_message := '546F3A203C7369703A616E6F6E796D6F757340616E6F6E796D6F75732E696E76616C69643E0D0A46726F6D3A203C7369703A616E6F6E796D6F757340616E6F6E796D6F75732E696E76616C69643E0D0A4461746554696D653A20323031342D31302D32345432323A33343A33322B30303A30300D0A4E533A20696D646E203C75726E3A696574663A706172616D733A696D646E3E0D0A696D646E2E446973706F736974696F6E2D4E6F74696669636174696F6E3A20706F7369746976652D64656C69766572790D0A696D646E2E4D6573736167652D49443A20514545454C3870770D0A0D0A436F6E74656E742D547970653A20746578742F706C61696E0D0A0D0A426F6479206D65737361676520313030313430303230303620746F203130303134303032303037'O (\"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:32+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: QEEEL8pw\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002006 to 10014002007\") }, endLine := { transactId := \"Z4oMkHjV\", continuationFlag := \"$\" } } } }} id 9" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.979902", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Message with id 9 was extracted from the queue of msrpInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.979935", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "218", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.981422", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.993801", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.994097", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "168", function_name: "function:sendInternalMessage", message: " Sent on msrpInternalPort[0] to 850 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.994386", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.994389", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "83", function_name: "function:msrpRun", message: " Message enqueued on msrpInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.994518", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Receive operation on port msrpInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.994572", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Message with id 9 was extracted from the queue of msrpInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.994616", component: "850", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "85", function_name: "function:msrpRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:32.994900", component: "850", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "383", function_name: "function:handleClosedConnectionByRemoteSide", message: " Start timer timerCheckMsrpQueue: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.198041", component: "850", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "394", function_name: "function:handleClosedConnectionByRemoteSide", message: " Timeout timerCheckMsrpQueue: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:33.198238", component: "850", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on msrpPort to system @IPL4_MSRP_demo_types.MSRP_Send : { connId := 2, proto := { tcp := { } }, msg := '4D535250205A346F4D6B486A5620323030204F4B0D0A546F2D506174683A206D7372703A2F2F3134322E3133332E3134322E333A363036302F6A39454D647339534C5A645A3B7463700D0A46726F6D2D506174683A206D7372703A2F2F3134322E3133332E3135302E3136393A31373037362F53657373696F6E496431385641543B7463700D0A2D2D2D2D2D2D2D5A346F4D6B486A56240D0A'O (\"MSRP Z4oMkHjV 200 OK\\r\\nTo-Path: msrp://142.133.142.3:6060/j9EMds9SLZdZ;tcp\\r\\nFrom-Path: msrp://142.133.150.169:17076/SessionId18VAT;tcp\\r\\n-------Z4oMkHjV$\\r\\n\")}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:33.198282", component: "850", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Outgoing message was mapped to @IPL4asp_Types.ASP_Send : { connId := 2, proto := { tcp := { } }, msg := '4D535250205A346F4D6B486A5620323030204F4B0D0A546F2D506174683A206D7372703A2F2F3134322E3133332E3134322E333A363036302F6A39454D647339534C5A645A3B7463700D0A46726F6D2D506174683A206D7372703A2F2F3134322E3133332E3135302E3136393A31373037362F53657373696F6E496431385641543B7463700D0A2D2D2D2D2D2D2D5A346F4D6B486A56240D0A'O (\"MSRP Z4oMkHjV 200 OK\\r\\nTo-Path: msrp://142.133.142.3:6060/j9EMds9SLZdZ;tcp\\r\\nFrom-Path: msrp://142.133.150.169:17076/SessionId18VAT;tcp\\r\\n-------Z4oMkHjV$\\r\\n\")}" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.198411", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "343", function_name: "function:processCommand", message: " Sent on msrpInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.198474", component: "850", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "79", function_name: "function:msrpRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.198540", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "216", function_name: "function:receiveInternalMessage", message: " Message enqueued on msrpInternalPort[0] from 850 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.198620", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Receive operation on port msrpInternalPort[0] succeeded, message from 850: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.198646", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Message with id 10 was extracted from the queue of msrpInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.198664", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "218", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.204195", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.214245", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:33.214570", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on msrpInternalPort[1] to 857 @variables.internalPortMessageWithMsrpMessages : { internalMessage := { description := \"COMMAND_MSRP_SEND_MESSAGE\", parameters := { { parameterName := \"LISTENER_PORT\", parameterValue := \"17077\" } } }, msrpMessages := { { request := { requestStart := { transactId := \"Z4oMkVAT\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"rFhqxHwhogoX\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17077\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"QEEEL8pw\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"296\", total := \"296\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:32+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: QEEEL8pw\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002006 to 10014002007\", binary_message := omit }, endLine := { transactId := \"Z4oMkVAT\", continuationFlag := \"$\" } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.214829", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:33.214852", component: "857", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on msrpInternalPort from mtc @variables.internalPortMessageWithMsrpMessages : { internalMessage := { description := \"COMMAND_MSRP_SEND_MESSAGE\", parameters := { { parameterName := \"LISTENER_PORT\", parameterValue := \"17077\" } } }, msrpMessages := { { request := { requestStart := { transactId := \"Z4oMkVAT\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"rFhqxHwhogoX\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17077\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"QEEEL8pw\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"296\", total := \"296\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:32+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: QEEEL8pw\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002006 to 10014002007\", binary_message := omit }, endLine := { transactId := \"Z4oMkVAT\", continuationFlag := \"$\" } } } }} id 7" }
Structured  DataFrame { time: "2014/Oct/24 18:34:33.214956", component: "857", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port msrpInternalPort succeeded, message from mtc: @variables.internalPortMessageWithMsrpMessages : { internalMessage := { description := \"COMMAND_MSRP_SEND_MESSAGE\", parameters := { { parameterName := \"LISTENER_PORT\", parameterValue := \"17077\" } } }, msrpMessages := { { request := { requestStart := { transactId := \"Z4oMkVAT\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"rFhqxHwhogoX\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17077\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"QEEEL8pw\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"296\", total := \"296\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:32+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: QEEEL8pw\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002006 to 10014002007\", binary_message := omit }, endLine := { transactId := \"Z4oMkVAT\", continuationFlag := \"$\" } } } }} id 7" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.215004", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Message with id 7 was extracted from the queue of msrpInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.215021", component: "857", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "85", function_name: "function:msrpRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.215156", component: "857", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "383", function_name: "function:handleClosedConnectionByRemoteSide", message: " Start timer timerCheckMsrpQueue: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.418230", component: "857", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "394", function_name: "function:handleClosedConnectionByRemoteSide", message: " Timeout timerCheckMsrpQueue: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:33.418489", component: "857", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on msrpPort to system @IPL4_MSRP_demo_types.MSRP_Send : { connId := 1, proto := { tcp := { } }, msgoMkVAT SEND\\r\\nTo-Path: msrp://142.133.142.3:6060/rFhqxHwhogoX;tcp\\r\\nFrom-Path: msrp://142.133.150.169:17077/SessionId18VAT;tcp\\r\\nMessage-ID: QEEEL8pw\\r\\nByte-Range: 1-296/296\\r\\nContent-Type: message/cpim\\r\\n\\r\\nTo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:32+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: QEEEL8pw\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002006 to 10014002007\\r\\n-------Z4oMkVAT$\\r\\n\")}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:33.418601", component: "857", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Outgoing message was mapped to @IPL4asp_Types.ASP_Send : { connId := 1, proto := { tcp := { } }, msgoMkVAT SEND\\r\\nTo-Path: msrp://142.133.142.3:6060/rFhqxHwhogoX;tcp\\r\\nFrom-Path: msrp://142.133.150.169:17077/SessionId18VAT;tcp\\r\\nMessage-ID: QEEEL8pw\\r\\nByte-Range: 1-296/296\\r\\nContent-Type: message/cpim\\r\\n\\r\\nTo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:32+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: QEEEL8pw\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002006 to 10014002007\\r\\n-------Z4oMkVAT$\\r\\n\")}" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.418789", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "343", function_name: "function:processCommand", message: " Sent on msrpInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.418856", component: "857", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "79", function_name: "function:msrpRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.418932", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "216", function_name: "function:receiveInternalMessage", message: " Message enqueued on msrpInternalPort[1] from 857 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.419014", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Receive operation on port msrpInternalPort[1] succeeded, message from 857: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.419054", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Message with id 8 was extracted from the queue of msrpInternalPort[1]" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.419079", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "218", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.419505", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.429536", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.429630", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "168", function_name: "function:sendInternalMessage", message: " Sent on msrpInternalPort[1] to 857 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.429742", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "83", function_name: "function:msrpRun", message: " Message enqueued on msrpInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.429788", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.429796", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Receive operation on port msrpInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.429818", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Message with id 8 was extracted from the queue of msrpInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.429833", component: "857", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "85", function_name: "function:msrpRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.429945", component: "857", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "383", function_name: "function:handleClosedConnectionByRemoteSide", message: " Start timer timerCheckMsrpQueue: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:33.434688", component: "857", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on msrpPort from system @IPL4asp_Types.ASP_RecvFrom : { connId := 1, remName := \"142.133.142.3\", remPort := 6060, locName := \"142.133.150.169\", locPort := 17077, proto := { tcp := { } }, userData := 0, msg := '4D535250205A346F4D6B56415420323030204F4B0D0A546F2D506174683A206D7372703A2F2F3134322E3133332E3135302E3136393A31373037372F53657373696F6E496431385641543B7463700D0A46726F6D2D506174683A206D7372703A2F2F3134322E3133332E3134322E333A363036302F72466871784877686F676F583B7463700D0A2D2D2D2D2D2D2D5A346F4D6B564154240D0A'O (\"MSRP Z4oMkVAT 200 OK\\r\\nTo-Path: msrp://142.133.150.169:17077/SessionId18VAT;tcp\\r\\nFrom-Path: msrp://142.133.142.3:6060/rFhqxHwhogoX;tcp\\r\\n-------Z4oMkVAT$\\r\\n\")} id 4" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.434827", component: "857", peer_component: "BaseMsrpComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "385", function_name: "function:handleClosedConnectionByRemoteSide", message: " Incoming message was mapped to @IPL4_MSRP_demo_types" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.629969", component: "857", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "394", function_name: "function:handleClosedConnectionByRemoteSide", message: " Timeout timerCheckMsrpQueue: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.630206", component: "857", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "287", function_name: "function:baseReceiveMsrpMessage", message: " Start timer timerWaitForMsrpResponse: 15 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.630287", component: "857", peer_component: "BaseMsrpComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "290", function_name: "function:baseReceiveMsrpMessage", message: " Receive operation on port msrpPort succeeded, message from system(" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.630345", component: "857", peer_component: "BaseMsrpComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "290", function_name: "function:baseReceiveMsrpMessage", message: " Message with id 4 was extracted from the queue of msrpPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.630392", component: "857", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "295", function_name: "function:baseReceiveMsrpMessage", message: " Stop timer timerWaitForMsrpResponse: 15 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.630563", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "343", function_name: "function:processCommand", message: " Sent on msrpInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.630641", component: "857", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "79", function_name: "function:msrpRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.630768", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "216", function_name: "function:receiveInternalMessage", message: " Message enqueued on msrpInternalPort[1] from 857 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.630854", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Receive operation on port msrpInternalPort[1] succeeded, message from 857: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.630898", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Message with id 9 was extracted from the queue of msrpInternalPort[1]" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.630919", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "218", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.640402", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.650462", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "267", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:33.650703", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort[4] to 855 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"10\" } } }, aspHttp := { { httpMessage := { method := \"GET\", url := \"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/channels\", body := \"\", contentType := \"\", statusCode := \"\", header := { } } } }}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:33.650901", component: "855", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort from mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"10\" } } }, aspHttp := { { httpMessage := { method := \"GET\", url := \"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/channels\", body := \"\", contentType := \"\", statusCode := \"\", header := { } } } }} id 3" }
Structured  DataFrame { time: "2014/Oct/24 18:34:33.651003", component: "855", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort succeeded, message from mtc: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"10\" } } }, aspHttp := { { httpMessage := { method := \"GET\", url := \"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/channels\", body := \"\", contentType := \"\", statusCode := \"\", header := { } } } }} id 3" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.651051", component: "855", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "67", function_name: "function:httpNodeRun", message: " Message with id 3 was extracted from the queue of httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.651085", component: "855", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "68", function_name: "function:httpNodeRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.651085", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.651333", component: "855", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "307", function_name: "function:clearHTTPClientPort", message: " Start timer timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.651371", component: "855", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "313", function_name: "function:clearHTTPClientPort", message: " Timeout timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.651476", component: "855", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Sent on clientPort to system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.652361", component: "855", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Message enqueued on clientPort from system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.652406", component: "855", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "243", function_name: "function:sendHTTPClientRequest", message: " Start timer timerWaitForHTTPOpenConnection: 2 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.652453", component: "855", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Receive operation on port clientPort succeeded, message from system(" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.652488", component: "855", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Message with id 5 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.652543", component: "855", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "246", function_name: "function:sendHTTPClientRequest", message: " Stop timer timerWaitForHTTPOpenConnection: 2 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:33.652646", component: "855", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on clientPort to system @HTTPmsg_Types.HTTPMessage : { request := { client_id := 11, method := \"GET\", uri := \"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/channels\", version_major := 1, version_minor := 1, header := { { header_name := \"Host\", header_value := \"142.133.142.3\" }, { header_name := \"Content-Length\", header_value := \"0\" } }, body := \"\" }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.652749", component: "855", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "189", function_name: "function:receiveAnyHTTPClientResponse", message: " Start timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:33.668233", component: "855", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on clientPort from system @HTTPmsg_Types.HTTPMessage : { response := { client_id := 11, version_major := 1, version_minor := 1, statuscode := 200, statustext := \"OK\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:32 GMT\" } }, body := \"{\\n \\\"events\\\": {\\n \\\"list\\\": [ {\\n \\\"eventObject\\\": {\\n \\\"@type\\\": \\\"message\\\",\\n \\\"from\\\": \\\"sip:10014002006@ericsson.se\\\",\\n \\\"contentType\\\": \\\"text/plain\\\",\\n \\\"reportRequest\\\": [ \\\"Delivered\\\" ],\\n \\\"msgId\\\": \\\"QEEEL8pw\\\",\\n \\\"dateTime\\\": \\\"2014-10-24T22:34:32+00:00\\\",\\n \\\"body\\\": \\\"Body message 10014002006 to 10014002007\\\",\\n \\\"type\\\": \\\"session-message\\\"\\n }\\n } ]\\n }\\n}\" }} id 6" }
Structured  DataFrame { time: "2014/Oct/24 18:34:33.668421", component: "855", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port clientPort succeeded, message from system(): @HTTPmsg_Types.HTTPMessage : { response := { client_id := 11, version_major := 1, version_minor := 1, statuscode := 200, statustext := \"OK\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:32 GMT\" } }, body := \"{\\n \\\"events\\\": {\\n \\\"list\\\": [ {\\n \\\"eventObject\\\": {\\n \\\"@type\\\": \\\"message\\\",\\n \\\"from\\\": \\\"sip:10014002006@ericsson.se\\\",\\n \\\"contentType\\\": \\\"text/plain\\\",\\n \\\"reportRequest\\\": [ \\\"Delivered\\\" ],\\n \\\"msgId\\\": \\\"QEEEL8pw\\\",\\n \\\"dateTime\\\": \\\"2014-10-24T22:34:32+00:00\\\",\\n \\\"body\\\": \\\"Body message 10014002006 to 10014002007\\\",\\n \\\"type\\\": \\\"session-message\\\"\\n }\\n } ]\\n }\\n}\" }} id 6" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.668470", component: "855", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "193", function_name: "function:receiveAnyHTTPClientResponse", message: " Message with id 6 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.668498", component: "855", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "194", function_name: "function:receiveAnyHTTPClientResponse", message: " Stop timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:33.668661", component: "855", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort to mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\n \\\"events\\\": {\\n \\\"list\\\": [ {\\n \\\"eventObject\\\": {\\n \\\"@type\\\": \\\"message\\\",\\n \\\"from\\\": \\\"sip:10014002006@ericsson.se\\\",\\n \\\"contentType\\\": \\\"text/plain\\\",\\n \\\"reportRequest\\\": [ \\\"Delivered\\\" ],\\n \\\"msgId\\\": \\\"QEEEL8pw\\\",\\n \\\"dateTime\\\": \\\"2014-10-24T22:34:32+00:00\\\",\\n \\\"body\\\": \\\"Body message 10014002006 to 10014002007\\\",\\n \\\"type\\\": \\\"session-message\\\"\\n }\\n } ]\\n }\\n}\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:32 GMT\" } } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.668770", component: "855", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "62", function_name: "function:httpNodeRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:33.668943", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort[4] from 855 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\n \\\"events\\\": {\\n \\\"list\\\": [ {\\n \\\"eventObject\\\": {\\n \\\"@type\\\": \\\"message\\\",\\n \\\"from\\\": \\\"sip:10014002006@ericsson.se\\\",\\n \\\"contentType\\\": \\\"text/plain\\\",\\n \\\"reportRequest\\\": [ \\\"Delivered\\\" ],\\n \\\"msgId\\\": \\\"QEEEL8pw\\\",\\n \\\"dateTime\\\": \\\"2014-10-24T22:34:32+00:00\\\",\\n \\\"body\\\": \\\"Body message 10014002006 to 10014002007\\\",\\n \\\"type\\\": \\\"session-message\\\"\\n }\\n } ]\\n }\\n}\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:32 GMT\" } } } } }} id 4" }
Structured  DataFrame { time: "2014/Oct/24 18:34:33.669052", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort[4] succeeded, message from 855: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\n \\\"events\\\": {\\n \\\"list\\\": [ {\\n \\\"eventObject\\\": {\\n \\\"@type\\\": \\\"message\\\",\\n \\\"from\\\": \\\"sip:10014002006@ericsson.se\\\",\\n \\\"contentType\\\": \\\"text/plain\\\",\\n \\\"reportRequest\\\": [ \\\"Delivered\\\" ],\\n \\\"msgId\\\": \\\"QEEEL8pw\\\",\\n \\\"dateTime\\\": \\\"2014-10-24T22:34:32+00:00\\\",\\n \\\"body\\\": \\\"Body message 10014002006 to 10014002007\\\",\\n \\\"type\\\": \\\"session-message\\\"\\n }\\n } ]\\n }\\n}\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:32 GMT\" } } } } }} id 4" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.669083", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Message with id 4 was extracted from the queue of httpNodeInternalPort[4]" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.669101", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "241", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:33.671237", component: "857", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on msrpPort from system @IPL4asp_Types.ASP_RecvFrom : { connId := 1, remName := \"142.133.142.3\", remPort := 6060, locName := \"142.133.150.169\", locPort := 17077, proto := { tcp := { } }, userData := 0, msgfGLtmHo4 SEND\\r\\nTo-Path: msrp://142.133.150.169:17077/SessionId18VAT;tcp\\r\\nFrom-Path: msrp://142.133.142.3:6060/rFhqxHwhogoX;tcp\\r\\nByte-Range: 1-578/578\\r\\nMessage-ID: imdn-sovSiuYz\\r\\nContent-Type: message/cpim\\r\\n\\r\\nTo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:33+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: imdn-sovSiuYz\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>QEEEL8pw</message-id><datetime>2014-10-24T22:34:32+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\\r\\n-------fGLtmHo4$\\r\\n\")} id 5" }
Structured  DataFrame { time: "2014/Oct/24 18:34:33.671860", component: "857", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Incoming message was mapped to @IPL4_MSRP_demo_types.MSRP_RecvFrom : { connId := 1, remName := \"142.133.142.3\", remPort := 6060, locName := \"142.133.150.169\", locPort := 17077, proto := { tcp := { } }, userData := 0, msg := { request := { requestStart := { transactId := \"fGLtmHo4\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17077\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"rFhqxHwhogoX\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"imdn-sovSiuYz\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"578\", total := \"578\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:33+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: imdn-sovSiuYz\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>QEEEL8pw</message-id><datetime>2014-10-24T22:34:32+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\", binary_message := <unbound> }, endLine := { transactId := \"fGLtmHo4\", continuationFlag := \"$\" } } }, binary_messageo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:33+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: imdn-sovSiuYz\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>QEEEL8pw</message-id><datetime>2014-10-24T22:34:32+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\")} id 5" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.674731", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.685763", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.685934", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "168", function_name: "function:sendInternalMessage", message: " Sent on msrpInternalPort[1] to 857 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.686119", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "83", function_name: "function:msrpRun", message: " Message enqueued on msrpInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.686120", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.686236", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Receive operation on port msrpInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.686278", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Message with id 9 was extracted from the queue of msrpInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.686332", component: "857", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "85", function_name: "function:msrpRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.686502", component: "857", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "383", function_name: "function:handleClosedConnectionByRemoteSide", message: " Start timer timerCheckMsrpQueue: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.890247", component: "857", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "394", function_name: "function:handleClosedConnectionByRemoteSide", message: " Timeout timerCheckMsrpQueue: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.890488", component: "857", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "287", function_name: "function:baseReceiveMsrpMessage", message: " Start timer timerWaitForMsrpResponse: 15 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:33.890730", component: "857", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port msrpPort succeeded, message from system(): @IPL4_MSRP_demo_types.MSRP_RecvFrom : { connId := 1, remName := \"142.133.142.3\", remPort := 6060, locName := \"142.133.150.169\", locPort := 17077, proto := { tcp := { } }, userData := 0, msg := { request := { requestStart := { transactId := \"fGLtmHo4\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17077\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"rFhqxHwhogoX\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"imdn-sovSiuYz\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"578\", total := \"578\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:33+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: imdn-sovSiuYz\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>QEEEL8pw</message-id><datetime>2014-10-24T22:34:32+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\", binary_message := <unbound> }, endLine := { transactId := \"fGLtmHo4\", continuationFlag := \"$\" } } }, binary_message := '546F3A203C7369703A616E6F6E796D6F757340616E6F6E796D6F75732E696E76616C69643E0D0A46726F6D3A203C7369703A616E6F6E796D6F757340616E6F6E796D6F75732E696E76616C69643E0D0A4461746554696D653A20323031342D31302D32345432323A33343A33332B30303A30300D0A4E533A20696D646E203C75726E3A696574663A706172616D733A696D646E3E0D0A696D646E2E4D6573736167652D49443A20696D646E2D736F76536975597A0D0A0D0A436F6E74656E742D547970653A206D6573736167652F696D646E2B786D6C0D0A436F6E74656E742D446973706F736974696F6E3A206E6F74696669636174696F6E0D0A436F6E74656E742D4C656E6774683A203330340D0A0D0A3C3F786D6C2076657273696F6E3D27312E302720656E636F64696E673D275554462D38273F3E3C696D646E20786D6C6E733D2275726E3A696574663A706172616D733A786D6C3A6E733A696D646E223E3C6D6573736167652D69643E514545454C3870773C2F6D6573736167652D69643E3C6461746574696D653E323031342D31302D32345432323A33343A33322B30303A30303C2F6461746574696D653E3C726563697069656E742D7572693E7369703A616E6F6E796D6F757340616E6F6E796D6F75732E696E76616C69643C2F726563697069656E742D7572693E3C64656C69766572792D6E6F74696669636174696F6E3E3C7374617475733E3C64656C6976657265642F3E3C2F7374617475733E3C2F64656C69766572792D6E6F74696669636174696F6E3E3C2F696D646E3E'O (\"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:33+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: imdn-sovSiuYz\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>QEEEL8pw</message-id><datetime>2014-10-24T22:34:32+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\")} id 5" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.890823", component: "857", peer_component: "BaseMsrpComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "290", function_name: "function:baseReceiveMsrpMessage", message: " Message with id 5 was extracted from the queue of msrpPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.890887", component: "857", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "295", function_name: "function:baseReceiveMsrpMessage", message: " Stop timer timerWaitForMsrpResponse: 15 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:33.891334", component: "857", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on msrpInternalPort to mtc @variables.internalPortMessageWithMsrpMessages : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_MSRP_EXPECT_MESSAGE\" } } }, msrpMessages := { { request := { requestStart := { transactId := \"fGLtmHo4\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17077\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"rFhqxHwhogoX\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"imdn-sovSiuYz\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"578\", total := \"578\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:33+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: imdn-sovSiuYz\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>QEEEL8pw</message-id><datetime>2014-10-24T22:34:32+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\", binary_messageo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:33+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: imdn-sovSiuYz\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>QEEEL8pw</message-id><datetime>2014-10-24T22:34:32+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\") }, endLine := { transactId := \"fGLtmHo4\", continuationFlag := \"$\" } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.891469", component: "857", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "79", function_name: "function:msrpRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:33.891732", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on msrpInternalPort[1] from 857 @variables.internalPortMessageWithMsrpMessages : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_MSRP_EXPECT_MESSAGE\" } } }, msrpMessages := { { request := { requestStart := { transactId := \"fGLtmHo4\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17077\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"rFhqxHwhogoX\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"imdn-sovSiuYz\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"578\", total := \"578\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:33+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: imdn-sovSiuYz\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>QEEEL8pw</message-id><datetime>2014-10-24T22:34:32+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\", binary_messageo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:33+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: imdn-sovSiuYz\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>QEEEL8pw</message-id><datetime>2014-10-24T22:34:32+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\") }, endLine := { transactId := \"fGLtmHo4\", continuationFlag := \"$\" } } } }} id 10" }
Structured  DataFrame { time: "2014/Oct/24 18:34:33.891933", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port msrpInternalPort[1] succeeded, message from 857: @variables.internalPortMessageWithMsrpMessages : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_MSRP_EXPECT_MESSAGE\" } } }, msrpMessages := { { request := { requestStart := { transactId := \"fGLtmHo4\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17077\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"rFhqxHwhogoX\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"imdn-sovSiuYz\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"578\", total := \"578\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:33+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: imdn-sovSiuYz\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>QEEEL8pw</message-id><datetime>2014-10-24T22:34:32+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\", binary_messageo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:33+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: imdn-sovSiuYz\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>QEEEL8pw</message-id><datetime>2014-10-24T22:34:32+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\") }, endLine := { transactId := \"fGLtmHo4\", continuationFlag := \"$\" } } } }} id 10" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.891998", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Message with id 10 was extracted from the queue of msrpInternalPort[1]" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.892019", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "218", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.894735", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.905737", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.905859", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "168", function_name: "function:sendInternalMessage", message: " Sent on msrpInternalPort[1] to 857 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.905999", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.906027", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "83", function_name: "function:msrpRun", message: " Message enqueued on msrpInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.906097", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Receive operation on port msrpInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.906124", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Message with id 10 was extracted from the queue of msrpInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.906140", component: "857", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "85", function_name: "function:msrpRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:33.906280", component: "857", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "383", function_name: "function:handleClosedConnectionByRemoteSide", message: " Start timer timerCheckMsrpQueue: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.106319", component: "857", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "394", function_name: "function:handleClosedConnectionByRemoteSide", message: " Timeout timerCheckMsrpQueue: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:34.106520", component: "857", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on msrpPort to system @IPL4_MSRP_demo_types.MSRP_Send : { connId := 1, proto := { tcp := { } }, msg := '4D5352502066474C746D486F3420323030204F4B0D0A546F2D506174683A206D7372703A2F2F3134322E3133332E3134322E333A363036302F72466871784877686F676F583B7463700D0A46726F6D2D506174683A206D7372703A2F2F3134322E3133332E3135302E3136393A31373037372F53657373696F6E496431385641543B7463700D0A2D2D2D2D2D2D2D66474C746D486F34240D0A'O (\"MSRP fGLtmHo4 200 OK\\r\\nTo-Path: msrp://142.133.142.3:6060/rFhqxHwhogoX;tcp\\r\\nFrom-Path: msrp://142.133.150.169:17077/SessionId18VAT;tcp\\r\\n-------fGLtmHo4$\\r\\n\")}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:34.106566", component: "857", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Outgoing message was mapped to @IPL4asp_Types.ASP_Send : { connId := 1, proto := { tcp := { } }, msg := '4D5352502066474C746D486F3420323030204F4B0D0A546F2D506174683A206D7372703A2F2F3134322E3133332E3134322E333A363036302F72466871784877686F676F583B7463700D0A46726F6D2D506174683A206D7372703A2F2F3134322E3133332E3135302E3136393A31373037372F53657373696F6E496431385641543B7463700D0A2D2D2D2D2D2D2D66474C746D486F34240D0A'O (\"MSRP fGLtmHo4 200 OK\\r\\nTo-Path: msrp://142.133.142.3:6060/rFhqxHwhogoX;tcp\\r\\nFrom-Path: msrp://142.133.150.169:17077/SessionId18VAT;tcp\\r\\n-------fGLtmHo4$\\r\\n\")}" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.106736", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "343", function_name: "function:processCommand", message: " Sent on msrpInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.106802", component: "857", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "79", function_name: "function:msrpRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.106876", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "216", function_name: "function:receiveInternalMessage", message: " Message enqueued on msrpInternalPort[1] from 857 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.106955", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Receive operation on port msrpInternalPort[1] succeeded, message from 857: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.106984", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Message with id 11 was extracted from the queue of msrpInternalPort[1]" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.107026", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "218", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.111105", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.121501", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:34.121791", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on msrpInternalPort[0] to 850 @variables.internalPortMessageWithMsrpMessages : { internalMessage := { description := \"COMMAND_MSRP_SEND_MESSAGE\", parameters := { { parameterName := \"LISTENER_PORT\", parameterValue := \"17076\" } } }, msrpMessages := { { request := { requestStart := { transactId := \"27952VAT\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"j9EMds9SLZdZ\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17076\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"57631VAT\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"*\", total := \"*\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2013-10-01T13:33:33+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: VAT_imdn_xx1xx\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>QEEEL8pw</message-id><datetime>2014-10-24T22:34:32+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\", binary_message := omit }, endLine := { transactId := \"27952VAT\", continuationFlag := \"$\" } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.121997", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:34.122075", component: "850", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on msrpInternalPort from mtc @variables.internalPortMessageWithMsrpMessages : { internalMessage := { description := \"COMMAND_MSRP_SEND_MESSAGE\", parameters := { { parameterName := \"LISTENER_PORT\", parameterValue := \"17076\" } } }, msrpMessages := { { request := { requestStart := { transactId := \"27952VAT\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"j9EMds9SLZdZ\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17076\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"57631VAT\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"*\", total := \"*\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2013-10-01T13:33:33+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: VAT_imdn_xx1xx\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>QEEEL8pw</message-id><datetime>2014-10-24T22:34:32+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\", binary_message := omit }, endLine := { transactId := \"27952VAT\", continuationFlag := \"$\" } } } }} id 10" }
Structured  DataFrame { time: "2014/Oct/24 18:34:34.122212", component: "850", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port msrpInternalPort succeeded, message from mtc: @variables.internalPortMessageWithMsrpMessages : { internalMessage := { description := \"COMMAND_MSRP_SEND_MESSAGE\", parameters := { { parameterName := \"LISTENER_PORT\", parameterValue := \"17076\" } } }, msrpMessages := { { request := { requestStart := { transactId := \"27952VAT\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"j9EMds9SLZdZ\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17076\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"57631VAT\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"*\", total := \"*\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2013-10-01T13:33:33+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: VAT_imdn_xx1xx\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>QEEEL8pw</message-id><datetime>2014-10-24T22:34:32+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\", binary_message := omit }, endLine := { transactId := \"27952VAT\", continuationFlag := \"$\" } } } }} id 10" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.122244", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Message with id 10 was extracted from the queue of msrpInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.122258", component: "850", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "85", function_name: "function:msrpRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.122380", component: "850", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "383", function_name: "function:handleClosedConnectionByRemoteSide", message: " Start timer timerCheckMsrpQueue: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.322407", component: "850", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "394", function_name: "function:handleClosedConnectionByRemoteSide", message: " Timeout timerCheckMsrpQueue: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:34.322759", component: "850", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on msrpPort to system @IPL4_MSRP_demo_types.MSRP_Send : { connId := 2, proto := { tcp := { } }, msgr\\nTo-Path: msrp://142.133.142.3:6060/j9EMds9SLZdZ;tcp\\r\\nFrom-Path: msrp://142.133.150.169:17076/SessionId18VAT;tcp\\r\\nMessage-ID: 57631VAT\\r\\nByte-Range: 1-*/*\\r\\nContent-Type: message/cpim\\r\\n\\r\\nTo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2013-10-01T13:33:33+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: VAT_imdn_xx1xx\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>QEEEL8pw</message-id><datetime>2014-10-24T22:34:32+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\\r\\n-------27952VAT$\\r\\n\")}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:34.322970", component: "850", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Outgoing message was mapped to @IPL4asp_Types.ASP_Send : { connId := 2, proto := { tcp := { } }, msgr\\nTo-Path: msrp://142.133.142.3:6060/j9EMds9SLZdZ;tcp\\r\\nFrom-Path: msrp://142.133.150.169:17076/SessionId18VAT;tcp\\r\\nMessage-ID: 57631VAT\\r\\nByte-Range: 1-*/*\\r\\nContent-Type: message/cpim\\r\\n\\r\\nTo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2013-10-01T13:33:33+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: VAT_imdn_xx1xx\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>QEEEL8pw</message-id><datetime>2014-10-24T22:34:32+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\\r\\n-------27952VAT$\\r\\n\")}" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.323198", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "343", function_name: "function:processCommand", message: " Sent on msrpInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.323297", component: "850", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "79", function_name: "function:msrpRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.323352", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "216", function_name: "function:receiveInternalMessage", message: " Message enqueued on msrpInternalPort[0] from 850 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.323426", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Receive operation on port msrpInternalPort[0] succeeded, message from 850: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.323465", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Message with id 11 was extracted from the queue of msrpInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.323485", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "218", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.323942", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.333970", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.334046", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "168", function_name: "function:sendInternalMessage", message: " Sent on msrpInternalPort[0] to 850 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.334151", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "83", function_name: "function:msrpRun", message: " Message enqueued on msrpInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.334164", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.334226", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Receive operation on port msrpInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.334270", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Message with id 11 was extracted from the queue of msrpInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.334304", component: "850", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "85", function_name: "function:msrpRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.334492", component: "850", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "383", function_name: "function:handleClosedConnectionByRemoteSide", message: " Start timer timerCheckMsrpQueue: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:34.338046", component: "850", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on msrpPort from system @IPL4asp_Types.ASP_RecvFrom : { connId := 2, remName := \"142.133.142.3\", remPort := 60548, locName := \"142.133.150.169\", locPort := 17076, proto := { tcp := { } }, userData := 0, msg := '4D53525020323739353256415420323030204F4B0D0A546F2D506174683A206D7372703A2F2F3134322E3133332E3135302E3136393A31373037362F53657373696F6E496431385641543B7463700D0A46726F6D2D506174683A206D7372703A2F2F3134322E3133332E3134322E333A363036302F6A39454D647339534C5A645A3B7463700D0A2D2D2D2D2D2D2D3237393532564154240D0A'O (\"MSRP 27952VAT 200 OK\\r\\nTo-Path: msrp://142.133.150.169:17076/SessionId18VAT;tcp\\r\\nFrom-Path: msrp://142.133.142.3:6060/j9EMds9SLZdZ;tcp\\r\\n-------27952VAT$\\r\\n\")} id 6" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.338172", component: "850", peer_component: "BaseMsrpComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "385", function_name: "function:handleClosedConnectionByRemoteSide", message: " Incoming message was mapped to @IPL4_MSRP_demo_types" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.534533", component: "850", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "394", function_name: "function:handleClosedConnectionByRemoteSide", message: " Timeout timerCheckMsrpQueue: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.534724", component: "850", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "287", function_name: "function:baseReceiveMsrpMessage", message: " Start timer timerWaitForMsrpResponse: 15 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.534805", component: "850", peer_component: "BaseMsrpComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "290", function_name: "function:baseReceiveMsrpMessage", message: " Receive operation on port msrpPort succeeded, message from system(" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.534836", component: "850", peer_component: "BaseMsrpComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "290", function_name: "function:baseReceiveMsrpMessage", message: " Message with id 6 was extracted from the queue of msrpPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.534879", component: "850", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "295", function_name: "function:baseReceiveMsrpMessage", message: " Stop timer timerWaitForMsrpResponse: 15 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.535074", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "343", function_name: "function:processCommand", message: " Sent on msrpInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.535155", component: "850", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "79", function_name: "function:msrpRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.535268", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "216", function_name: "function:receiveInternalMessage", message: " Message enqueued on msrpInternalPort[0] from 850 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.535363", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Receive operation on port msrpInternalPort[0] succeeded, message from 850: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.535394", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Message with id 12 was extracted from the queue of msrpInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.535413", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "218", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.537822", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.549742", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "267", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:34.549967", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort[5] to 856 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"11\" } } }, aspHttp := { { httpMessage := { method := \"GET\", url := \"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/channels\", body := \"\", contentType := \"\", statusCode := \"\", header := { } } } }}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:34.550098", component: "856", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort from mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"11\" } } }, aspHttp := { { httpMessage := { method := \"GET\", url := \"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/channels\", body := \"\", contentType := \"\", statusCode := \"\", header := { } } } }} id 3" }
Structured  DataFrame { time: "2014/Oct/24 18:34:34.550179", component: "856", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort succeeded, message from mtc: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"11\" } } }, aspHttp := { { httpMessage := { method := \"GET\", url := \"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/channels\", body := \"\", contentType := \"\", statusCode := \"\", header := { } } } }} id 3" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.550182", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.550210", component: "856", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "67", function_name: "function:httpNodeRun", message: " Message with id 3 was extracted from the queue of httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.550231", component: "856", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "68", function_name: "function:httpNodeRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.550396", component: "856", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "307", function_name: "function:clearHTTPClientPort", message: " Start timer timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.550421", component: "856", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "313", function_name: "function:clearHTTPClientPort", message: " Timeout timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.550496", component: "856", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Sent on clientPort to system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.551290", component: "856", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Message enqueued on clientPort from system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.551321", component: "856", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "243", function_name: "function:sendHTTPClientRequest", message: " Start timer timerWaitForHTTPOpenConnection: 2 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.551345", component: "856", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Receive operation on port clientPort succeeded, message from system(" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.551364", component: "856", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Message with id 5 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.551404", component: "856", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "246", function_name: "function:sendHTTPClientRequest", message: " Stop timer timerWaitForHTTPOpenConnection: 2 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:34.551448", component: "856", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on clientPort to system @HTTPmsg_Types.HTTPMessage : { request := { client_id := 11, method := \"GET\", uri := \"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/channels\", version_major := 1, version_minor := 1, header := { { header_name := \"Host\", header_value := \"142.133.142.3\" }, { header_name := \"Content-Length\", header_value := \"0\" } }, body := \"\" }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.551511", component: "856", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "189", function_name: "function:receiveAnyHTTPClientResponse", message: " Start timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:34.563044", component: "856", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on clientPort from system @HTTPmsg_Types.HTTPMessage : { response := { client_id := 11, version_major := 1, version_minor := 1, statuscode := 200, statustext := \"OK\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:34 GMT\" } }, body := \"{\\n \\\"events\\\": {\\n \\\"list\\\": [ {\\n \\\"eventObject\\\": {\\n \\\"@type\\\": \\\"MessageStatusNotification\\\",\\n \\\"chatMessageStatusNotification\\\": {\\n \\\"link\\\": [ {\\n \\\"href\\\": \\\"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/chat/v1/sip:10014002006@ericsson.se/oneToOne/sip:10014002007@ericsson.se/adhoc\\\",\\n \\\"rel\\\": \\\"ChatSessionInformation\\\"\\n }, {\\n \\\"href\\\": \\\"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/chat/v1/sip:10014002006@ericsson.se/oneToOne/sip:10014002007@ericsson.se/adhoc/messages/QEEEL8pw\\\",\\n \\\"rel\\\": \\\"ChatMessage\\\"\\n } ],\\n \\\"status\\\": \\\"Delivered\\\"\\n },\\n \\\"originalDateTime\\\": \\\"2014-10-24T22:34:32+00:00\\\",\\n \\\"dateTime\\\": \\\"2013-10-01T13:33:33+00:00\\\"\\n }\\n } ]\\n }\\n}\" }} id 6" }
Structured  DataFrame { time: "2014/Oct/24 18:34:34.563172", component: "856", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port clientPort succeeded, message from system(): @HTTPmsg_Types.HTTPMessage : { response := { client_id := 11, version_major := 1, version_minor := 1, statuscode := 200, statustext := \"OK\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:34 GMT\" } }, body := \"{\\n \\\"events\\\": {\\n \\\"list\\\": [ {\\n \\\"eventObject\\\": {\\n \\\"@type\\\": \\\"MessageStatusNotification\\\",\\n \\\"chatMessageStatusNotification\\\": {\\n \\\"link\\\": [ {\\n \\\"href\\\": \\\"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/chat/v1/sip:10014002006@ericsson.se/oneToOne/sip:10014002007@ericsson.se/adhoc\\\",\\n \\\"rel\\\": \\\"ChatSessionInformation\\\"\\n }, {\\n \\\"href\\\": \\\"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/chat/v1/sip:10014002006@ericsson.se/oneToOne/sip:10014002007@ericsson.se/adhoc/messages/QEEEL8pw\\\",\\n \\\"rel\\\": \\\"ChatMessage\\\"\\n } ],\\n \\\"status\\\": \\\"Delivered\\\"\\n },\\n \\\"originalDateTime\\\": \\\"2014-10-24T22:34:32+00:00\\\",\\n \\\"dateTime\\\": \\\"2013-10-01T13:33:33+00:00\\\"\\n }\\n } ]\\n }\\n}\" }} id 6" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.563207", component: "856", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "193", function_name: "function:receiveAnyHTTPClientResponse", message: " Message with id 6 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.563239", component: "856", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "194", function_name: "function:receiveAnyHTTPClientResponse", message: " Stop timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:34.563361", component: "856", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort to mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\n \\\"events\\\": {\\n \\\"list\\\": [ {\\n \\\"eventObject\\\": {\\n \\\"@type\\\": \\\"MessageStatusNotification\\\",\\n \\\"chatMessageStatusNotification\\\": {\\n \\\"link\\\": [ {\\n \\\"href\\\": \\\"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/chat/v1/sip:10014002006@ericsson.se/oneToOne/sip:10014002007@ericsson.se/adhoc\\\",\\n \\\"rel\\\": \\\"ChatSessionInformation\\\"\\n }, {\\n \\\"href\\\": \\\"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/chat/v1/sip:10014002006@ericsson.se/oneToOne/sip:10014002007@ericsson.se/adhoc/messages/QEEEL8pw\\\",\\n \\\"rel\\\": \\\"ChatMessage\\\"\\n } ],\\n \\\"status\\\": \\\"Delivered\\\"\\n },\\n \\\"originalDateTime\\\": \\\"2014-10-24T22:34:32+00:00\\\",\\n \\\"dateTime\\\": \\\"2013-10-01T13:33:33+00:00\\\"\\n }\\n } ]\\n }\\n}\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:34 GMT\" } } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.563424", component: "856", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "62", function_name: "function:httpNodeRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:34.563562", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort[5] from 856 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\n \\\"events\\\": {\\n \\\"list\\\": [ {\\n \\\"eventObject\\\": {\\n \\\"@type\\\": \\\"MessageStatusNotification\\\",\\n \\\"chatMessageStatusNotification\\\": {\\n \\\"link\\\": [ {\\n \\\"href\\\": \\\"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/chat/v1/sip:10014002006@ericsson.se/oneToOne/sip:10014002007@ericsson.se/adhoc\\\",\\n \\\"rel\\\": \\\"ChatSessionInformation\\\"\\n }, {\\n \\\"href\\\": \\\"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/chat/v1/sip:10014002006@ericsson.se/oneToOne/sip:10014002007@ericsson.se/adhoc/messages/QEEEL8pw\\\",\\n \\\"rel\\\": \\\"ChatMessage\\\"\\n } ],\\n \\\"status\\\": \\\"Delivered\\\"\\n },\\n \\\"originalDateTime\\\": \\\"2014-10-24T22:34:32+00:00\\\",\\n \\\"dateTime\\\": \\\"2013-10-01T13:33:33+00:00\\\"\\n }\\n } ]\\n }\\n}\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:34 GMT\" } } } } }} id 4" }
Structured  DataFrame { time: "2014/Oct/24 18:34:34.563679", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort[5] succeeded, message from 856: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\n \\\"events\\\": {\\n \\\"list\\\": [ {\\n \\\"eventObject\\\": {\\n \\\"@type\\\": \\\"MessageStatusNotification\\\",\\n \\\"chatMessageStatusNotification\\\": {\\n \\\"link\\\": [ {\\n \\\"href\\\": \\\"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/chat/v1/sip:10014002006@ericsson.se/oneToOne/sip:10014002007@ericsson.se/adhoc\\\",\\n \\\"rel\\\": \\\"ChatSessionInformation\\\"\\n }, {\\n \\\"href\\\": \\\"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/chat/v1/sip:10014002006@ericsson.se/oneToOne/sip:10014002007@ericsson.se/adhoc/messages/QEEEL8pw\\\",\\n \\\"rel\\\": \\\"ChatMessage\\\"\\n } ],\\n \\\"status\\\": \\\"Delivered\\\"\\n },\\n \\\"originalDateTime\\\": \\\"2014-10-24T22:34:32+00:00\\\",\\n \\\"dateTime\\\": \\\"2013-10-01T13:33:33+00:00\\\"\\n }\\n } ]\\n }\\n}\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:34 GMT\" } } } } }} id 4" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.563724", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Message with id 4 was extracted from the queue of httpNodeInternalPort[5]" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.563755", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "241", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.565889", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.577506", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "267", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:34.577733", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort[3] to 854 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"12\" } } }, aspHttp := { { httpMessage := { method := \"POST\", url := \"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/message/send\", body := \"{ \\\"to\\\": \\\"sip:10014002006@ericsson.se\\\", \\\"body\\\": \\\"Body message 10014002007 to 10014002006\\\", \\\"contentType\\\": \\\"text/plain\\\"} \", contentType := \"application/json\", statusCode := \"\", header := { } } } }}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:34.577904", component: "854", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort from mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"12\" } } }, aspHttp := { { httpMessage := { method := \"POST\", url := \"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/message/send\", body := \"{ \\\"to\\\": \\\"sip:10014002006@ericsson.se\\\", \\\"body\\\": \\\"Body message 10014002007 to 10014002006\\\", \\\"contentType\\\": \\\"text/plain\\\"} \", contentType := \"application/json\", statusCode := \"\", header := { } } } }} id 3" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.577965", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:34.577977", component: "854", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort succeeded, message from mtc: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"12\" } } }, aspHttp := { { httpMessage := { method := \"POST\", url := \"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/message/send\", body := \"{ \\\"to\\\": \\\"sip:10014002006@ericsson.se\\\", \\\"body\\\": \\\"Body message 10014002007 to 10014002006\\\", \\\"contentType\\\": \\\"text/plain\\\"} \", contentType := \"application/json\", statusCode := \"\", header := { } } } }} id 3" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.578001", component: "854", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "67", function_name: "function:httpNodeRun", message: " Message with id 3 was extracted from the queue of httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.578016", component: "854", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "68", function_name: "function:httpNodeRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.578158", component: "854", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "307", function_name: "function:clearHTTPClientPort", message: " Start timer timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.578176", component: "854", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "313", function_name: "function:clearHTTPClientPort", message: " Timeout timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.578245", component: "854", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Sent on clientPort to system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.578976", component: "854", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Message enqueued on clientPort from system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.579006", component: "854", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "243", function_name: "function:sendHTTPClientRequest", message: " Start timer timerWaitForHTTPOpenConnection: 2 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.579029", component: "854", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Receive operation on port clientPort succeeded, message from system(" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.579045", component: "854", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Message with id 5 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.579059", component: "854", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "246", function_name: "function:sendHTTPClientRequest", message: " Stop timer timerWaitForHTTPOpenConnection: 2 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:34.579133", component: "854", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on clientPort to system @HTTPmsg_Types.HTTPMessage : { request := { client_id := 11, method := \"POST\", uri := \"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/message/send\", version_major := 1, version_minor := 1, header := { { header_name := \"Host\", header_value := \"142.133.142.3\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Content-Length\", header_value := \"119\" } }, body := \"{ \\\"to\\\": \\\"sip:10014002006@ericsson.se\\\", \\\"body\\\": \\\"Body message 10014002007 to 10014002006\\\", \\\"contentType\\\": \\\"text/plain\\\"} \" }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.579198", component: "854", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "189", function_name: "function:receiveAnyHTTPClientResponse", message: " Start timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:34.613765", component: "854", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on clientPort from system @HTTPmsg_Types.HTTPMessage : { response := { client_id := 11, version_major := 1, version_minor := 1, statuscode := 200, statustext := \"OK\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:34 GMT\" } }, body := \"{\\n \\\"msgId\\\": \\\"lRZfNWvU\\\"\\n}\" }} id 6" }
Structured  DataFrame { time: "2014/Oct/24 18:34:34.613904", component: "854", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port clientPort succeeded, message from system(): @HTTPmsg_Types.HTTPMessage : { response := { client_id := 11, version_major := 1, version_minor := 1, statuscode := 200, statustext := \"OK\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:34 GMT\" } }, body := \"{\\n \\\"msgId\\\": \\\"lRZfNWvU\\\"\\n}\" }} id 6" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.613949", component: "854", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "193", function_name: "function:receiveAnyHTTPClientResponse", message: " Message with id 6 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.613982", component: "854", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "194", function_name: "function:receiveAnyHTTPClientResponse", message: " Stop timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:34.614086", component: "854", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort to mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\n \\\"msgId\\\": \\\"lRZfNWvU\\\"\\n}\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:34 GMT\" } } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.614155", component: "854", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "62", function_name: "function:httpNodeRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:34.614254", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort[3] from 854 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\n \\\"msgId\\\": \\\"lRZfNWvU\\\"\\n}\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:34 GMT\" } } } } }} id 4" }
Structured  DataFrame { time: "2014/Oct/24 18:34:34.614348", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort[3] succeeded, message from 854: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\n \\\"msgId\\\": \\\"lRZfNWvU\\\"\\n}\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:34 GMT\" } } } } }} id 4" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.614377", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Message with id 4 was extracted from the queue of httpNodeInternalPort[3]" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.614395", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "241", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.615123", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:34.617320", component: "857", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on msrpPort from system @IPL4asp_Types.ASP_RecvFrom : { connId := 1, remName := \"142.133.142.3\", remPort := 6060, locName := \"142.133.150.169\", locPort := 17077, proto := { tcp := { } }, userData := 0, msgt0FCH SEND\\r\\nTo-Path: msrp://142.133.150.169:17077/SessionId18VAT;tcp\\r\\nFrom-Path: msrp://142.133.142.3:6060/rFhqxHwhogoX;tcp\\r\\nByte-Range: 1-296/296\\r\\nMessage-ID: lRZfNWvU\\r\\nContent-Type: message/cpim\\r\\n\\r\\nTo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:34+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: lRZfNWvU\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002007 to 10014002006\\r\\n-------YO8t0FCH$\\r\\n\")} id 6" }
Structured  DataFrame { time: "2014/Oct/24 18:34:34.617680", component: "857", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Incoming message was mapped to @IPL4_MSRP_demo_types.MSRP_RecvFrom : { connId := 1, remName := \"142.133.142.3\", remPort := 6060, locName := \"142.133.150.169\", locPort := 17077, proto := { tcp := { } }, userData := 0, msg := { request := { requestStart := { transactId := \"YO8t0FCH\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17077\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"rFhqxHwhogoX\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"lRZfNWvU\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"296\", total := \"296\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:34+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: lRZfNWvU\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002007 to 10014002006\", binary_message := <unbound> }, endLine := { transactId := \"YO8t0FCH\", continuationFlag := \"$\" } } }, binary_messageo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:34+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: lRZfNWvU\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002007 to 10014002006\")} id 6" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.625496", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.625624", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "168", function_name: "function:sendInternalMessage", message: " Sent on msrpInternalPort[1] to 857 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.625781", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "83", function_name: "function:msrpRun", message: " Message enqueued on msrpInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.625827", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.625851", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Receive operation on port msrpInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.625886", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Message with id 11 was extracted from the queue of msrpInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.625934", component: "857", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "85", function_name: "function:msrpRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.626081", component: "857", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "383", function_name: "function:handleClosedConnectionByRemoteSide", message: " Start timer timerCheckMsrpQueue: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.826107", component: "857", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "394", function_name: "function:handleClosedConnectionByRemoteSide", message: " Timeout timerCheckMsrpQueue: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.826412", component: "857", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "287", function_name: "function:baseReceiveMsrpMessage", message: " Start timer timerWaitForMsrpResponse: 15 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:34.826646", component: "857", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port msrpPort succeeded, message from system(): @IPL4_MSRP_demo_types.MSRP_RecvFrom : { connId := 1, remName := \"142.133.142.3\", remPort := 6060, locName := \"142.133.150.169\", locPort := 17077, proto := { tcp := { } }, userData := 0, msg := { request := { requestStart := { transactId := \"YO8t0FCH\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17077\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"rFhqxHwhogoX\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"lRZfNWvU\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"296\", total := \"296\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:34+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: lRZfNWvU\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002007 to 10014002006\", binary_message := <unbound> }, endLine := { transactId := \"YO8t0FCH\", continuationFlag := \"$\" } } }, binary_messageo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:34+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: lRZfNWvU\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002007 to 10014002006\")} id 6" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.826766", component: "857", peer_component: "BaseMsrpComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "290", function_name: "function:baseReceiveMsrpMessage", message: " Message with id 6 was extracted from the queue of msrpPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.826859", component: "857", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "295", function_name: "function:baseReceiveMsrpMessage", message: " Stop timer timerWaitForMsrpResponse: 15 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:34.827355", component: "857", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on msrpInternalPort to mtc @variables.internalPortMessageWithMsrpMessages : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_MSRP_EXPECT_MESSAGE\" } } }, msrpMessages := { { request := { requestStart := { transactId := \"YO8t0FCH\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17077\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"rFhqxHwhogoX\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"lRZfNWvU\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"296\", total := \"296\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:34+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: lRZfNWvU\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002007 to 10014002006\", binary_messageo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:34+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: lRZfNWvU\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002007 to 10014002006\") }, endLine := { transactId := \"YO8t0FCH\", continuationFlag := \"$\" } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.827526", component: "857", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "79", function_name: "function:msrpRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:34.827812", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on msrpInternalPort[1] from 857 @variables.internalPortMessageWithMsrpMessages : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_MSRP_EXPECT_MESSAGE\" } } }, msrpMessages := { { request := { requestStart := { transactId := \"YO8t0FCH\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17077\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"rFhqxHwhogoX\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"lRZfNWvU\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"296\", total := \"296\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:34+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: lRZfNWvU\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002007 to 10014002006\", binary_messageo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:34+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: lRZfNWvU\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002007 to 10014002006\") }, endLine := { transactId := \"YO8t0FCH\", continuationFlag := \"$\" } } } }} id 12" }
Structured  DataFrame { time: "2014/Oct/24 18:34:34.828130", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port msrpInternalPort[1] succeeded, message from 857: @variables.internalPortMessageWithMsrpMessages : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_MSRP_EXPECT_MESSAGE\" } } }, msrpMessages := { { request := { requestStart := { transactId := \"YO8t0FCH\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17077\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"rFhqxHwhogoX\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"lRZfNWvU\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"296\", total := \"296\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:34+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: lRZfNWvU\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002007 to 10014002006\", binary_messageo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:34+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: lRZfNWvU\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002007 to 10014002006\") }, endLine := { transactId := \"YO8t0FCH\", continuationFlag := \"$\" } } } }} id 12" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.828245", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Message with id 12 was extracted from the queue of msrpInternalPort[1]" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.828298", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "218", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.830239", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.841750", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.841939", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "168", function_name: "function:sendInternalMessage", message: " Sent on msrpInternalPort[1] to 857 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.842256", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "83", function_name: "function:msrpRun", message: " Message enqueued on msrpInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.842271", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.842347", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Receive operation on port msrpInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.842386", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Message with id 12 was extracted from the queue of msrpInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.842411", component: "857", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "85", function_name: "function:msrpRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:34.842577", component: "857", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "383", function_name: "function:handleClosedConnectionByRemoteSide", message: " Start timer timerCheckMsrpQueue: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.046244", component: "857", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "394", function_name: "function:handleClosedConnectionByRemoteSide", message: " Timeout timerCheckMsrpQueue: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:35.051777", component: "857", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on msrpPort to system @IPL4_MSRP_demo_types.MSRP_Send : { connId := 1, proto := { tcp := { } }, msg := '4D53525020594F38743046434820323030204F4B0D0A546F2D506174683A206D7372703A2F2F3134322E3133332E3134322E333A363036302F72466871784877686F676F583B7463700D0A46726F6D2D506174683A206D7372703A2F2F3134322E3133332E3135302E3136393A31373037372F53657373696F6E496431385641543B7463700D0A2D2D2D2D2D2D2D594F387430464348240D0A'O (\"MSRP YO8t0FCH 200 OK\\r\\nTo-Path: msrp://142.133.142.3:6060/rFhqxHwhogoX;tcp\\r\\nFrom-Path: msrp://142.133.150.169:17077/SessionId18VAT;tcp\\r\\n-------YO8t0FCH$\\r\\n\")}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:35.051908", component: "857", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Outgoing message was mapped to @IPL4asp_Types.ASP_Send : { connId := 1, proto := { tcp := { } }, msg := '4D53525020594F38743046434820323030204F4B0D0A546F2D506174683A206D7372703A2F2F3134322E3133332E3134322E333A363036302F72466871784877686F676F583B7463700D0A46726F6D2D506174683A206D7372703A2F2F3134322E3133332E3135302E3136393A31373037372F53657373696F6E496431385641543B7463700D0A2D2D2D2D2D2D2D594F387430464348240D0A'O (\"MSRP YO8t0FCH 200 OK\\r\\nTo-Path: msrp://142.133.142.3:6060/rFhqxHwhogoX;tcp\\r\\nFrom-Path: msrp://142.133.150.169:17077/SessionId18VAT;tcp\\r\\n-------YO8t0FCH$\\r\\n\")}" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.052080", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "343", function_name: "function:processCommand", message: " Sent on msrpInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.052126", component: "857", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "79", function_name: "function:msrpRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.052212", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "216", function_name: "function:receiveInternalMessage", message: " Message enqueued on msrpInternalPort[1] from 857 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.052326", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Receive operation on port msrpInternalPort[1] succeeded, message from 857: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.052364", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Message with id 13 was extracted from the queue of msrpInternalPort[1]" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.052399", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "218", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.062074", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.073494", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:35.073768", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on msrpInternalPort[0] to 850 @variables.internalPortMessageWithMsrpMessages : { internalMessage := { description := \"COMMAND_MSRP_SEND_MESSAGE\", parameters := { { parameterName := \"LISTENER_PORT\", parameterValue := \"17076\" } } }, msrpMessages := { { request := { requestStart := { transactId := \"YO8t0VAT\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"j9EMds9SLZdZ\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17076\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"lRZfNWvU\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"296\", total := \"296\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:34+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: lRZfNWvU\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002007 to 10014002006\", binary_message := omit }, endLine := { transactId := \"YO8t0VAT\", continuationFlag := \"$\" } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.073975", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:35.074039", component: "850", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on msrpInternalPort from mtc @variables.internalPortMessageWithMsrpMessages : { internalMessage := { description := \"COMMAND_MSRP_SEND_MESSAGE\", parameters := { { parameterName := \"LISTENER_PORT\", parameterValue := \"17076\" } } }, msrpMessages := { { request := { requestStart := { transactId := \"YO8t0VAT\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"j9EMds9SLZdZ\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17076\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"lRZfNWvU\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"296\", total := \"296\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:34+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: lRZfNWvU\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002007 to 10014002006\", binary_message := omit }, endLine := { transactId := \"YO8t0VAT\", continuationFlag := \"$\" } } } }} id 12" }
Structured  DataFrame { time: "2014/Oct/24 18:34:35.074178", component: "850", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port msrpInternalPort succeeded, message from mtc: @variables.internalPortMessageWithMsrpMessages : { internalMessage := { description := \"COMMAND_MSRP_SEND_MESSAGE\", parameters := { { parameterName := \"LISTENER_PORT\", parameterValue := \"17076\" } } }, msrpMessages := { { request := { requestStart := { transactId := \"YO8t0VAT\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"j9EMds9SLZdZ\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17076\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"lRZfNWvU\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"296\", total := \"296\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:34+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: lRZfNWvU\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002007 to 10014002006\", binary_message := omit }, endLine := { transactId := \"YO8t0VAT\", continuationFlag := \"$\" } } } }} id 12" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.074237", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Message with id 12 was extracted from the queue of msrpInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.074279", component: "850", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "85", function_name: "function:msrpRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.074415", component: "850", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "383", function_name: "function:handleClosedConnectionByRemoteSide", message: " Start timer timerCheckMsrpQueue: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.274444", component: "850", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "394", function_name: "function:handleClosedConnectionByRemoteSide", message: " Timeout timerCheckMsrpQueue: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:35.274688", component: "850", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on msrpPort to system @IPL4_MSRP_demo_types.MSRP_Send : { connId := 2, proto := { tcp := { } }, msgt0VAT SEND\\r\\nTo-Path: msrp://142.133.142.3:6060/j9EMds9SLZdZ;tcp\\r\\nFrom-Path: msrp://142.133.150.169:17076/SessionId18VAT;tcp\\r\\nMessage-ID: lRZfNWvU\\r\\nByte-Range: 1-296/296\\r\\nContent-Type: message/cpim\\r\\n\\r\\nTo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:34+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: lRZfNWvU\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002007 to 10014002006\\r\\n-------YO8t0VAT$\\r\\n\")}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:35.274791", component: "850", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Outgoing message was mapped to @IPL4asp_Types.ASP_Send : { connId := 2, proto := { tcp := { } }, msgt0VAT SEND\\r\\nTo-Path: msrp://142.133.142.3:6060/j9EMds9SLZdZ;tcp\\r\\nFrom-Path: msrp://142.133.150.169:17076/SessionId18VAT;tcp\\r\\nMessage-ID: lRZfNWvU\\r\\nByte-Range: 1-296/296\\r\\nContent-Type: message/cpim\\r\\n\\r\\nTo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:34+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Disposition-Notification: positive-delivery\\r\\nimdn.Message-ID: lRZfNWvU\\r\\n\\r\\nContent-Type: text/plain\\r\\n\\r\\nBody message 10014002007 to 10014002006\\r\\n-------YO8t0VAT$\\r\\n\")}" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.274977", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "343", function_name: "function:processCommand", message: " Sent on msrpInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.275034", component: "850", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "79", function_name: "function:msrpRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.275102", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "216", function_name: "function:receiveInternalMessage", message: " Message enqueued on msrpInternalPort[0] from 850 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.275197", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Receive operation on port msrpInternalPort[0] succeeded, message from 850: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.275236", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Message with id 13 was extracted from the queue of msrpInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.275265", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "218", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.275821", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.285850", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.285946", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "168", function_name: "function:sendInternalMessage", message: " Sent on msrpInternalPort[0] to 850 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.286051", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "83", function_name: "function:msrpRun", message: " Message enqueued on msrpInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.286067", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.286103", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Receive operation on port msrpInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.286124", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Message with id 13 was extracted from the queue of msrpInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.286149", component: "850", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "85", function_name: "function:msrpRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.286258", component: "850", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "383", function_name: "function:handleClosedConnectionByRemoteSide", message: " Start timer timerCheckMsrpQueue: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:35.290422", component: "850", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on msrpPort from system @IPL4asp_Types.ASP_RecvFrom : { connId := 2, remName := \"142.133.142.3\", remPort := 60548, locName := \"142.133.150.169\", locPort := 17076, proto := { tcp := { } }, userData := 0, msg := '4D53525020594F38743056415420323030204F4B0D0A546F2D506174683A206D7372703A2F2F3134322E3133332E3135302E3136393A31373037362F53657373696F6E496431385641543B7463700D0A46726F6D2D506174683A206D7372703A2F2F3134322E3133332E3134322E333A363036302F6A39454D647339534C5A645A3B7463700D0A2D2D2D2D2D2D2D594F387430564154240D0A'O (\"MSRP YO8t0VAT 200 OK\\r\\nTo-Path: msrp://142.133.150.169:17076/SessionId18VAT;tcp\\r\\nFrom-Path: msrp://142.133.142.3:6060/j9EMds9SLZdZ;tcp\\r\\n-------YO8t0VAT$\\r\\n\")} id 7" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.290540", component: "850", peer_component: "BaseMsrpComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "385", function_name: "function:handleClosedConnectionByRemoteSide", message: " Incoming message was mapped to @IPL4_MSRP_demo_types" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.486281", component: "850", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "394", function_name: "function:handleClosedConnectionByRemoteSide", message: " Timeout timerCheckMsrpQueue: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.486437", component: "850", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "287", function_name: "function:baseReceiveMsrpMessage", message: " Start timer timerWaitForMsrpResponse: 15 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.486519", component: "850", peer_component: "BaseMsrpComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "290", function_name: "function:baseReceiveMsrpMessage", message: " Receive operation on port msrpPort succeeded, message from system(" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.486574", component: "850", peer_component: "BaseMsrpComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "290", function_name: "function:baseReceiveMsrpMessage", message: " Message with id 7 was extracted from the queue of msrpPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.486623", component: "850", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "295", function_name: "function:baseReceiveMsrpMessage", message: " Stop timer timerWaitForMsrpResponse: 15 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.486867", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "343", function_name: "function:processCommand", message: " Sent on msrpInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.486953", component: "850", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "79", function_name: "function:msrpRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.487089", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "216", function_name: "function:receiveInternalMessage", message: " Message enqueued on msrpInternalPort[0] from 850 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.487250", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Receive operation on port msrpInternalPort[0] succeeded, message from 850: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.487315", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Message with id 14 was extracted from the queue of msrpInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.487370", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "218", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.500514", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.517754", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "267", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:35.518031", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort[5] to 856 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"13\" } } }, aspHttp := { { httpMessage := { method := \"GET\", url := \"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/channels\", body := \"\", contentType := \"\", statusCode := \"\", header := { } } } }}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:35.518220", component: "856", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort from mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"13\" } } }, aspHttp := { { httpMessage := { method := \"GET\", url := \"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/channels\", body := \"\", contentType := \"\", statusCode := \"\", header := { } } } }} id 4" }
Structured  DataFrame { time: "2014/Oct/24 18:34:35.518293", component: "856", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort succeeded, message from mtc: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"13\" } } }, aspHttp := { { httpMessage := { method := \"GET\", url := \"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/channels\", body := \"\", contentType := \"\", statusCode := \"\", header := { } } } }} id 4" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.518319", component: "856", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "67", function_name: "function:httpNodeRun", message: " Message with id 4 was extracted from the queue of httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.518336", component: "856", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "68", function_name: "function:httpNodeRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.518434", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.518479", component: "856", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "307", function_name: "function:clearHTTPClientPort", message: " Start timer timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.518500", component: "856", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "313", function_name: "function:clearHTTPClientPort", message: " Timeout timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.518575", component: "856", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Sent on clientPort to system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.519416", component: "856", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Message enqueued on clientPort from system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.519450", component: "856", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "243", function_name: "function:sendHTTPClientRequest", message: " Start timer timerWaitForHTTPOpenConnection: 2 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.519476", component: "856", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Receive operation on port clientPort succeeded, message from system(" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.519494", component: "856", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Message with id 7 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.519509", component: "856", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "246", function_name: "function:sendHTTPClientRequest", message: " Stop timer timerWaitForHTTPOpenConnection: 2 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:35.519553", component: "856", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on clientPort to system @HTTPmsg_Types.HTTPMessage : { request := { client_id := 12, method := \"GET\", uri := \"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/channels\", version_major := 1, version_minor := 1, header := { { header_name := \"Host\", header_value := \"142.133.142.3\" }, { header_name := \"Content-Length\", header_value := \"0\" } }, body := \"\" }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.519609", component: "856", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "189", function_name: "function:receiveAnyHTTPClientResponse", message: " Start timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:35.539438", component: "856", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on clientPort from system @HTTPmsg_Types.HTTPMessage : { response := { client_id := 12, version_major := 1, version_minor := 1, statuscode := 200, statustext := \"OK\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:34 GMT\" } }, body := \"{\\n \\\"events\\\": {\\n \\\"list\\\": [ {\\n \\\"eventObject\\\": {\\n \\\"@type\\\": \\\"message\\\",\\n \\\"from\\\": \\\"sip:10014002007@ericsson.se\\\",\\n \\\"contentType\\\": \\\"text/plain\\\",\\n \\\"reportRequest\\\": [ \\\"Delivered\\\" ],\\n \\\"msgId\\\": \\\"lRZfNWvU\\\",\\n \\\"dateTime\\\": \\\"2014-10-24T22:34:34+00:00\\\",\\n \\\"body\\\": \\\"Body message 10014002007 to 10014002006\\\",\\n \\\"type\\\": \\\"session-message\\\"\\n }\\n } ]\\n }\\n}\" }} id 8" }
Structured  DataFrame { time: "2014/Oct/24 18:34:35.539615", component: "856", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port clientPort succeeded, message from system(): @HTTPmsg_Types.HTTPMessage : { response := { client_id := 12, version_major := 1, version_minor := 1, statuscode := 200, statustext := \"OK\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:34 GMT\" } }, body := \"{\\n \\\"events\\\": {\\n \\\"list\\\": [ {\\n \\\"eventObject\\\": {\\n \\\"@type\\\": \\\"message\\\",\\n \\\"from\\\": \\\"sip:10014002007@ericsson.se\\\",\\n \\\"contentType\\\": \\\"text/plain\\\",\\n \\\"reportRequest\\\": [ \\\"Delivered\\\" ],\\n \\\"msgId\\\": \\\"lRZfNWvU\\\",\\n \\\"dateTime\\\": \\\"2014-10-24T22:34:34+00:00\\\",\\n \\\"body\\\": \\\"Body message 10014002007 to 10014002006\\\",\\n \\\"type\\\": \\\"session-message\\\"\\n }\\n } ]\\n }\\n}\" }} id 8" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.539697", component: "856", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "193", function_name: "function:receiveAnyHTTPClientResponse", message: " Message with id 8 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.539736", component: "856", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "194", function_name: "function:receiveAnyHTTPClientResponse", message: " Stop timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:35.539924", component: "856", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort to mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\n \\\"events\\\": {\\n \\\"list\\\": [ {\\n \\\"eventObject\\\": {\\n \\\"@type\\\": \\\"message\\\",\\n \\\"from\\\": \\\"sip:10014002007@ericsson.se\\\",\\n \\\"contentType\\\": \\\"text/plain\\\",\\n \\\"reportRequest\\\": [ \\\"Delivered\\\" ],\\n \\\"msgId\\\": \\\"lRZfNWvU\\\",\\n \\\"dateTime\\\": \\\"2014-10-24T22:34:34+00:00\\\",\\n \\\"body\\\": \\\"Body message 10014002007 to 10014002006\\\",\\n \\\"type\\\": \\\"session-message\\\"\\n }\\n } ]\\n }\\n}\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:34 GMT\" } } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.540020", component: "856", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "62", function_name: "function:httpNodeRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:35.540126", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort[5] from 856 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\n \\\"events\\\": {\\n \\\"list\\\": [ {\\n \\\"eventObject\\\": {\\n \\\"@type\\\": \\\"message\\\",\\n \\\"from\\\": \\\"sip:10014002007@ericsson.se\\\",\\n \\\"contentType\\\": \\\"text/plain\\\",\\n \\\"reportRequest\\\": [ \\\"Delivered\\\" ],\\n \\\"msgId\\\": \\\"lRZfNWvU\\\",\\n \\\"dateTime\\\": \\\"2014-10-24T22:34:34+00:00\\\",\\n \\\"body\\\": \\\"Body message 10014002007 to 10014002006\\\",\\n \\\"type\\\": \\\"session-message\\\"\\n }\\n } ]\\n }\\n}\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:34 GMT\" } } } } }} id 5" }
Structured  DataFrame { time: "2014/Oct/24 18:34:35.540289", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort[5] succeeded, message from 856: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\n \\\"events\\\": {\\n \\\"list\\\": [ {\\n \\\"eventObject\\\": {\\n \\\"@type\\\": \\\"message\\\",\\n \\\"from\\\": \\\"sip:10014002007@ericsson.se\\\",\\n \\\"contentType\\\": \\\"text/plain\\\",\\n \\\"reportRequest\\\": [ \\\"Delivered\\\" ],\\n \\\"msgId\\\": \\\"lRZfNWvU\\\",\\n \\\"dateTime\\\": \\\"2014-10-24T22:34:34+00:00\\\",\\n \\\"body\\\": \\\"Body message 10014002007 to 10014002006\\\",\\n \\\"type\\\": \\\"session-message\\\"\\n }\\n } ]\\n }\\n}\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:34 GMT\" } } } } }} id 5" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.540390", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Message with id 5 was extracted from the queue of httpNodeInternalPort[5]" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.540434", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "241", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.546181", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:35.546646", component: "850", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on msrpPort from system @IPL4asp_Types.ASP_RecvFrom : { connId := 2, remName := \"142.133.142.3\", remPort := 60548, locName := \"142.133.150.169\", locPort := 17076, proto := { tcp := { } }, userData := 0, msgrpk3vM SEND\\r\\nTo-Path: msrp://142.133.150.169:17076/SessionId18VAT;tcp\\r\\nFrom-Path: msrp://142.133.142.3:6060/j9EMds9SLZdZ;tcp\\r\\nByte-Range: 1-578/578\\r\\nMessage-ID: imdn-ciwHnDwe\\r\\nContent-Type: message/cpim\\r\\n\\r\\nTo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:35+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: imdn-ciwHnDwe\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>lRZfNWvU</message-id><datetime>2014-10-24T22:34:34+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\\r\\n-------9Prpk3vM$\\r\\n\")} id 8" }
Structured  DataFrame { time: "2014/Oct/24 18:34:35.547092", component: "850", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Incoming message was mapped to @IPL4_MSRP_demo_types.MSRP_RecvFrom : { connId := 2, remName := \"142.133.142.3\", remPort := 60548, locName := \"142.133.150.169\", locPort := 17076, proto := { tcp := { } }, userData := 0, msg := { request := { requestStart := { transactId := \"9Prpk3vM\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17076\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"j9EMds9SLZdZ\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"imdn-ciwHnDwe\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"578\", total := \"578\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:35+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: imdn-ciwHnDwe\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>lRZfNWvU</message-id><datetime>2014-10-24T22:34:34+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\", binary_message := <unbound> }, endLine := { transactId := \"9Prpk3vM\", continuationFlag := \"$\" } } }, binary_messageo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:35+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: imdn-ciwHnDwe\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>lRZfNWvU</message-id><datetime>2014-10-24T22:34:34+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\")} id 8" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.557729", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.557828", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "168", function_name: "function:sendInternalMessage", message: " Sent on msrpInternalPort[0] to 850 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.557963", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "83", function_name: "function:msrpRun", message: " Message enqueued on msrpInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.557965", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.558029", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Receive operation on port msrpInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.558055", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Message with id 14 was extracted from the queue of msrpInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.558071", component: "850", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "85", function_name: "function:msrpRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.558200", component: "850", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "383", function_name: "function:handleClosedConnectionByRemoteSide", message: " Start timer timerCheckMsrpQueue: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.758225", component: "850", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "394", function_name: "function:handleClosedConnectionByRemoteSide", message: " Timeout timerCheckMsrpQueue: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.758395", component: "850", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "287", function_name: "function:baseReceiveMsrpMessage", message: " Start timer timerWaitForMsrpResponse: 15 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:35.758564", component: "850", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port msrpPort succeeded, message from system(): @IPL4_MSRP_demo_types.MSRP_RecvFrom : { connId := 2, remName := \"142.133.142.3\", remPort := 60548, locName := \"142.133.150.169\", locPort := 17076, proto := { tcp := { } }, userData := 0, msg := { request := { requestStart := { transactId := \"9Prpk3vM\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17076\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"j9EMds9SLZdZ\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"imdn-ciwHnDwe\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"578\", total := \"578\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:35+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: imdn-ciwHnDwe\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>lRZfNWvU</message-id><datetime>2014-10-24T22:34:34+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\", binary_message := <unbound> }, endLine := { transactId := \"9Prpk3vM\", continuationFlag := \"$\" } } }, binary_messageo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:35+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: imdn-ciwHnDwe\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>lRZfNWvU</message-id><datetime>2014-10-24T22:34:34+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\")} id 8" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.758637", component: "850", peer_component: "BaseMsrpComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "290", function_name: "function:baseReceiveMsrpMessage", message: " Message with id 8 was extracted from the queue of msrpPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.758691", component: "850", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "295", function_name: "function:baseReceiveMsrpMessage", message: " Stop timer timerWaitForMsrpResponse: 15 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:35.759083", component: "850", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on msrpInternalPort to mtc @variables.internalPortMessageWithMsrpMessages : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_MSRP_EXPECT_MESSAGE\" } } }, msrpMessages := { { request := { requestStart := { transactId := \"9Prpk3vM\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17076\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"j9EMds9SLZdZ\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"imdn-ciwHnDwe\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"578\", total := \"578\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:35+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: imdn-ciwHnDwe\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>lRZfNWvU</message-id><datetime>2014-10-24T22:34:34+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\", binary_messageo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:35+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: imdn-ciwHnDwe\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>lRZfNWvU</message-id><datetime>2014-10-24T22:34:34+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\") }, endLine := { transactId := \"9Prpk3vM\", continuationFlag := \"$\" } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.759218", component: "850", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "79", function_name: "function:msrpRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:35.759552", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on msrpInternalPort[0] from 850 @variables.internalPortMessageWithMsrpMessages : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_MSRP_EXPECT_MESSAGE\" } } }, msrpMessages := { { request := { requestStart := { transactId := \"9Prpk3vM\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17076\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"j9EMds9SLZdZ\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"imdn-ciwHnDwe\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"578\", total := \"578\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:35+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: imdn-ciwHnDwe\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>lRZfNWvU</message-id><datetime>2014-10-24T22:34:34+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\", binary_messageo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:35+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: imdn-ciwHnDwe\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>lRZfNWvU</message-id><datetime>2014-10-24T22:34:34+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\") }, endLine := { transactId := \"9Prpk3vM\", continuationFlag := \"$\" } } } }} id 15" }
Structured  DataFrame { time: "2014/Oct/24 18:34:35.759852", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port msrpInternalPort[0] succeeded, message from 850: @variables.internalPortMessageWithMsrpMessages : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_MSRP_EXPECT_MESSAGE\" } } }, msrpMessages := { { request := { requestStart := { transactId := \"9Prpk3vM\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17076\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"j9EMds9SLZdZ\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"imdn-ciwHnDwe\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"578\", total := \"578\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:35+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: imdn-ciwHnDwe\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>lRZfNWvU</message-id><datetime>2014-10-24T22:34:34+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\", binary_messageo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2014-10-24T22:34:35+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: imdn-ciwHnDwe\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>lRZfNWvU</message-id><datetime>2014-10-24T22:34:34+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\") }, endLine := { transactId := \"9Prpk3vM\", continuationFlag := \"$\" } } } }} id 15" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.759940", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Message with id 15 was extracted from the queue of msrpInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.759980", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "218", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.763716", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.773796", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.774063", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "168", function_name: "function:sendInternalMessage", message: " Sent on msrpInternalPort[0] to 850 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.774243", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.774264", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "83", function_name: "function:msrpRun", message: " Message enqueued on msrpInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.774341", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Receive operation on port msrpInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.774367", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Message with id 15 was extracted from the queue of msrpInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.774381", component: "850", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "85", function_name: "function:msrpRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.774490", component: "850", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "383", function_name: "function:handleClosedConnectionByRemoteSide", message: " Start timer timerCheckMsrpQueue: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.974531", component: "850", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "394", function_name: "function:handleClosedConnectionByRemoteSide", message: " Timeout timerCheckMsrpQueue: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:35.974754", component: "850", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on msrpPort to system @IPL4_MSRP_demo_types.MSRP_Send : { connId := 2, proto := { tcp := { } }, msg := '4D53525020395072706B33764D20323030204F4B0D0A546F2D506174683A206D7372703A2F2F3134322E3133332E3134322E333A363036302F6A39454D647339534C5A645A3B7463700D0A46726F6D2D506174683A206D7372703A2F2F3134322E3133332E3135302E3136393A31373037362F53657373696F6E496431385641543B7463700D0A2D2D2D2D2D2D2D395072706B33764D240D0A'O (\"MSRP 9Prpk3vM 200 OK\\r\\nTo-Path: msrp://142.133.142.3:6060/j9EMds9SLZdZ;tcp\\r\\nFrom-Path: msrp://142.133.150.169:17076/SessionId18VAT;tcp\\r\\n-------9Prpk3vM$\\r\\n\")}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:35.974806", component: "850", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Outgoing message was mapped to @IPL4asp_Types.ASP_Send : { connId := 2, proto := { tcp := { } }, msg := '4D53525020395072706B33764D20323030204F4B0D0A546F2D506174683A206D7372703A2F2F3134322E3133332E3134322E333A363036302F6A39454D647339534C5A645A3B7463700D0A46726F6D2D506174683A206D7372703A2F2F3134322E3133332E3135302E3136393A31373037362F53657373696F6E496431385641543B7463700D0A2D2D2D2D2D2D2D395072706B33764D240D0A'O (\"MSRP 9Prpk3vM 200 OK\\r\\nTo-Path: msrp://142.133.142.3:6060/j9EMds9SLZdZ;tcp\\r\\nFrom-Path: msrp://142.133.150.169:17076/SessionId18VAT;tcp\\r\\n-------9Prpk3vM$\\r\\n\")}" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.974933", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "343", function_name: "function:processCommand", message: " Sent on msrpInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.975046", component: "850", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "79", function_name: "function:msrpRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.975121", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "216", function_name: "function:receiveInternalMessage", message: " Message enqueued on msrpInternalPort[0] from 850 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.975227", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Receive operation on port msrpInternalPort[0] succeeded, message from 850: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.975277", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Message with id 16 was extracted from the queue of msrpInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.975319", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "218", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.979758", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.989820", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:35.990125", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on msrpInternalPort[1] to 857 @variables.internalPortMessageWithMsrpMessages : { internalMessage := { description := \"COMMAND_MSRP_SEND_MESSAGE\", parameters := { { parameterName := \"LISTENER_PORT\", parameterValue := \"17077\" } } }, msrpMessages := { { request := { requestStart := { transactId := \"41724VAT\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"rFhqxHwhogoX\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17077\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"77102VAT\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"*\", total := \"*\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2013-10-01T13:33:33+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: VAT_imdn_xx1xx\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>lRZfNWvU</message-id><datetime>2014-10-24T22:34:34+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\", binary_message := omit }, endLine := { transactId := \"41724VAT\", continuationFlag := \"$\" } } } }}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:35.990425", component: "857", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on msrpInternalPort from mtc @variables.internalPortMessageWithMsrpMessages : { internalMessage := { description := \"COMMAND_MSRP_SEND_MESSAGE\", parameters := { { parameterName := \"LISTENER_PORT\", parameterValue := \"17077\" } } }, msrpMessages := { { request := { requestStart := { transactId := \"41724VAT\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"rFhqxHwhogoX\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17077\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"77102VAT\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"*\", total := \"*\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2013-10-01T13:33:33+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: VAT_imdn_xx1xx\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>lRZfNWvU</message-id><datetime>2014-10-24T22:34:34+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\", binary_message := omit }, endLine := { transactId := \"41724VAT\", continuationFlag := \"$\" } } } }} id 13" }
Structured  DataFrame { time: "2014/Oct/24 18:34:35.990574", component: "857", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port msrpInternalPort succeeded, message from mtc: @variables.internalPortMessageWithMsrpMessages : { internalMessage := { description := \"COMMAND_MSRP_SEND_MESSAGE\", parameters := { { parameterName := \"LISTENER_PORT\", parameterValue := \"17077\" } } }, msrpMessages := { { request := { requestStart := { transactId := \"41724VAT\", method := \"SEND\" }, headers := { toPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.142.3\", portField := \"6060\" }, sessionId := \"rFhqxHwhogoX\", transport := \"tcp\", uriParameter := omit } }, fromPath := { { msrpScheme := \"msrp\", authority := { userinfo := omit, host := \"142.133.150.169\", portField := \"17077\" }, sessionId := \"SessionId18VAT\", transport := \"tcp\", uriParameter := omit } }, header := { messageId := \"77102VAT\", successReport := omit, failureReport := omit, byteRange := { rangeStart := 1, rangeEnd := \"*\", total := \"*\" }, status := omit, extHeader := omit } }, contentStuff := { otherMimeHeader := omit, contentType := { typeX := \"message\", subtype := \"cpim\", genParam := omit }, data := \"To: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2013-10-01T13:33:33+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: VAT_imdn_xx1xx\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>lRZfNWvU</message-id><datetime>2014-10-24T22:34:34+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\", binary_message := omit }, endLine := { transactId := \"41724VAT\", continuationFlag := \"$\" } } } }} id 13" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.990655", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Message with id 13 was extracted from the queue of msrpInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.990685", component: "857", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "85", function_name: "function:msrpRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.990871", component: "857", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "383", function_name: "function:handleClosedConnectionByRemoteSide", message: " Start timer timerCheckMsrpQueue: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:35.991033", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.193727", component: "857", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "394", function_name: "function:handleClosedConnectionByRemoteSide", message: " Timeout timerCheckMsrpQueue: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:36.194009", component: "857", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on msrpPort to system @IPL4_MSRP_demo_types.MSRP_Send : { connId := 1, proto := { tcp := { } }, msgr\\nTo-Path: msrp://142.133.142.3:6060/rFhqxHwhogoX;tcp\\r\\nFrom-Path: msrp://142.133.150.169:17077/SessionId18VAT;tcp\\r\\nMessage-ID: 77102VAT\\r\\nByte-Range: 1-*/*\\r\\nContent-Type: message/cpim\\r\\n\\r\\nTo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2013-10-01T13:33:33+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: VAT_imdn_xx1xx\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>lRZfNWvU</message-id><datetime>2014-10-24T22:34:34+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\\r\\n-------41724VAT$\\r\\n\")}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:36.194146", component: "857", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Outgoing message was mapped to @IPL4asp_Types.ASP_Send : { connId := 1, proto := { tcp := { } }, msgr\\nTo-Path: msrp://142.133.142.3:6060/rFhqxHwhogoX;tcp\\r\\nFrom-Path: msrp://142.133.150.169:17077/SessionId18VAT;tcp\\r\\nMessage-ID: 77102VAT\\r\\nByte-Range: 1-*/*\\r\\nContent-Type: message/cpim\\r\\n\\r\\nTo: <sip:anonymous@anonymous.invalid>\\r\\nFrom: <sip:anonymous@anonymous.invalid>\\r\\nDateTime: 2013-10-01T13:33:33+00:00\\r\\nNS: imdn <urn:ietf:params:imdn>\\r\\nimdn.Message-ID: VAT_imdn_xx1xx\\r\\n\\r\\nContent-Type: message/imdn+xml\\r\\nContent-Disposition: notification\\r\\nContent-Length: 304\\r\\n\\r\\n<?xml version='1.0' encoding='UTF-8'?><imdn xmlns=\\\"urn:ietf:params:xml:ns:imdn\\\"><message-id>lRZfNWvU</message-id><datetime>2014-10-24T22:34:34+00:00</datetime><recipient-uri>sip:anonymous@anonymous.invalid</recipient-uri><delivery-notification><status><delivered/></status></delivery-notification></imdn>\\r\\n-------41724VAT$\\r\\n\")}" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.194307", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "343", function_name: "function:processCommand", message: " Sent on msrpInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.194370", component: "857", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "79", function_name: "function:msrpRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.194527", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "216", function_name: "function:receiveInternalMessage", message: " Message enqueued on msrpInternalPort[1] from 857 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.194667", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Receive operation on port msrpInternalPort[1] succeeded, message from 857: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.194713", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Message with id 14 was extracted from the queue of msrpInternalPort[1]" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.194737", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "218", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.195257", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.205757", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.205883", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "168", function_name: "function:sendInternalMessage", message: " Sent on msrpInternalPort[1] to 857 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.205971", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "83", function_name: "function:msrpRun", message: " Message enqueued on msrpInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.206026", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Receive operation on port msrpInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.206053", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Message with id 14 was extracted from the queue of msrpInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.206068", component: "857", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "85", function_name: "function:msrpRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.206182", component: "857", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "383", function_name: "function:handleClosedConnectionByRemoteSide", message: " Start timer timerCheckMsrpQueue: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.206276", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:36.213728", component: "857", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on msrpPort from system @IPL4asp_Types.ASP_RecvFrom : { connId := 1, remName := \"142.133.142.3\", remPort := 6060, locName := \"142.133.150.169\", locPort := 17077, proto := { tcp := { } }, userData := 0, msg := '4D53525020343137323456415420323030204F4B0D0A546F2D506174683A206D7372703A2F2F3134322E3133332E3135302E3136393A31373037372F53657373696F6E496431385641543B7463700D0A46726F6D2D506174683A206D7372703A2F2F3134322E3133332E3134322E333A363036302F72466871784877686F676F583B7463700D0A2D2D2D2D2D2D2D3431373234564154240D0A'O (\"MSRP 41724VAT 200 OK\\r\\nTo-Path: msrp://142.133.150.169:17077/SessionId18VAT;tcp\\r\\nFrom-Path: msrp://142.133.142.3:6060/rFhqxHwhogoX;tcp\\r\\n-------41724VAT$\\r\\n\")} id 7" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.213949", component: "857", peer_component: "BaseMsrpComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "385", function_name: "function:handleClosedConnectionByRemoteSide", message: " Incoming message was mapped to @IPL4_MSRP_demo_types" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.406206", component: "857", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "394", function_name: "function:handleClosedConnectionByRemoteSide", message: " Timeout timerCheckMsrpQueue: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.406400", component: "857", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "287", function_name: "function:baseReceiveMsrpMessage", message: " Start timer timerWaitForMsrpResponse: 15 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.406486", component: "857", peer_component: "BaseMsrpComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "290", function_name: "function:baseReceiveMsrpMessage", message: " Receive operation on port msrpPort succeeded, message from system(" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.406528", component: "857", peer_component: "BaseMsrpComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "290", function_name: "function:baseReceiveMsrpMessage", message: " Message with id 7 was extracted from the queue of msrpPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.406604", component: "857", peer_component: "BaseMsrpComponent", event_type: "TIMEROP", event_description: "ttcn", port: "295", function_name: "function:baseReceiveMsrpMessage", message: " Stop timer timerWaitForMsrpResponse: 15 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.406872", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "343", function_name: "function:processCommand", message: " Sent on msrpInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.406976", component: "857", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "79", function_name: "function:msrpRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.407089", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "216", function_name: "function:receiveInternalMessage", message: " Message enqueued on msrpInternalPort[1] from 857 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.407183", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Receive operation on port msrpInternalPort[1] succeeded, message from 857: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.407214", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Message with id 15 was extracted from the queue of msrpInternalPort[1]" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.407244", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "218", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.409443", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.421766", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "267", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:36.421947", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort[4] to 855 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"14\" } } }, aspHttp := { { httpMessage := { method := \"GET\", url := \"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/channels\", body := \"\", contentType := \"\", statusCode := \"\", header := { } } } }}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:36.422135", component: "855", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort from mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"14\" } } }, aspHttp := { { httpMessage := { method := \"GET\", url := \"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/channels\", body := \"\", contentType := \"\", statusCode := \"\", header := { } } } }} id 4" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.422196", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:36.422309", component: "855", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort succeeded, message from mtc: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"14\" } } }, aspHttp := { { httpMessage := { method := \"GET\", url := \"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/channels\", body := \"\", contentType := \"\", statusCode := \"\", header := { } } } }} id 4" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.422357", component: "855", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "67", function_name: "function:httpNodeRun", message: " Message with id 4 was extracted from the queue of httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.422391", component: "855", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "68", function_name: "function:httpNodeRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.422622", component: "855", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "307", function_name: "function:clearHTTPClientPort", message: " Start timer timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.422669", component: "855", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "313", function_name: "function:clearHTTPClientPort", message: " Timeout timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.422794", component: "855", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Sent on clientPort to system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.423574", component: "855", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Message enqueued on clientPort from system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.423618", component: "855", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "243", function_name: "function:sendHTTPClientRequest", message: " Start timer timerWaitForHTTPOpenConnection: 2 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.423690", component: "855", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Receive operation on port clientPort succeeded, message from system(" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.423727", component: "855", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Message with id 7 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.423773", component: "855", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "246", function_name: "function:sendHTTPClientRequest", message: " Stop timer timerWaitForHTTPOpenConnection: 2 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:36.423850", component: "855", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on clientPort to system @HTTPmsg_Types.HTTPMessage : { request := { client_id := 12, method := \"GET\", uri := \"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/channels\", version_major := 1, version_minor := 1, header := { { header_name := \"Host\", header_value := \"142.133.142.3\" }, { header_name := \"Content-Length\", header_value := \"0\" } }, body := \"\" }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.423926", component: "855", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "189", function_name: "function:receiveAnyHTTPClientResponse", message: " Start timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:36.435158", component: "855", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on clientPort from system @HTTPmsg_Types.HTTPMessage : { response := { client_id := 12, version_major := 1, version_minor := 1, statuscode := 200, statustext := \"OK\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:36 GMT\" } }, body := \"{\\n \\\"events\\\": {\\n \\\"list\\\": [ {\\n \\\"eventObject\\\": {\\n \\\"@type\\\": \\\"MessageStatusNotification\\\",\\n \\\"chatMessageStatusNotification\\\": {\\n \\\"link\\\": [ {\\n \\\"href\\\": \\\"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/chat/v1/sip:10014002007@ericsson.se/oneToOne/sip:10014002006@ericsson.se/adhoc\\\",\\n \\\"rel\\\": \\\"ChatSessionInformation\\\"\\n }, {\\n \\\"href\\\": \\\"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/chat/v1/sip:10014002007@ericsson.se/oneToOne/sip:10014002006@ericsson.se/adhoc/messages/lRZfNWvU\\\",\\n \\\"rel\\\": \\\"ChatMessage\\\"\\n } ],\\n \\\"status\\\": \\\"Delivered\\\"\\n },\\n \\\"originalDateTime\\\": \\\"2014-10-24T22:34:34+00:00\\\",\\n \\\"dateTime\\\": \\\"2013-10-01T13:33:33+00:00\\\"\\n }\\n } ]\\n }\\n}\" }} id 8" }
Structured  DataFrame { time: "2014/Oct/24 18:34:36.435278", component: "855", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port clientPort succeeded, message from system(): @HTTPmsg_Types.HTTPMessage : { response := { client_id := 12, version_major := 1, version_minor := 1, statuscode := 200, statustext := \"OK\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:36 GMT\" } }, body := \"{\\n \\\"events\\\": {\\n \\\"list\\\": [ {\\n \\\"eventObject\\\": {\\n \\\"@type\\\": \\\"MessageStatusNotification\\\",\\n \\\"chatMessageStatusNotification\\\": {\\n \\\"link\\\": [ {\\n \\\"href\\\": \\\"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/chat/v1/sip:10014002007@ericsson.se/oneToOne/sip:10014002006@ericsson.se/adhoc\\\",\\n \\\"rel\\\": \\\"ChatSessionInformation\\\"\\n }, {\\n \\\"href\\\": \\\"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/chat/v1/sip:10014002007@ericsson.se/oneToOne/sip:10014002006@ericsson.se/adhoc/messages/lRZfNWvU\\\",\\n \\\"rel\\\": \\\"ChatMessage\\\"\\n } ],\\n \\\"status\\\": \\\"Delivered\\\"\\n },\\n \\\"originalDateTime\\\": \\\"2014-10-24T22:34:34+00:00\\\",\\n \\\"dateTime\\\": \\\"2013-10-01T13:33:33+00:00\\\"\\n }\\n } ]\\n }\\n}\" }} id 8" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.435320", component: "855", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "193", function_name: "function:receiveAnyHTTPClientResponse", message: " Message with id 8 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.435338", component: "855", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "194", function_name: "function:receiveAnyHTTPClientResponse", message: " Stop timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:36.435482", component: "855", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort to mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\n \\\"events\\\": {\\n \\\"list\\\": [ {\\n \\\"eventObject\\\": {\\n \\\"@type\\\": \\\"MessageStatusNotification\\\",\\n \\\"chatMessageStatusNotification\\\": {\\n \\\"link\\\": [ {\\n \\\"href\\\": \\\"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/chat/v1/sip:10014002007@ericsson.se/oneToOne/sip:10014002006@ericsson.se/adhoc\\\",\\n \\\"rel\\\": \\\"ChatSessionInformation\\\"\\n }, {\\n \\\"href\\\": \\\"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/chat/v1/sip:10014002007@ericsson.se/oneToOne/sip:10014002006@ericsson.se/adhoc/messages/lRZfNWvU\\\",\\n \\\"rel\\\": \\\"ChatMessage\\\"\\n } ],\\n \\\"status\\\": \\\"Delivered\\\"\\n },\\n \\\"originalDateTime\\\": \\\"2014-10-24T22:34:34+00:00\\\",\\n \\\"dateTime\\\": \\\"2013-10-01T13:33:33+00:00\\\"\\n }\\n } ]\\n }\\n}\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:36 GMT\" } } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.435552", component: "855", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "62", function_name: "function:httpNodeRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:36.435698", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort[4] from 855 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\n \\\"events\\\": {\\n \\\"list\\\": [ {\\n \\\"eventObject\\\": {\\n \\\"@type\\\": \\\"MessageStatusNotification\\\",\\n \\\"chatMessageStatusNotification\\\": {\\n \\\"link\\\": [ {\\n \\\"href\\\": \\\"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/chat/v1/sip:10014002007@ericsson.se/oneToOne/sip:10014002006@ericsson.se/adhoc\\\",\\n \\\"rel\\\": \\\"ChatSessionInformation\\\"\\n }, {\\n \\\"href\\\": \\\"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/chat/v1/sip:10014002007@ericsson.se/oneToOne/sip:10014002006@ericsson.se/adhoc/messages/lRZfNWvU\\\",\\n \\\"rel\\\": \\\"ChatMessage\\\"\\n } ],\\n \\\"status\\\": \\\"Delivered\\\"\\n },\\n \\\"originalDateTime\\\": \\\"2014-10-24T22:34:34+00:00\\\",\\n \\\"dateTime\\\": \\\"2013-10-01T13:33:33+00:00\\\"\\n }\\n } ]\\n }\\n}\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:36 GMT\" } } } } }} id 5" }
Structured  DataFrame { time: "2014/Oct/24 18:34:36.435850", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort[4] succeeded, message from 855: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\n \\\"events\\\": {\\n \\\"list\\\": [ {\\n \\\"eventObject\\\": {\\n \\\"@type\\\": \\\"MessageStatusNotification\\\",\\n \\\"chatMessageStatusNotification\\\": {\\n \\\"link\\\": [ {\\n \\\"href\\\": \\\"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/chat/v1/sip:10014002007@ericsson.se/oneToOne/sip:10014002006@ericsson.se/adhoc\\\",\\n \\\"rel\\\": \\\"ChatSessionInformation\\\"\\n }, {\\n \\\"href\\\": \\\"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/chat/v1/sip:10014002007@ericsson.se/oneToOne/sip:10014002006@ericsson.se/adhoc/messages/lRZfNWvU\\\",\\n \\\"rel\\\": \\\"ChatMessage\\\"\\n } ],\\n \\\"status\\\": \\\"Delivered\\\"\\n },\\n \\\"originalDateTime\\\": \\\"2014-10-24T22:34:34+00:00\\\",\\n \\\"dateTime\\\": \\\"2013-10-01T13:33:33+00:00\\\"\\n }\\n } ]\\n }\\n}\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Transfer-Encoding\", header_value := \"chunked\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:36 GMT\" } } } } }} id 5" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.435892", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Message with id 5 was extracted from the queue of httpNodeInternalPort[4]" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.435926", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "241", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.438014", component: "mtc", peer_component: "lib", event_type: "TIMEROP", event_description: "ttcn", port: "114", function_name: "function:sleep", message: " Start timer timerGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.589518", component: "mtc", peer_component: "lib", event_type: "TIMEROP", event_description: "ttcn", port: "115", function_name: "function:sleep", message: " Timeout timerGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.590171", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.601805", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "267", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:36.602301", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort[1] to 852 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"PARAM_PORT_OVERRIDE\", parameterValue := \"8888\" } } }, aspHttp := { { httpMessage := { method := \"POST\", url := \"/jolokia/\", body := \"[ { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,successfulTerminating=successfulTerminating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,successfulOriginating=successfulOriginating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulOriginating=unsuccessfulOriginating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulTerminating=unsuccessfulTerminating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,textMessages=textMessages-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,mediaMessages=mediaMessages-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,MSRPSession=MSRPSession-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=GAUGE,format=INTEGER,MSRPCurrentlyActive=MSRPCurrentlyActive1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } ] \", contentType := \"application/json\", statusCode := \"\", header := omit } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.602668", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:36.602788", component: "852", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort from mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"PARAM_PORT_OVERRIDE\", parameterValue := \"8888\" } } }, aspHttp := { { httpMessage := { method := \"POST\", url := \"/jolokia/\", body := \"[ { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,successfulTerminating=successfulTerminating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,successfulOriginating=successfulOriginating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulOriginating=unsuccessfulOriginating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulTerminating=unsuccessfulTerminating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,textMessages=textMessages-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,mediaMessages=mediaMessages-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,MSRPSession=MSRPSession-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=GAUGE,format=INTEGER,MSRPCurrentlyActive=MSRPCurrentlyActive1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } ] \", contentType := \"application/json\", statusCode := \"\", header := omit } } }} id 4" }
Structured  DataFrame { time: "2014/Oct/24 18:34:36.603135", component: "852", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort succeeded, message from mtc: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"PARAM_PORT_OVERRIDE\", parameterValue := \"8888\" } } }, aspHttp := { { httpMessage := { method := \"POST\", url := \"/jolokia/\", body := \"[ { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,successfulTerminating=successfulTerminating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,successfulOriginating=successfulOriginating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulOriginating=unsuccessfulOriginating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulTerminating=unsuccessfulTerminating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,textMessages=textMessages-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,mediaMessages=mediaMessages-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,MSRPSession=MSRPSession-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=GAUGE,format=INTEGER,MSRPCurrentlyActive=MSRPCurrentlyActive1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } ] \", contentType := \"application/json\", statusCode := \"\", header := omit } } }} id 4" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.603207", component: "852", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "67", function_name: "function:httpNodeRun", message: " Message with id 4 was extracted from the queue of httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.603231", component: "852", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "68", function_name: "function:httpNodeRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.603410", component: "852", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "307", function_name: "function:clearHTTPClientPort", message: " Start timer timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.603456", component: "852", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "313", function_name: "function:clearHTTPClientPort", message: " Timeout timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.603560", component: "852", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Sent on clientPort to system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.604543", component: "852", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Message enqueued on clientPort from system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.604590", component: "852", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "243", function_name: "function:sendHTTPClientRequest", message: " Start timer timerWaitForHTTPOpenConnection: 2 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.604643", component: "852", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Receive operation on port clientPort succeeded, message from system(" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.604686", component: "852", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Message with id 7 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.604712", component: "852", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "246", function_name: "function:sendHTTPClientRequest", message: " Stop timer timerWaitForHTTPOpenConnection: 2 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:36.604953", component: "852", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on clientPort to system @HTTPmsg_Types.HTTPMessage : { request := { client_id := 12, method := \"POST\", uri := \"/jolokia/\", version_major := 1, version_minor := 1, header := { { header_name := \"Host\", header_value := \"142.133.142.3\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Content-Length\", header_value := \"1971\" } }, body := \"[ { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,successfulTerminating=successfulTerminating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,successfulOriginating=successfulOriginating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulOriginating=unsuccessfulOriginating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulTerminating=unsuccessfulTerminating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,textMessages=textMessages-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,mediaMessages=mediaMessages-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,MSRPSession=MSRPSession-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=GAUGE,format=INTEGER,MSRPCurrentlyActive=MSRPCurrentlyActive1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } ] \" }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.605097", component: "852", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "189", function_name: "function:receiveAnyHTTPClientResponse", message: " Start timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:36.613072", component: "852", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on clientPort from system @HTTPmsg_Types.HTTPMessage : { response := { client_id := 12, version_major := 1, version_minor := 1, statuscode := 200, statustext := \"OK\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache\" }, { header_name := \"Pragma\", header_value := \"no-cache\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:36 GMT\" }, { header_name := \"Expires\", header_value := \"Fri, 24 Oct 2014 21:34:36 GMT\" }, { header_name := \"Content-Type\", header_value := \"text/plain;charset=utf-8\" }, { header_name := \"Content-Length\", header_value := \"1762\" } }, body := \"[{\\\"timestamp\\\":1414190076,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,successfulTerminating=successfulTerminating-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":4},{\\\"timestamp\\\":1414190076,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,successfulOriginating=successfulOriginating-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":4},{\\\"timestamp\\\":1414190076,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulOriginating=unsuccessfulOriginating-1\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":1},{\\\"timestamp\\\":1414190076,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulTerminating=unsuccessfulTerminating-1\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":1},{\\\"timestamp\\\":1414190076,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,textMessages=textMessages-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":8},{\\\"timestamp\\\":1414190076,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,mediaMessages=mediaMessages-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190076,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,MSRPSession=MSRPSession-1,interface=WcgChatCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":2},{\\\"timestamp\\\":1414190076,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,MSRPCurrentlyActive=MSRPCurrentlyActive1,format=INTEGER,interface=WcgGlobalCounterGroup,type=GAUGE\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":2}]\" }} id 8" }
Structured  DataFrame { time: "2014/Oct/24 18:34:36.613437", component: "852", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port clientPort succeeded, message from system(): @HTTPmsg_Types.HTTPMessage : { response := { client_id := 12, version_major := 1, version_minor := 1, statuscode := 200, statustext := \"OK\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache\" }, { header_name := \"Pragma\", header_value := \"no-cache\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:36 GMT\" }, { header_name := \"Expires\", header_value := \"Fri, 24 Oct 2014 21:34:36 GMT\" }, { header_name := \"Content-Type\", header_value := \"text/plain;charset=utf-8\" }, { header_name := \"Content-Length\", header_value := \"1762\" } }, body := \"[{\\\"timestamp\\\":1414190076,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,successfulTerminating=successfulTerminating-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":4},{\\\"timestamp\\\":1414190076,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,successfulOriginating=successfulOriginating-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":4},{\\\"timestamp\\\":1414190076,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulOriginating=unsuccessfulOriginating-1\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":1},{\\\"timestamp\\\":1414190076,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulTerminating=unsuccessfulTerminating-1\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":1},{\\\"timestamp\\\":1414190076,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,textMessages=textMessages-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":8},{\\\"timestamp\\\":1414190076,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,mediaMessages=mediaMessages-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190076,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,MSRPSession=MSRPSession-1,interface=WcgChatCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":2},{\\\"timestamp\\\":1414190076,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,MSRPCurrentlyActive=MSRPCurrentlyActive1,format=INTEGER,interface=WcgGlobalCounterGroup,type=GAUGE\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":2}]\" }} id 8" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.613563", component: "852", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "193", function_name: "function:receiveAnyHTTPClientResponse", message: " Message with id 8 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.613609", component: "852", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "194", function_name: "function:receiveAnyHTTPClientResponse", message: " Stop timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:36.614853", component: "852", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort to mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"[{\\\"timestamp\\\":1414190076,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,successfulTerminating=successfulTerminating-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":4},{\\\"timestamp\\\":1414190076,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,successfulOriginating=successfulOriginating-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":4},{\\\"timestamp\\\":1414190076,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulOriginating=unsuccessfulOriginating-1\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":1},{\\\"timestamp\\\":1414190076,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulTerminating=unsuccessfulTerminating-1\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":1},{\\\"timestamp\\\":1414190076,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,textMessages=textMessages-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":8},{\\\"timestamp\\\":1414190076,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,mediaMessages=mediaMessages-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190076,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,MSRPSession=MSRPSession-1,interface=WcgChatCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":2},{\\\"timestamp\\\":1414190076,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,MSRPCurrentlyActive=MSRPCurrentlyActive1,format=INTEGER,interface=WcgGlobalCounterGroup,type=GAUGE\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":2}]\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache\" }, { header_name := \"Pragma\", header_value := \"no-cache\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:36 GMT\" }, { header_name := \"Expires\", header_value := \"Fri, 24 Oct 2014 21:34:36 GMT\" }, { header_name := \"Content-Type\", header_value := \"text/plain;charset=utf-8\" }, { header_name := \"Content-Length\", header_value := \"1762\" } } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.615011", component: "852", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "62", function_name: "function:httpNodeRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:36.615254", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort[1] from 852 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"[{\\\"timestamp\\\":1414190076,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,successfulTerminating=successfulTerminating-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":4},{\\\"timestamp\\\":1414190076,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,successfulOriginating=successfulOriginating-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":4},{\\\"timestamp\\\":1414190076,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulOriginating=unsuccessfulOriginating-1\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":1},{\\\"timestamp\\\":1414190076,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulTerminating=unsuccessfulTerminating-1\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":1},{\\\"timestamp\\\":1414190076,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,textMessages=textMessages-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":8},{\\\"timestamp\\\":1414190076,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,mediaMessages=mediaMessages-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190076,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,MSRPSession=MSRPSession-1,interface=WcgChatCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":2},{\\\"timestamp\\\":1414190076,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,MSRPCurrentlyActive=MSRPCurrentlyActive1,format=INTEGER,interface=WcgGlobalCounterGroup,type=GAUGE\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":2}]\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache\" }, { header_name := \"Pragma\", header_value := \"no-cache\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:36 GMT\" }, { header_name := \"Expires\", header_value := \"Fri, 24 Oct 2014 21:34:36 GMT\" }, { header_name := \"Content-Type\", header_value := \"text/plain;charset=utf-8\" }, { header_name := \"Content-Length\", header_value := \"1762\" } } } } }} id 5" }
Structured  DataFrame { time: "2014/Oct/24 18:34:36.615517", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort[1] succeeded, message from 852: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"[{\\\"timestamp\\\":1414190076,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,successfulTerminating=successfulTerminating-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":4},{\\\"timestamp\\\":1414190076,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,successfulOriginating=successfulOriginating-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":4},{\\\"timestamp\\\":1414190076,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulOriginating=unsuccessfulOriginating-1\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":1},{\\\"timestamp\\\":1414190076,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulTerminating=unsuccessfulTerminating-1\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":1},{\\\"timestamp\\\":1414190076,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,textMessages=textMessages-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":8},{\\\"timestamp\\\":1414190076,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,mediaMessages=mediaMessages-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190076,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,MSRPSession=MSRPSession-1,interface=WcgChatCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":2},{\\\"timestamp\\\":1414190076,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,MSRPCurrentlyActive=MSRPCurrentlyActive1,format=INTEGER,interface=WcgGlobalCounterGroup,type=GAUGE\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":2}]\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache\" }, { header_name := \"Pragma\", header_value := \"no-cache\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:36 GMT\" }, { header_name := \"Expires\", header_value := \"Fri, 24 Oct 2014 21:34:36 GMT\" }, { header_name := \"Content-Type\", header_value := \"text/plain;charset=utf-8\" }, { header_name := \"Content-Length\", header_value := \"1762\" } } } } }} id 5" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.615615", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Message with id 5 was extracted from the queue of httpNodeInternalPort[1]" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.615651", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "241", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.619224", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.629519", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "267", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:36.629862", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort[5] to 856 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"16\" } } }, aspHttp := { { httpMessage := { method := \"GET\", url := \"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/channels\", body := \"\", contentType := \"\", statusCode := \"\", header := { } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.630115", component: "mtc", peer_component: "lib", event_type: "TIMEROP", event_description: "ttcn", port: "114", function_name: "function:sleep", message: " Start timer timerGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:36.630379", component: "856", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort from mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"16\" } } }, aspHttp := { { httpMessage := { method := \"GET\", url := \"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/channels\", body := \"\", contentType := \"\", statusCode := \"\", header := { } } } }} id 5" }
Structured  DataFrame { time: "2014/Oct/24 18:34:36.630477", component: "856", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort succeeded, message from mtc: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"16\" } } }, aspHttp := { { httpMessage := { method := \"GET\", url := \"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/channels\", body := \"\", contentType := \"\", statusCode := \"\", header := { } } } }} id 5" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.630510", component: "856", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "67", function_name: "function:httpNodeRun", message: " Message with id 5 was extracted from the queue of httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.630531", component: "856", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "68", function_name: "function:httpNodeRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.630825", component: "856", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "307", function_name: "function:clearHTTPClientPort", message: " Start timer timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.630853", component: "856", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "313", function_name: "function:clearHTTPClientPort", message: " Timeout timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.630919", component: "856", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Sent on clientPort to system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.631695", component: "856", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Message enqueued on clientPort from system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.631750", component: "856", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "243", function_name: "function:sendHTTPClientRequest", message: " Start timer timerWaitForHTTPOpenConnection: 2 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.631797", component: "856", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Receive operation on port clientPort succeeded, message from system(" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.631827", component: "856", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Message with id 9 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.631847", component: "856", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "246", function_name: "function:sendHTTPClientRequest", message: " Stop timer timerWaitForHTTPOpenConnection: 2 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:36.631899", component: "856", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on clientPort to system @HTTPmsg_Types.HTTPMessage : { request := { client_id := 13, method := \"GET\", uri := \"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/channels\", version_major := 1, version_minor := 1, header := { { header_name := \"Host\", header_value := \"142.133.142.3\" }, { header_name := \"Content-Length\", header_value := \"0\" } }, body := \"\" }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:36.631969", component: "856", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "189", function_name: "function:receiveAnyHTTPClientResponse", message: " Start timer timerWaitForHTTPResponse: 60 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.130142", component: "mtc", peer_component: "lib", event_type: "TIMEROP", event_description: "ttcn", port: "115", function_name: "function:sleep", message: " Timeout timerGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.130467", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.141590", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "267", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.141866", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort[2] to 853 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"16\" } } }, aspHttp := { { httpMessage := { method := \"DELETE\", url := \"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/register\", body := \"\", contentType := \"\", statusCode := \"\", header := { } } } }}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.142047", component: "853", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort from mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"16\" } } }, aspHttp := { { httpMessage := { method := \"DELETE\", url := \"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/register\", body := \"\", contentType := \"\", statusCode := \"\", header := { } } } }} id 4" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.142133", component: "853", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort succeeded, message from mtc: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"16\" } } }, aspHttp := { { httpMessage := { method := \"DELETE\", url := \"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/register\", body := \"\", contentType := \"\", statusCode := \"\", header := { } } } }} id 4" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.142158", component: "853", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "67", function_name: "function:httpNodeRun", message: " Message with id 4 was extracted from the queue of httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.142190", component: "853", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "68", function_name: "function:httpNodeRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.142309", component: "853", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "307", function_name: "function:clearHTTPClientPort", message: " Start timer timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.142327", component: "853", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "313", function_name: "function:clearHTTPClientPort", message: " Timeout timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.142376", component: "853", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Sent on clientPort to system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.142505", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.143203", component: "853", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Message enqueued on clientPort from system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.143234", component: "853", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "243", function_name: "function:sendHTTPClientRequest", message: " Start timer timerWaitForHTTPOpenConnection: 2 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.143269", component: "853", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Receive operation on port clientPort succeeded, message from system(" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.143294", component: "853", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Message with id 7 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.143322", component: "853", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "246", function_name: "function:sendHTTPClientRequest", message: " Stop timer timerWaitForHTTPOpenConnection: 2 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.143394", component: "853", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on clientPort to system @HTTPmsg_Types.HTTPMessage : { request := { client_id := 12, method := \"DELETE\", uri := \"/14A/v3/session/8cf72980-08e3-4819-943d-f7260f67318d/register\", version_major := 1, version_minor := 1, header := { { header_name := \"Host\", header_value := \"142.133.142.3\" }, { header_name := \"Content-Length\", header_value := \"0\" } }, body := \"\" }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.143486", component: "853", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "189", function_name: "function:receiveAnyHTTPClientResponse", message: " Start timer timerWaitForHTTPResponse: 60 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.153494", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "286", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.153597", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "202", function_name: "function:sendInternalMessage", message: " Sent on sipInternalPort[0] to 849 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.153726", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "78", function_name: "function:sipRun", message: " Message enqueued on sipInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.153843", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Receive operation on port sipInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.153852", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.153904", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Message with id 23 was extracted from the queue of sipInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.153962", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "80", function_name: "function:sipRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.154064", component: "849", peer_component: "BaseSipClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "320", function_name: "function:generalReceiveSip", message: " Start timer timerWaitForSipMessage: 15 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.155349", component: "853", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on clientPort from system @HTTPmsg_Types.HTTPMessage : { response := { client_id := 12, version_major := 1, version_minor := 1, statuscode := 204, statustext := \"No Content\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:36 GMT\" } }, body := \"\" }} id 8" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.155428", component: "853", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port clientPort succeeded, message from system(): @HTTPmsg_Types.HTTPMessage : { response := { client_id := 12, version_major := 1, version_minor := 1, statuscode := 204, statustext := \"No Content\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:36 GMT\" } }, body := \"\" }} id 8" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.155453", component: "853", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "193", function_name: "function:receiveAnyHTTPClientResponse", message: " Message with id 8 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.155489", component: "853", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "194", function_name: "function:receiveAnyHTTPClientResponse", message: " Stop timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.155561", component: "853", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort to mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"\", contentType := \"\", statusCode := \"204\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:36 GMT\" } } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.155616", component: "853", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "62", function_name: "function:httpNodeRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.155687", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort[2] from 853 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"\", contentType := \"\", statusCode := \"204\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:36 GMT\" } } } } }} id 5" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.184379", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on sipClientPort from system @IPL4asp_Types.ASP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msgsip:10014002007@142.133.150.169:26720;csid=2838ab5a-e194-4923-81af-c9f0a544f667;transport=TCP;fid=wcg-ft3_1 SIP/2.0\\r\\nAccept-Contact: *;+g.oma.sip-im\\r\\nContribution-Id: CHAT:10014002007@ericsson.se\\r\\nMax-Forwards: 69\\r\\nContent-Length: 0\\r\\nTo: <sip:10014002007@ericsson.se>;tag=to_80618\\r\\nContact: <sip:10014002006@142.133.142.3:5060;csid=8cf72980-08e3-4819-943d-f7260f67318d;transport=TCP;fid=wcg-ft3_1>;+g.oma.sip-im;+g.gsma.rcs.ipcall;+g.3gpp.icsi-ref=\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\";+g.3gpp.cs-voice;+g.3gpp.iari-ref=\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\";video\\r\\nCseq: 2 BYE\\r\\nVia: SIP/2.0/TCP 142.133.142.3:5060;branch=z9hG4bKf1f914d6fd6e47db4a57954c7d5d41839118\\r\\nUser-Agent: H2S\\r\\nFrom: <sip:10014002006@ericsson.se>;tag=i1o4954c-7\\r\\nCall-Id: 142.133.142.3_6_1805558430567465450\\r\\n\\r\\n\")} id 13" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.184903", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Incoming message was mapped to @IPL4_demo_types.SIP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msg := { request := { requestLine := { method := BYE_E (1), requestUri := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" }, { id := \"fid\", paramValue := \"wcg-ft3_1\" } }, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := { fieldName := ACCEPT_CONTACT_E (1), ac_values := { { { id := \"+g.oma.sip-im\", paramValue := omit } } } }, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_6_1805558430567465450\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"8cf72980-08e3-4819-943d-f7260f67318d\" }, { id := \"transport\", paramValue := \"TCP\" }, { id := \"fid\", paramValue := \"wcg-ft3_1\" } }, headers := omit } } }, contactParams := { { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 2, method := \"BYE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o4954c-7\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"to_80618\" } } }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f914d6fd6e47db4a57954c7d5d41839118\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := { { headerName := \"Contribution-Id\", headerValue := \"CHAT:10014002007@ericsson.se\" } }, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } }} id 13" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.185158", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port sipClientPort succeeded, message from system(): @IPL4_demo_types.SIP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msg := { request := { requestLine := { method := BYE_E (1), requestUri := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" }, { id := \"fid\", paramValue := \"wcg-ft3_1\" } }, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := { fieldName := ACCEPT_CONTACT_E (1), ac_values := { { { id := \"+g.oma.sip-im\", paramValue := omit } } } }, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_6_1805558430567465450\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"8cf72980-08e3-4819-943d-f7260f67318d\" }, { id := \"transport\", paramValue := \"TCP\" }, { id := \"fid\", paramValue := \"wcg-ft3_1\" } }, headers := omit } } }, contactParams := { { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 2, method := \"BYE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o4954c-7\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"to_80618\" } } }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f914d6fd6e47db4a57954c7d5d41839118\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := { { headerName := \"Contribution-Id\", headerValue := \"CHAT:10014002007@ericsson.se\" } }, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } }} id 13" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.185237", component: "849", peer_component: "BaseSipClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "345", function_name: "function:generalReceiveSip", message: " Message with id 13 was extracted from the queue of sipClientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.185267", component: "849", peer_component: "BaseSipClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "346", function_name: "function:generalReceiveSip", message: " Stop timer timerWaitForSipMessage: 15 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.187706", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on sipInternalPort to mtc @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspRequest := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, request := { requestLine := { method := BYE_E (1), requestUri := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" }, { id := \"fid\", paramValue := \"wcg-ft3_1\" } }, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := { fieldName := ACCEPT_CONTACT_E (1), ac_values := { { { id := \"+g.oma.sip-im\", paramValue := omit } } } }, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_6_1805558430567465450\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"8cf72980-08e3-4819-943d-f7260f67318d\" }, { id := \"transport\", paramValue := \"TCP\" }, { id := \"fid\", paramValue := \"wcg-ft3_1\" } }, headers := omit } } }, contactParams := { { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 2, method := \"BYE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o4954c-7\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"to_80618\" } } }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f914d6fd6e47db4a57954c7d5d41839118\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := { { headerName := \"Contribution-Id\", headerValue := \"CHAT:10014002007@ericsson.se\" } }, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := { fieldName := CONTRIBUTION_ID_E (117), name_value := \"CHAT:10014002007@ericsson.se\" }, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.187916", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "74", function_name: "function:sipRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.188114", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on sipInternalPort[0] from 849 @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspRequest := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, request := { requestLine := { method := BYE_E (1), requestUri := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" }, { id := \"fid\", paramValue := \"wcg-ft3_1\" } }, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := { fieldName := ACCEPT_CONTACT_E (1), ac_values := { { { id := \"+g.oma.sip-im\", paramValue := omit } } } }, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_6_1805558430567465450\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"8cf72980-08e3-4819-943d-f7260f67318d\" }, { id := \"transport\", paramValue := \"TCP\" }, { id := \"fid\", paramValue := \"wcg-ft3_1\" } }, headers := omit } } }, contactParams := { { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 2, method := \"BYE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o4954c-7\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"to_80618\" } } }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f914d6fd6e47db4a57954c7d5d41839118\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := { { headerName := \"Contribution-Id\", headerValue := \"CHAT:10014002007@ericsson.se\" } }, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := { fieldName := CONTRIBUTION_ID_E (117), name_value := \"CHAT:10014002007@ericsson.se\" }, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 24" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.188332", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port sipInternalPort[0] succeeded, message from 849: @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspRequest := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, request := { requestLine := { method := BYE_E (1), requestUri := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" }, { id := \"fid\", paramValue := \"wcg-ft3_1\" } }, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := { fieldName := ACCEPT_CONTACT_E (1), ac_values := { { { id := \"+g.oma.sip-im\", paramValue := omit } } } }, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_6_1805558430567465450\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"8cf72980-08e3-4819-943d-f7260f67318d\" }, { id := \"transport\", paramValue := \"TCP\" }, { id := \"fid\", paramValue := \"wcg-ft3_1\" } }, headers := omit } } }, contactParams := { { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 2, method := \"BYE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o4954c-7\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"to_80618\" } } }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f914d6fd6e47db4a57954c7d5d41839118\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := { { headerName := \"Contribution-Id\", headerValue := \"CHAT:10014002007@ericsson.se\" } }, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := { fieldName := CONTRIBUTION_ID_E (117), name_value := \"CHAT:10014002007@ericsson.se\" }, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 24" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.188453", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Message with id 24 was extracted from the queue of sipInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.188489", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "255", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.190801", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.201741", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "286", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.202319", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on sipInternalPort[0] to 849 @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMMAND_SIP_SEND_SIP_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"16\" }, { parameterName := \"SUBSCRIBER\", parameterValue := \"11\" } } }, aspsSip := { { aspRequest := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, request := { requestLine := { method := BYE_E (1), requestUri := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" }, { id := \"fid\", paramValue := \"wcg-ft3_1\" } }, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := { fieldName := ACCEPT_CONTACT_E (1), ac_values := { { { id := \"+g.oma.sip-im\", paramValue := omit } } } }, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"VAT_callId_79564\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"8cf72980-08e3-4819-943d-f7260f67318d\" }, { id := \"transport\", paramValue := \"TCP\" }, { id := \"fid\", paramValue := \"wcg-ft3_1\" } }, headers := omit } } }, contactParams := { { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 2, method := \"BYE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"from_50592\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"i1o495cq-8\" } } }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"via_13102\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := { { headerName := \"Contribution-Id\", headerValue := \"CHAT:10014002007@ericsson.se\" } }, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := { fieldName := CONTRIBUTION_ID_E (117), name_value := \"CHAT:10014002007@ericsson.se\" }, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.202611", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.202919", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on sipInternalPort from mtc @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMMAND_SIP_SEND_SIP_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"16\" }, { parameterName := \"SUBSCRIBER\", parameterValue := \"11\" } } }, aspsSip := { { aspRequest := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, request := { requestLine := { method := BYE_E (1), requestUri := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" }, { id := \"fid\", paramValue := \"wcg-ft3_1\" } }, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := { fieldName := ACCEPT_CONTACT_E (1), ac_values := { { { id := \"+g.oma.sip-im\", paramValue := omit } } } }, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"VAT_callId_79564\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"8cf72980-08e3-4819-943d-f7260f67318d\" }, { id := \"transport\", paramValue := \"TCP\" }, { id := \"fid\", paramValue := \"wcg-ft3_1\" } }, headers := omit } } }, contactParams := { { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 2, method := \"BYE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"from_50592\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"i1o495cq-8\" } } }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"via_13102\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := { { headerName := \"Contribution-Id\", headerValue := \"CHAT:10014002007@ericsson.se\" } }, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := { fieldName := CONTRIBUTION_ID_E (117), name_value := \"CHAT:10014002007@ericsson.se\" }, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 24" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.203129", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port sipInternalPort succeeded, message from mtc: @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMMAND_SIP_SEND_SIP_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"16\" }, { parameterName := \"SUBSCRIBER\", parameterValue := \"11\" } } }, aspsSip := { { aspRequest := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, request := { requestLine := { method := BYE_E (1), requestUri := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" }, { id := \"fid\", paramValue := \"wcg-ft3_1\" } }, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := { fieldName := ACCEPT_CONTACT_E (1), ac_values := { { { id := \"+g.oma.sip-im\", paramValue := omit } } } }, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"VAT_callId_79564\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"8cf72980-08e3-4819-943d-f7260f67318d\" }, { id := \"transport\", paramValue := \"TCP\" }, { id := \"fid\", paramValue := \"wcg-ft3_1\" } }, headers := omit } } }, contactParams := { { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 2, method := \"BYE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"from_50592\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"i1o495cq-8\" } } }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"via_13102\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := { { headerName := \"Contribution-Id\", headerValue := \"CHAT:10014002007@ericsson.se\" } }, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := { fieldName := CONTRIBUTION_ID_E (117), name_value := \"CHAT:10014002007@ericsson.se\" }, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 24" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.203209", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Message with id 24 was extracted from the queue of sipInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.203240", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "80", function_name: "function:sipRun", message: " Stop timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.203808", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on sipClientPort to system @IPL4_demo_types.SIP_SendTo : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, proto := { tcp := { } }, msg := { raw := \"BYE sip:10014002007@142.133.150.169:26720;csid=2838ab5a-e194-4923-81af-c9f0a544f667;transport=TCP;fid=wcg-ft3_1 SIP/2.0\\r\\nAccept-Contact:*;+g.oma.sip-im\\r\\nCall-ID:VAT_callId_79564\\r\\nContact:<sip:10014002006@142.133.150.169:26720;csid=8cf72980-08e3-4819-943d-f7260f67318d;transport=TCP;fid=wcg-ft3_1>;+g.oma.sip-im;+g.gsma.rcs.ipcall;+g.3gpp.icsi-ref=\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\";+g.3gpp.cs-voice;+g.3gpp.iari-ref=\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\";video\\r\\nContent-Length:0\\r\\nCSeq:2 BYE\\r\\nFrom:<sip:10014002006@ericsson.se>;tag=from_50592\\r\\nMax-Forwards:69\\r\\nContribution-Id:CHAT:10014002007@ericsson.se\\r\\nTo:<sip:10014002007@ericsson.se>;tag=i1o495cq-8\\r\\nUser-Agent: H2S\\r\\nVia:SIP/2.0/TCP 142.133.142.3:5060;branch=via_13102\\r\\nContribution-Id:CHAT:10014002007@ericsson.se\\r\\n\\r\\n\" }}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.203924", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Outgoing message was mapped to @IPL4asp_Types.ASP_SendTo : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, proto := { tcp := { } }, msgsip:10014002007@142.133.150.169:26720;csid=2838ab5a-e194-4923-81af-c9f0a544f667;transport=TCP;fid=wcg-ft3_1 SIP/2.0\\r\\nAccept-Contact:*;+g.oma.sip-im\\r\\nCall-ID:VAT_callId_79564\\r\\nContact:<sip:10014002006@142.133.150.169:26720;csid=8cf72980-08e3-4819-943d-f7260f67318d;transport=TCP;fid=wcg-ft3_1>;+g.oma.sip-im;+g.gsma.rcs.ipcall;+g.3gpp.icsi-ref=\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\";+g.3gpp.cs-voice;+g.3gpp.iari-ref=\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\";video\\r\\nContent-Length:0\\r\\nCSeq:2 BYE\\r\\nFrom:<sip:10014002006@ericsson.se>;tag=from_50592\\r\\nMax-Forwards:69\\r\\nContribution-Id:CHAT:10014002007@ericsson.se\\r\\nTo:<sip:10014002007@ericsson.se>;tag=i1o495cq-8\\r\\nUser-Agent: H2S\\r\\nVia:SIP/2.0/TCP 142.133.142.3:5060;branch=via_13102\\r\\nContribution-Id:CHAT:10014002007@ericsson.se\\r\\n\\r\\n\")}" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.204090", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "388", function_name: "function:processCommand", message: " Sent on sipInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.204165", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "74", function_name: "function:sipRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.204289", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "253", function_name: "function:receiveInternalMessage", message: " Message enqueued on sipInternalPort[0] from 849 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.204363", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Receive operation on port sipInternalPort[0] succeeded, message from 849: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.204399", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Message with id 25 was extracted from the queue of sipInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.204427", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "255", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.204989", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.217905", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "286", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.218041", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "202", function_name: "function:sendInternalMessage", message: " Sent on sipInternalPort[0] to 849 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.218230", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.218376", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "78", function_name: "function:sipRun", message: " Message enqueued on sipInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.218493", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Receive operation on port sipInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.218531", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Message with id 25 was extracted from the queue of sipInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.218558", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "80", function_name: "function:sipRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.218803", component: "849", peer_component: "BaseSipClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "320", function_name: "function:generalReceiveSip", message: " Start timer timerWaitForSipMessage: 15 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.238968", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on sipClientPort from system @IPL4asp_Types.ASP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msgr\\nContent-Length: 0\\r\\nTo: <sip:10014002007@ericsson.se>;tag=i1o495cq-8\\r\\nCseq: 2 BYE\\r\\nVia: SIP/2.0/TCP 142.133.142.3:5060;branch=via_13102;received=142.133.150.169\\r\\nFrom: <sip:10014002006@ericsson.se>;tag=from_50592\\r\\nCall-Id: VAT_callId_79564\\r\\nServer: H2S\\r\\n\\r\\n\")} id 14" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.239695", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Incoming message was mapped to @IPL4_demo_types.SIP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msg := { response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 200, reasonPhrase := \"OK\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"VAT_callId_79564\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 2, method := \"BYE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"from_50592\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := { fieldName := SERVER_E (90), serverBody := { \"H2S\" } }, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"i1o495cq-8\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"via_13102\" }, { id := \"received\", paramValue := \"142.133.150.169\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } }} id 14" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.239956", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port sipClientPort succeeded, message from system(): @IPL4_demo_types.SIP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msg := { response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 200, reasonPhrase := \"OK\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"VAT_callId_79564\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 2, method := \"BYE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"from_50592\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := { fieldName := SERVER_E (90), serverBody := { \"H2S\" } }, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"i1o495cq-8\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"via_13102\" }, { id := \"received\", paramValue := \"142.133.150.169\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } }} id 14" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.240102", component: "849", peer_component: "BaseSipClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "325", function_name: "function:generalReceiveSip", message: " Message with id 14 was extracted from the queue of sipClientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.240143", component: "849", peer_component: "BaseSipClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "326", function_name: "function:generalReceiveSip", message: " Stop timer timerWaitForSipMessage: 15 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.240874", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on sipInternalPort to mtc @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspResponse := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 200, reasonPhrase := \"OK\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"VAT_callId_79564\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 2, method := \"BYE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"from_50592\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := { fieldName := SERVER_E (90), serverBody := { \"H2S\" } }, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"i1o495cq-8\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"via_13102\" }, { id := \"received\", paramValue := \"142.133.150.169\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.241042", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "74", function_name: "function:sipRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.241165", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on sipInternalPort[0] from 849 @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspResponse := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 200, reasonPhrase := \"OK\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"VAT_callId_79564\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 2, method := \"BYE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"from_50592\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := { fieldName := SERVER_E (90), serverBody := { \"H2S\" } }, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"i1o495cq-8\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"via_13102\" }, { id := \"received\", paramValue := \"142.133.150.169\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 26" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.241395", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port sipInternalPort[0] succeeded, message from 849: @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspResponse := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 200, reasonPhrase := \"OK\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"VAT_callId_79564\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 2, method := \"BYE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"from_50592\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := { fieldName := SERVER_E (90), serverBody := { \"H2S\" } }, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"i1o495cq-8\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"via_13102\" }, { id := \"received\", paramValue := \"142.133.150.169\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 26" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.241500", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Message with id 26 was extracted from the queue of sipInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.241541", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "255", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.244131", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.246887", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "83", function_name: "function:msrpRun", message: " Message enqueued on msrpPort from system @Socket_API_Definitions" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.254184", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "286", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.254731", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on sipInternalPort[0] to 849 @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMMAND_SIP_SEND_SIP_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"16\" }, { parameterName := \"SUBSCRIBER\", parameterValue := \"11\" } } }, aspsSip := { { aspResponse := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 200, reasonPhrase := \"OK\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_6_1805558430567465450\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 2, method := \"BYE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o4954c-7\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := { fieldName := SERVER_E (90), serverBody := { \"H2S\" } }, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"to_80618\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f914d6fd6e47db4a57954c7d5d41839118\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.254996", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.255042", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on sipInternalPort from mtc @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMMAND_SIP_SEND_SIP_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"16\" }, { parameterName := \"SUBSCRIBER\", parameterValue := \"11\" } } }, aspsSip := { { aspResponse := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 200, reasonPhrase := \"OK\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_6_1805558430567465450\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 2, method := \"BYE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o4954c-7\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := { fieldName := SERVER_E (90), serverBody := { \"H2S\" } }, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"to_80618\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f914d6fd6e47db4a57954c7d5d41839118\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 26" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.255183", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port sipInternalPort succeeded, message from mtc: @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMMAND_SIP_SEND_SIP_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"16\" }, { parameterName := \"SUBSCRIBER\", parameterValue := \"11\" } } }, aspsSip := { { aspResponse := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 200, reasonPhrase := \"OK\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_6_1805558430567465450\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 2, method := \"BYE\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o4954c-7\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := { fieldName := SERVER_E (90), serverBody := { \"H2S\" } }, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"to_80618\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f914d6fd6e47db4a57954c7d5d41839118\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 26" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.255250", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Message with id 26 was extracted from the queue of sipInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.255289", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "80", function_name: "function:sipRun", message: " Stop timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.255742", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on sipClientPort to system @IPL4_demo_types.SIP_SendTo : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, proto := { tcp := { } }, msg := { raw := \"SIP/2.0 200 OK\\r\\nCall-ID:142.133.142.3_6_1805558430567465450\\r\\nContent-Length:0\\r\\nCSeq:2 BYE\\r\\nFrom:<sip:10014002006@ericsson.se>;tag=i1o4954c-7\\r\\nServer: H2S\\r\\nTo:<sip:10014002007@ericsson.se>;tag=to_80618\\r\\nVia:SIP/2.0/TCP 142.133.142.3:5060;branch=z9hG4bKf1f914d6fd6e47db4a57954c7d5d41839118\\r\\n\\r\\n\" }}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.255814", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Outgoing message was mapped to @IPL4asp_Types.ASP_SendTo : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, proto := { tcp := { } }, msg := '5349502F322E3020323030204F4B0D0A43616C6C2D49443A3134322E3133332E3134322E335F365F313830353535383433303536373436353435300D0A436F6E74656E742D4C656E6774683A300D0A435365713A32204259450D0A46726F6D3A3C7369703A3130303134303032303036406572696373736F6E2E73653E3B7461673D69316F34393534632D370D0A5365727665723A204832530D0A546F3A3C7369703A3130303134303032303037406572696373736F6E2E73653E3B7461673D746F5F38303631380D0A5669613A5349502F322E302F544350203134322E3133332E3134322E333A353036303B6272616E63683D7A39684734624B6631663931346436666436653437646234613537393534633764356434313833393131380D0A0D0A'O (\"SIP/2.0 200 OK\\r\\nCall-ID:142.133.142.3_6_1805558430567465450\\r\\nContent-Length:0\\r\\nCSeq:2 BYE\\r\\nFrom:<sip:10014002006@ericsson.se>;tag=i1o4954c-7\\r\\nServer: H2S\\r\\nTo:<sip:10014002007@ericsson.se>;tag=to_80618\\r\\nVia:SIP/2.0/TCP 142.133.142.3:5060;branch=z9hG4bKf1f914d6fd6e47db4a57954c7d5d41839118\\r\\n\\r\\n\")}" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.255944", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "388", function_name: "function:processCommand", message: " Sent on sipInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.256024", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "74", function_name: "function:sipRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.256048", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "253", function_name: "function:receiveInternalMessage", message: " Message enqueued on sipInternalPort[0] from 849 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.256097", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Receive operation on port sipInternalPort[0] succeeded, message from 849: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.256120", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Message with id 27 was extracted from the queue of sipInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.256137", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "255", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.256442", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.276116", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "83", function_name: "function:msrpRun", message: " Message enqueued on msrpPort from system @Socket_API_Definitions" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.285087", component: "856", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on clientPort from system @HTTPmsg_Types.HTTPMessage : { response := { client_id := 13, version_major := 1, version_minor := 1, statuscode := 204, statustext := \"No Content\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:36 GMT\" } }, body := \"\" }} id 10" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.285198", component: "856", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port clientPort succeeded, message from system(): @HTTPmsg_Types.HTTPMessage : { response := { client_id := 13, version_major := 1, version_minor := 1, statuscode := 204, statustext := \"No Content\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:36 GMT\" } }, body := \"\" }} id 10" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.285245", component: "856", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "193", function_name: "function:receiveAnyHTTPClientResponse", message: " Message with id 10 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.285284", component: "856", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "194", function_name: "function:receiveAnyHTTPClientResponse", message: " Stop timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.285471", component: "856", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort to mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"\", contentType := \"\", statusCode := \"204\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:36 GMT\" } } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.285574", component: "856", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "62", function_name: "function:httpNodeRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.285636", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort[5] from 856 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"\", contentType := \"\", statusCode := \"204\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:36 GMT\" } } } } }} id 6" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.285776", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort[5] succeeded, message from 856: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"\", contentType := \"\", statusCode := \"204\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:36 GMT\" } } } } }} id 6" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.285819", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Message with id 6 was extracted from the queue of httpNodeInternalPort[5]" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.285846", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "241", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.286287", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.297504", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "286", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.297590", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "202", function_name: "function:sendInternalMessage", message: " Sent on sipInternalPort[0] to 849 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.297703", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "78", function_name: "function:sipRun", message: " Message enqueued on sipInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.297791", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Receive operation on port sipInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.297815", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Message with id 27 was extracted from the queue of sipInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.297829", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "80", function_name: "function:sipRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.297831", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.297964", component: "849", peer_component: "BaseSipClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "320", function_name: "function:generalReceiveSip", message: " Start timer timerWaitForSipMessage: 15 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.303192", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on sipClientPort from system @IPL4asp_Types.ASP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msg := '5245474953544552207369703A6572696373736F6E2E7365205349502F322E300D0A4D61782D466F7277617264733A2036390D0A417574686F72697A6174696F6E3A20446967657374207265616C6D3D226572696373736F6E2E7365222C757365726E616D653D223130303134303032303036406572696373736F6E2E7365222C7572693D227369703A6572696373736F6E2E7365222C6E6F6E63653D223638383032393434363634323234313538363034303036353137323433383830222C6E633D30303030303030322C636E6F6E63653D223734363530383164393932633733333866366634643135333339653562396239222C716F703D617574682C726573706F6E73653D223838396532633139636134356434363364303735373339656538666265316161222C616C676F726974686D3D4D44350D0A526571756972653A20707265660D0A436F6E74656E742D4C656E6774683A20300D0A546F3A203C7369703A3130303134303032303036406572696373736F6E2E73653E0D0A436F6E746163743A203C7369703A3130303134303032303036403134322E3133332E3134322E333A353036303B637369643D38636637323938302D303865332D343831392D393433642D6637323630663637333138643B7472616E73706F72743D5443503E3B2B672E67736D612E7263732E697063616C6C3B2B672E336770702E696373692D7265663D2275726E25334175726E2D37253341336770702D736572766963652E696D732E696373692E6F6D612E63706D2E6D73672C75726E25334175726E2D37253341336770702D736572766963652E696D732E696373692E6D6D74656C223B2B672E6F6D612E7369702D696D3B2B672E67736D612E7263732E74656C6570686F6E793D226373223B2B672E336770702E63732D766F6963653B2B672E336770702E696172692D7265663D2275726E25334175726E2D37253341336770702D6170706C69636174696F6E2E696D732E696172692E67736D612D7673223B766964656F3B7369702E6963653D747275653B713D302E350D0A457870697265733A20300D0A437365713A20332052454749535445520D0A5669613A205349502F322E302F544350203134322E3133332E3134322E333A353036303B6272616E63683D7A39684734624B6631663966383933346262353035613534323637613863613837376232336132633838640D0A557365722D4167656E743A204832530D0A526F7574653A203C7369703A3134322E3133332E3135302E3136393A32363732303B6C723B7472616E73706F72743D5443503E0D0A46726F6D3A203C7369703A3130303134303032303036406572696373736F6E2E73653E3B7461673D69316F34393473612D350D0A43616C6C2D49643A203134322E3133332E3134322E335F345F313537353531383339373033393833373332370D0A0D0A'O (\"REGISTER sip:ericsson.se SIP/2.0\\r\\nMax-Forwards: 69\\r\\nAuthorization: Digest realm=\\\"ericsson.se\\\",username=\\\"10014002006@ericsson.se\\\",uri=\\\"sip:ericsson.se\\\",nonce=\\\"68802944664224158604006517243880\\\",nc=00000002,cnonce=\\\"7465081d992c7338f6f4d15339e5b9b9\\\",qop=auth,response=\\\"889e2c19ca45d463d075739ee8fbe1aa\\\",algorithm=MD5\\r\\nRequire: pref\\r\\nContent-Length: 0\\r\\nTo: <sip:10014002006@ericsson.se>\\r\\nContact: <sip:10014002006@142.133.142.3:5060;csid=8cf72980-08e3-4819-943d-f7260f67318d;transport=TCP>;+g.gsma.rcs.ipcall;+g.3gpp.icsi-ref=\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\";+g.oma.sip-im;+g.gsma.rcs.telephony=\\\"cs\\\";+g.3gpp.cs-voice;+g.3gpp.iari-ref=\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\";video;sip.ice=true;q=0.5\\r\\nExpires: 0\\r\\nCseq: 3 REGISTER\\r\\nVia: SIP/2.0/TCP 142.133.142.3:5060;branch=z9hG4bKf1f9f8934bb505a54267a8ca877b23a2c88d\\r\\nUser-Agent: H2S\\r\\nRoute: <sip:142.133.150.169:26720;lr;transport=TCP>\\r\\nFrom: <sip:10014002006@ericsson.se>;tag=i1o494sa-5\\r\\nCall-Id: 142.133.142.3_4_1575518397039837327\\r\\n\\r\\n\")} id 15" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.303697", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Incoming message was mapped to @IPL4_demo_types.SIP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msg := { request := { requestLine := { method := REGISTER_E (11), requestUri := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := { fieldName := AUTHORIZATION_E (11), body := { digestResponse := { { id := \"realm\", paramValue := \"\\\"ericsson.se\\\"\" }, { id := \"username\", paramValue := \"\\\"10014002006@ericsson.se\\\"\" }, { id := \"uri\", paramValue := \"\\\"sip:ericsson.se\\\"\" }, { id := \"nonce\", paramValue := \"\\\"68802944664224158604006517243880\\\"\" }, { id := \"nc\", paramValue := \"00000002\" }, { id := \"cnonce\", paramValue := \"\\\"7465081d992c7338f6f4d15339e5b9b9\\\"\" }, { id := \"qop\", paramValue := \"auth\" }, { id := \"response\", paramValue := \"\\\"889e2c19ca45d463d075739ee8fbe1aa\\\"\" }, { id := \"algorithm\", paramValue := \"MD5\" } } } }, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_4_1575518397039837327\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"8cf72980-08e3-4819-943d-f7260f67318d\" }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.telephony\", paramValue := \"\\\"cs\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit }, { id := \"sip.ice\", paramValue := \"true\" }, { id := \"q\", paramValue := \"0.5\" } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 3, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := { fieldName := EXPIRES_E (24), deltaSec := \"0\" }, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494sa-5\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := { fieldName := REQUIRE_E (80), optionsTags := { \"pref\" } }, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := { fieldName := ROUTE_E (84), routeBody := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"lr\", paramValue := omit }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } }, rrParam := omit } } }, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f9f8934bb505a54267a8ca877b23a2c88d\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } }} id 15" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.303964", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port sipClientPort succeeded, message from system(): @IPL4_demo_types.SIP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msg := { request := { requestLine := { method := REGISTER_E (11), requestUri := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := { fieldName := AUTHORIZATION_E (11), body := { digestResponse := { { id := \"realm\", paramValue := \"\\\"ericsson.se\\\"\" }, { id := \"username\", paramValue := \"\\\"10014002006@ericsson.se\\\"\" }, { id := \"uri\", paramValue := \"\\\"sip:ericsson.se\\\"\" }, { id := \"nonce\", paramValue := \"\\\"68802944664224158604006517243880\\\"\" }, { id := \"nc\", paramValue := \"00000002\" }, { id := \"cnonce\", paramValue := \"\\\"7465081d992c7338f6f4d15339e5b9b9\\\"\" }, { id := \"qop\", paramValue := \"auth\" }, { id := \"response\", paramValue := \"\\\"889e2c19ca45d463d075739ee8fbe1aa\\\"\" }, { id := \"algorithm\", paramValue := \"MD5\" } } } }, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_4_1575518397039837327\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"8cf72980-08e3-4819-943d-f7260f67318d\" }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.telephony\", paramValue := \"\\\"cs\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit }, { id := \"sip.ice\", paramValue := \"true\" }, { id := \"q\", paramValue := \"0.5\" } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 3, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := { fieldName := EXPIRES_E (24), deltaSec := \"0\" }, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494sa-5\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := { fieldName := REQUIRE_E (80), optionsTags := { \"pref\" } }, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := { fieldName := ROUTE_E (84), routeBody := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"lr\", paramValue := omit }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } }, rrParam := omit } } }, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f9f8934bb505a54267a8ca877b23a2c88d\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } }} id 15" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.304054", component: "849", peer_component: "BaseSipClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "345", function_name: "function:generalReceiveSip", message: " Message with id 15 was extracted from the queue of sipClientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.304075", component: "849", peer_component: "BaseSipClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "346", function_name: "function:generalReceiveSip", message: " Stop timer timerWaitForSipMessage: 15 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.304900", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on sipInternalPort to mtc @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspRequest := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, request := { requestLine := { method := REGISTER_E (11), requestUri := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := { fieldName := AUTHORIZATION_E (11), body := { digestResponse := { { id := \"realm\", paramValue := \"\\\"ericsson.se\\\"\" }, { id := \"username\", paramValue := \"\\\"10014002006@ericsson.se\\\"\" }, { id := \"uri\", paramValue := \"\\\"sip:ericsson.se\\\"\" }, { id := \"nonce\", paramValue := \"\\\"68802944664224158604006517243880\\\"\" }, { id := \"nc\", paramValue := \"00000002\" }, { id := \"cnonce\", paramValue := \"\\\"7465081d992c7338f6f4d15339e5b9b9\\\"\" }, { id := \"qop\", paramValue := \"auth\" }, { id := \"response\", paramValue := \"\\\"889e2c19ca45d463d075739ee8fbe1aa\\\"\" }, { id := \"algorithm\", paramValue := \"MD5\" } } } }, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_4_1575518397039837327\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"8cf72980-08e3-4819-943d-f7260f67318d\" }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.telephony\", paramValue := \"\\\"cs\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit }, { id := \"sip.ice\", paramValue := \"true\" }, { id := \"q\", paramValue := \"0.5\" } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 3, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := { fieldName := EXPIRES_E (24), deltaSec := \"0\" }, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494sa-5\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := { fieldName := REQUIRE_E (80), optionsTags := { \"pref\" } }, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := { fieldName := ROUTE_E (84), routeBody := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"lr\", paramValue := omit }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } }, rrParam := omit } } }, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f9f8934bb505a54267a8ca877b23a2c88d\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.305130", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "74", function_name: "function:sipRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.305402", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on sipInternalPort[0] from 849 @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspRequest := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, request := { requestLine := { method := REGISTER_E (11), requestUri := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := { fieldName := AUTHORIZATION_E (11), body := { digestResponse := { { id := \"realm\", paramValue := \"\\\"ericsson.se\\\"\" }, { id := \"username\", paramValue := \"\\\"10014002006@ericsson.se\\\"\" }, { id := \"uri\", paramValue := \"\\\"sip:ericsson.se\\\"\" }, { id := \"nonce\", paramValue := \"\\\"68802944664224158604006517243880\\\"\" }, { id := \"nc\", paramValue := \"00000002\" }, { id := \"cnonce\", paramValue := \"\\\"7465081d992c7338f6f4d15339e5b9b9\\\"\" }, { id := \"qop\", paramValue := \"auth\" }, { id := \"response\", paramValue := \"\\\"889e2c19ca45d463d075739ee8fbe1aa\\\"\" }, { id := \"algorithm\", paramValue := \"MD5\" } } } }, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_4_1575518397039837327\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"8cf72980-08e3-4819-943d-f7260f67318d\" }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.telephony\", paramValue := \"\\\"cs\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit }, { id := \"sip.ice\", paramValue := \"true\" }, { id := \"q\", paramValue := \"0.5\" } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 3, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := { fieldName := EXPIRES_E (24), deltaSec := \"0\" }, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494sa-5\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := { fieldName := REQUIRE_E (80), optionsTags := { \"pref\" } }, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := { fieldName := ROUTE_E (84), routeBody := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"lr\", paramValue := omit }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } }, rrParam := omit } } }, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f9f8934bb505a54267a8ca877b23a2c88d\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 28" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.305618", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port sipInternalPort[0] succeeded, message from 849: @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspRequest := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, request := { requestLine := { method := REGISTER_E (11), requestUri := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := { fieldName := AUTHORIZATION_E (11), body := { digestResponse := { { id := \"realm\", paramValue := \"\\\"ericsson.se\\\"\" }, { id := \"username\", paramValue := \"\\\"10014002006@ericsson.se\\\"\" }, { id := \"uri\", paramValue := \"\\\"sip:ericsson.se\\\"\" }, { id := \"nonce\", paramValue := \"\\\"68802944664224158604006517243880\\\"\" }, { id := \"nc\", paramValue := \"00000002\" }, { id := \"cnonce\", paramValue := \"\\\"7465081d992c7338f6f4d15339e5b9b9\\\"\" }, { id := \"qop\", paramValue := \"auth\" }, { id := \"response\", paramValue := \"\\\"889e2c19ca45d463d075739ee8fbe1aa\\\"\" }, { id := \"algorithm\", paramValue := \"MD5\" } } } }, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_4_1575518397039837327\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"8cf72980-08e3-4819-943d-f7260f67318d\" }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.telephony\", paramValue := \"\\\"cs\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit }, { id := \"sip.ice\", paramValue := \"true\" }, { id := \"q\", paramValue := \"0.5\" } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 3, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := { fieldName := EXPIRES_E (24), deltaSec := \"0\" }, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494sa-5\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := { fieldName := REQUIRE_E (80), optionsTags := { \"pref\" } }, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := { fieldName := ROUTE_E (84), routeBody := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"lr\", paramValue := omit }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } }, rrParam := omit } } }, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f9f8934bb505a54267a8ca877b23a2c88d\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 28" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.305729", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Message with id 28 was extracted from the queue of sipInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.305754", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "255", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.308238", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.321785", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "286", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.322395", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on sipInternalPort[0] to 849 @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMMAND_SIP_SEND_SIP_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"16\" }, { parameterName := \"SUBSCRIBER\", parameterValue := \"11\" } } }, aspsSip := { { aspResponse := { addr := { remote_host := \"142.133.142.3\", remote_port := 5060, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 200, reasonPhrase := \"OK\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_4_1575518397039837327\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 3, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494sa-5\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"23059259665535492407139151850966236440\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f9f8934bb505a54267a8ca877b23a2c88d\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.322723", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.322825", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on sipInternalPort from mtc @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMMAND_SIP_SEND_SIP_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"16\" }, { parameterName := \"SUBSCRIBER\", parameterValue := \"11\" } } }, aspsSip := { { aspResponse := { addr := { remote_host := \"142.133.142.3\", remote_port := 5060, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 200, reasonPhrase := \"OK\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_4_1575518397039837327\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 3, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494sa-5\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"23059259665535492407139151850966236440\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f9f8934bb505a54267a8ca877b23a2c88d\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 28" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.323073", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port sipInternalPort succeeded, message from mtc: @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMMAND_SIP_SEND_SIP_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"16\" }, { parameterName := \"SUBSCRIBER\", parameterValue := \"11\" } } }, aspsSip := { { aspResponse := { addr := { remote_host := \"142.133.142.3\", remote_port := 5060, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 200, reasonPhrase := \"OK\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_4_1575518397039837327\" }, callInfo := omit, contact := omit, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 3, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494sa-5\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002006\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"23059259665535492407139151850966236440\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f9f8934bb505a54267a8ca877b23a2c88d\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 28" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.323182", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Message with id 28 was extracted from the queue of sipInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.323217", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "80", function_name: "function:sipRun", message: " Stop timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.323965", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on sipClientPort to system @IPL4_demo_types.SIP_SendTo : { connId := 3, remName := \"142.133.142.3\", remPort := 5060, proto := { tcp := { } }, msg := { raw := \"SIP/2.0 200 OK\\r\\nCall-ID:142.133.142.3_4_1575518397039837327\\r\\nContent-Length:0\\r\\nCSeq:3 REGISTER\\r\\nFrom:<sip:10014002006@ericsson.se>;tag=i1o494sa-5\\r\\nTo:<sip:10014002006@ericsson.se>;tag=23059259665535492407139151850966236440\\r\\nVia:SIP/2.0/TCP 142.133.142.3:5060;branch=z9hG4bKf1f9f8934bb505a54267a8ca877b23a2c88d\\r\\n\\r\\n\" }}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.324067", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Outgoing message was mapped to @IPL4asp_Types.ASP_SendTo : { connId := 3, remName := \"142.133.142.3\", remPort := 5060, proto := { tcp := { } }, msg := '5349502F322E3020323030204F4B0D0A43616C6C2D49443A3134322E3133332E3134322E335F345F313537353531383339373033393833373332370D0A436F6E74656E742D4C656E6774683A300D0A435365713A332052454749535445520D0A46726F6D3A3C7369703A3130303134303032303036406572696373736F6E2E73653E3B7461673D69316F34393473612D350D0A546F3A3C7369703A3130303134303032303036406572696373736F6E2E73653E3B7461673D32333035393235393636353533353439323430373133393135313835303936363233363434300D0A5669613A5349502F322E302F544350203134322E3133332E3134322E333A353036303B6272616E63683D7A39684734624B6631663966383933346262353035613534323637613863613837376232336132633838640D0A0D0A'O (\"SIP/2.0 200 OK\\r\\nCall-ID:142.133.142.3_4_1575518397039837327\\r\\nContent-Length:0\\r\\nCSeq:3 REGISTER\\r\\nFrom:<sip:10014002006@ericsson.se>;tag=i1o494sa-5\\r\\nTo:<sip:10014002006@ericsson.se>;tag=23059259665535492407139151850966236440\\r\\nVia:SIP/2.0/TCP 142.133.142.3:5060;branch=z9hG4bKf1f9f8934bb505a54267a8ca877b23a2c88d\\r\\n\\r\\n\")}" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.324290", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "388", function_name: "function:processCommand", message: " Sent on sipInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.324374", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "74", function_name: "function:sipRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.324434", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "253", function_name: "function:receiveInternalMessage", message: " Message enqueued on sipInternalPort[0] from 849 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.324504", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Receive operation on port sipInternalPort[0] succeeded, message from 849: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.324542", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Message with id 29 was extracted from the queue of sipInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.324572", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "255", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.324940", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.325007", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort[2] succeeded, message from 853: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"\", contentType := \"\", statusCode := \"204\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:36 GMT\" } } } } }} id 5" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.325055", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Message with id 5 was extracted from the queue of httpNodeInternalPort[2]" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.325099", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "241", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.325808", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.341744", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "267", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.341899", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort[4] to 855 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"16\" } } }, aspHttp := { { httpMessage := { method := \"GET\", url := \"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/channels\", body := \"\", contentType := \"\", statusCode := \"\", header := { } } } }}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.342102", component: "855", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort from mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"16\" } } }, aspHttp := { { httpMessage := { method := \"GET\", url := \"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/channels\", body := \"\", contentType := \"\", statusCode := \"\", header := { } } } }} id 5" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.342125", component: "mtc", peer_component: "lib", event_type: "TIMEROP", event_description: "ttcn", port: "114", function_name: "function:sleep", message: " Start timer timerGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.342174", component: "855", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort succeeded, message from mtc: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"16\" } } }, aspHttp := { { httpMessage := { method := \"GET\", url := \"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/channels\", body := \"\", contentType := \"\", statusCode := \"\", header := { } } } }} id 5" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.342235", component: "855", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "67", function_name: "function:httpNodeRun", message: " Message with id 5 was extracted from the queue of httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.342279", component: "855", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "68", function_name: "function:httpNodeRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.342427", component: "855", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "307", function_name: "function:clearHTTPClientPort", message: " Start timer timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.342446", component: "855", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "313", function_name: "function:clearHTTPClientPort", message: " Timeout timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.342498", component: "855", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Sent on clientPort to system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.344480", component: "855", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Message enqueued on clientPort from system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.344515", component: "855", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "243", function_name: "function:sendHTTPClientRequest", message: " Start timer timerWaitForHTTPOpenConnection: 2 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.344564", component: "855", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Receive operation on port clientPort succeeded, message from system(" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.344585", component: "855", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Message with id 9 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.344601", component: "855", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "246", function_name: "function:sendHTTPClientRequest", message: " Stop timer timerWaitForHTTPOpenConnection: 2 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.344647", component: "855", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on clientPort to system @HTTPmsg_Types.HTTPMessage : { request := { client_id := 13, method := \"GET\", uri := \"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/channels\", version_major := 1, version_minor := 1, header := { { header_name := \"Host\", header_value := \"142.133.142.3\" }, { header_name := \"Content-Length\", header_value := \"0\" } }, body := \"\" }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.344729", component: "855", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "189", function_name: "function:receiveAnyHTTPClientResponse", message: " Start timer timerWaitForHTTPResponse: 60 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.845766", component: "mtc", peer_component: "lib", event_type: "TIMEROP", event_description: "ttcn", port: "115", function_name: "function:sleep", message: " Timeout timerGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.846437", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.861802", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "267", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.862048", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort[3] to 854 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"16\" } } }, aspHttp := { { httpMessage := { method := \"DELETE\", url := \"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/register\", body := \"\", contentType := \"\", statusCode := \"\", header := { } } } }}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.862257", component: "854", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort from mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"16\" } } }, aspHttp := { { httpMessage := { method := \"DELETE\", url := \"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/register\", body := \"\", contentType := \"\", statusCode := \"\", header := { } } } }} id 4" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.862352", component: "854", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort succeeded, message from mtc: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"16\" } } }, aspHttp := { { httpMessage := { method := \"DELETE\", url := \"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/register\", body := \"\", contentType := \"\", statusCode := \"\", header := { } } } }} id 4" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.862394", component: "854", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "67", function_name: "function:httpNodeRun", message: " Message with id 4 was extracted from the queue of httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.862417", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.862430", component: "854", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "68", function_name: "function:httpNodeRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.862617", component: "854", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "307", function_name: "function:clearHTTPClientPort", message: " Start timer timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.862639", component: "854", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "313", function_name: "function:clearHTTPClientPort", message: " Timeout timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.862698", component: "854", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Sent on clientPort to system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.864388", component: "854", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Message enqueued on clientPort from system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.864437", component: "854", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "243", function_name: "function:sendHTTPClientRequest", message: " Start timer timerWaitForHTTPOpenConnection: 2 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.864481", component: "854", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Receive operation on port clientPort succeeded, message from system(" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.864515", component: "854", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Message with id 7 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.864544", component: "854", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "246", function_name: "function:sendHTTPClientRequest", message: " Stop timer timerWaitForHTTPOpenConnection: 2 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.864617", component: "854", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on clientPort to system @HTTPmsg_Types.HTTPMessage : { request := { client_id := 12, method := \"DELETE\", uri := \"/14A/v3/session/2838ab5a-e194-4923-81af-c9f0a544f667/register\", version_major := 1, version_minor := 1, header := { { header_name := \"Host\", header_value := \"142.133.142.3\" }, { header_name := \"Content-Length\", header_value := \"0\" } }, body := \"\" }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.864707", component: "854", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "189", function_name: "function:receiveAnyHTTPClientResponse", message: " Start timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.879412", component: "854", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on clientPort from system @HTTPmsg_Types.HTTPMessage : { response := { client_id := 12, version_major := 1, version_minor := 1, statuscode := 204, statustext := \"No Content\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:37 GMT\" } }, body := \"\" }} id 8" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.879495", component: "854", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port clientPort succeeded, message from system(): @HTTPmsg_Types.HTTPMessage : { response := { client_id := 12, version_major := 1, version_minor := 1, statuscode := 204, statustext := \"No Content\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:37 GMT\" } }, body := \"\" }} id 8" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.879525", component: "854", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "193", function_name: "function:receiveAnyHTTPClientResponse", message: " Message with id 8 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.879563", component: "854", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "194", function_name: "function:receiveAnyHTTPClientResponse", message: " Stop timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.879703", component: "854", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort to mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"\", contentType := \"\", statusCode := \"204\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:37 GMT\" } } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.879778", component: "854", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "62", function_name: "function:httpNodeRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.879947", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort[3] from 854 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"\", contentType := \"\", statusCode := \"204\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:37 GMT\" } } } } }} id 5" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.880024", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort[3] succeeded, message from 854: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"\", contentType := \"\", statusCode := \"204\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:37 GMT\" } } } } }} id 5" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.880056", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Message with id 5 was extracted from the queue of httpNodeInternalPort[3]" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.880076", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "241", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.880822", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.882037", component: "855", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on clientPort from system @HTTPmsg_Types.HTTPMessage : { response := { client_id := 13, version_major := 1, version_minor := 1, statuscode := 204, statustext := \"No Content\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:37 GMT\" } }, body := \"\" }} id 10" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.882126", component: "855", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port clientPort succeeded, message from system(): @HTTPmsg_Types.HTTPMessage : { response := { client_id := 13, version_major := 1, version_minor := 1, statuscode := 204, statustext := \"No Content\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:37 GMT\" } }, body := \"\" }} id 10" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.882157", component: "855", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "193", function_name: "function:receiveAnyHTTPClientResponse", message: " Message with id 10 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.882177", component: "855", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "194", function_name: "function:receiveAnyHTTPClientResponse", message: " Stop timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.882315", component: "855", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort to mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"\", contentType := \"\", statusCode := \"204\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:37 GMT\" } } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.882396", component: "855", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "62", function_name: "function:httpNodeRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.882447", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort[4] from 855 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"\", contentType := \"\", statusCode := \"204\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:37 GMT\" } } } } }} id 6" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.894496", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on sipClientPort from system @IPL4asp_Types.ASP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msgsip:ericsson.se SIP/2.0\\r\\nMax-Forwards: 69\\r\\nAuthorization: Digest realm=\\\"ericsson.se\\\",username=\\\"10014002007@ericsson.se\\\",uri=\\\"sip:ericsson.se\\\",nonce=\\\"86738058454623966345207209727360\\\",nc=00000002,cnonce=\\\"f5d8fbdccc84bf5d86dba4a4af036623\\\",qop=auth,response=\\\"1a61610232eaa4ea774aa4c62c42aadf\\\",algorithm=MD5\\r\\nRequire: pref\\r\\nContent-Length: 0\\r\\nTo: <sip:10014002007@ericsson.se>\\r\\nContact: <sip:10014002007@142.133.142.3:5060;csid=2838ab5a-e194-4923-81af-c9f0a544f667;transport=TCP>;+g.gsma.rcs.ipcall;+g.3gpp.icsi-ref=\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\";+g.oma.sip-im;+g.gsma.rcs.telephony=\\\"cs\\\";+g.3gpp.cs-voice;+g.3gpp.iari-ref=\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\";video;sip.ice=true;q=0.5\\r\\nExpires: 0\\r\\nCseq: 3 REGISTER\\r\\nVia: SIP/2.0/TCP 142.133.142.3:5060;branch=z9hG4bKf1f943852a1bab4f483aad87c48e46579ed9\\r\\nUser-Agent: H2S\\r\\nRoute: <sip:142.133.150.169:26720;lr;transport=TCP>\\r\\nFrom: <sip:10014002007@ericsson.se>;tag=i1o494y8-6\\r\\nCall-Id: 142.133.142.3_5_8407814859008826027\\r\\n\\r\\n\")} id 16" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.895176", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Incoming message was mapped to @IPL4_demo_types.SIP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msg := { request := { requestLine := { method := REGISTER_E (11), requestUri := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := { fieldName := AUTHORIZATION_E (11), body := { digestResponse := { { id := \"realm\", paramValue := \"\\\"ericsson.se\\\"\" }, { id := \"username\", paramValue := \"\\\"10014002007@ericsson.se\\\"\" }, { id := \"uri\", paramValue := \"\\\"sip:ericsson.se\\\"\" }, { id := \"nonce\", paramValue := \"\\\"86738058454623966345207209727360\\\"\" }, { id := \"nc\", paramValue := \"00000002\" }, { id := \"cnonce\", paramValue := \"\\\"f5d8fbdccc84bf5d86dba4a4af036623\\\"\" }, { id := \"qop\", paramValue := \"auth\" }, { id := \"response\", paramValue := \"\\\"1a61610232eaa4ea774aa4c62c42aadf\\\"\" }, { id := \"algorithm\", paramValue := \"MD5\" } } } }, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_5_8407814859008826027\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.telephony\", paramValue := \"\\\"cs\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit }, { id := \"sip.ice\", paramValue := \"true\" }, { id := \"q\", paramValue := \"0.5\" } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 3, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := { fieldName := EXPIRES_E (24), deltaSec := \"0\" }, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494y8-6\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := { fieldName := REQUIRE_E (80), optionsTags := { \"pref\" } }, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := { fieldName := ROUTE_E (84), routeBody := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"lr\", paramValue := omit }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } }, rrParam := omit } } }, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f943852a1bab4f483aad87c48e46579ed9\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } }} id 16" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.897745", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "286", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.897927", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "202", function_name: "function:sendInternalMessage", message: " Sent on sipInternalPort[0] to 849 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.898069", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "78", function_name: "function:sipRun", message: " Message enqueued on sipInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.898120", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.898141", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Receive operation on port sipInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.898169", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Message with id 29 was extracted from the queue of sipInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.898186", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "80", function_name: "function:sipRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.898308", component: "849", peer_component: "BaseSipClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "320", function_name: "function:generalReceiveSip", message: " Start timer timerWaitForSipMessage: 15 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.898513", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port sipClientPort succeeded, message from system(): @IPL4_demo_types.SIP_RecvFrom : { connId := 3, remName := \"142.133.142.3\", remPort := 47315, locName := \"142.133.150.169\", locPort := 26720, proto := { tcp := { } }, userData := 0, msg := { request := { requestLine := { method := REGISTER_E (11), requestUri := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := { fieldName := AUTHORIZATION_E (11), body := { digestResponse := { { id := \"realm\", paramValue := \"\\\"ericsson.se\\\"\" }, { id := \"username\", paramValue := \"\\\"10014002007@ericsson.se\\\"\" }, { id := \"uri\", paramValue := \"\\\"sip:ericsson.se\\\"\" }, { id := \"nonce\", paramValue := \"\\\"86738058454623966345207209727360\\\"\" }, { id := \"nc\", paramValue := \"00000002\" }, { id := \"cnonce\", paramValue := \"\\\"f5d8fbdccc84bf5d86dba4a4af036623\\\"\" }, { id := \"qop\", paramValue := \"auth\" }, { id := \"response\", paramValue := \"\\\"1a61610232eaa4ea774aa4c62c42aadf\\\"\" }, { id := \"algorithm\", paramValue := \"MD5\" } } } }, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_5_8407814859008826027\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.telephony\", paramValue := \"\\\"cs\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit }, { id := \"sip.ice\", paramValue := \"true\" }, { id := \"q\", paramValue := \"0.5\" } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 3, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := { fieldName := EXPIRES_E (24), deltaSec := \"0\" }, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494y8-6\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := { fieldName := REQUIRE_E (80), optionsTags := { \"pref\" } }, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := { fieldName := ROUTE_E (84), routeBody := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"lr\", paramValue := omit }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } }, rrParam := omit } } }, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f943852a1bab4f483aad87c48e46579ed9\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } }} id 16" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.898635", component: "849", peer_component: "BaseSipClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "345", function_name: "function:generalReceiveSip", message: " Message with id 16 was extracted from the queue of sipClientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.898671", component: "849", peer_component: "BaseSipClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "346", function_name: "function:generalReceiveSip", message: " Stop timer timerWaitForSipMessage: 15 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.899559", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on sipInternalPort to mtc @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspRequest := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, request := { requestLine := { method := REGISTER_E (11), requestUri := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := { fieldName := AUTHORIZATION_E (11), body := { digestResponse := { { id := \"realm\", paramValue := \"\\\"ericsson.se\\\"\" }, { id := \"username\", paramValue := \"\\\"10014002007@ericsson.se\\\"\" }, { id := \"uri\", paramValue := \"\\\"sip:ericsson.se\\\"\" }, { id := \"nonce\", paramValue := \"\\\"86738058454623966345207209727360\\\"\" }, { id := \"nc\", paramValue := \"00000002\" }, { id := \"cnonce\", paramValue := \"\\\"f5d8fbdccc84bf5d86dba4a4af036623\\\"\" }, { id := \"qop\", paramValue := \"auth\" }, { id := \"response\", paramValue := \"\\\"1a61610232eaa4ea774aa4c62c42aadf\\\"\" }, { id := \"algorithm\", paramValue := \"MD5\" } } } }, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_5_8407814859008826027\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.telephony\", paramValue := \"\\\"cs\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit }, { id := \"sip.ice\", paramValue := \"true\" }, { id := \"q\", paramValue := \"0.5\" } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 3, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := { fieldName := EXPIRES_E (24), deltaSec := \"0\" }, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494y8-6\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := { fieldName := REQUIRE_E (80), optionsTags := { \"pref\" } }, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := { fieldName := ROUTE_E (84), routeBody := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"lr\", paramValue := omit }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } }, rrParam := omit } } }, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f943852a1bab4f483aad87c48e46579ed9\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.899804", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "74", function_name: "function:sipRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.900110", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on sipInternalPort[0] from 849 @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspRequest := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, request := { requestLine := { method := REGISTER_E (11), requestUri := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := { fieldName := AUTHORIZATION_E (11), body := { digestResponse := { { id := \"realm\", paramValue := \"\\\"ericsson.se\\\"\" }, { id := \"username\", paramValue := \"\\\"10014002007@ericsson.se\\\"\" }, { id := \"uri\", paramValue := \"\\\"sip:ericsson.se\\\"\" }, { id := \"nonce\", paramValue := \"\\\"86738058454623966345207209727360\\\"\" }, { id := \"nc\", paramValue := \"00000002\" }, { id := \"cnonce\", paramValue := \"\\\"f5d8fbdccc84bf5d86dba4a4af036623\\\"\" }, { id := \"qop\", paramValue := \"auth\" }, { id := \"response\", paramValue := \"\\\"1a61610232eaa4ea774aa4c62c42aadf\\\"\" }, { id := \"algorithm\", paramValue := \"MD5\" } } } }, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_5_8407814859008826027\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.telephony\", paramValue := \"\\\"cs\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit }, { id := \"sip.ice\", paramValue := \"true\" }, { id := \"q\", paramValue := \"0.5\" } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 3, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := { fieldName := EXPIRES_E (24), deltaSec := \"0\" }, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494y8-6\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := { fieldName := REQUIRE_E (80), optionsTags := { \"pref\" } }, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := { fieldName := ROUTE_E (84), routeBody := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"lr\", paramValue := omit }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } }, rrParam := omit } } }, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f943852a1bab4f483aad87c48e46579ed9\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 30" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.900432", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port sipInternalPort[0] succeeded, message from 849: @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_RECEIVE_MESSAGE\" } } }, aspsSip := { { aspRequest := { addr := { remote_host := \"142.133.142.3\", remote_port := 47315, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, request := { requestLine := { method := REGISTER_E (11), requestUri := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit }, sipVersion := \"SIP/2.0\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := omit, authorization := { fieldName := AUTHORIZATION_E (11), body := { digestResponse := { { id := \"realm\", paramValue := \"\\\"ericsson.se\\\"\" }, { id := \"username\", paramValue := \"\\\"10014002007@ericsson.se\\\"\" }, { id := \"uri\", paramValue := \"\\\"sip:ericsson.se\\\"\" }, { id := \"nonce\", paramValue := \"\\\"86738058454623966345207209727360\\\"\" }, { id := \"nc\", paramValue := \"00000002\" }, { id := \"cnonce\", paramValue := \"\\\"f5d8fbdccc84bf5d86dba4a4af036623\\\"\" }, { id := \"qop\", paramValue := \"auth\" }, { id := \"response\", paramValue := \"\\\"1a61610232eaa4ea774aa4c62c42aadf\\\"\" }, { id := \"algorithm\", paramValue := \"MD5\" } } } }, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_5_8407814859008826027\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.telephony\", paramValue := \"\\\"cs\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit }, { id := \"sip.ice\", paramValue := \"true\" }, { id := \"q\", paramValue := \"0.5\" } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 3, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := { fieldName := EXPIRES_E (24), deltaSec := \"0\" }, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494y8-6\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := { fieldName := MAX_FORWARDS_E (35), forwards := 69 }, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := omit, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := { fieldName := REQUIRE_E (80), optionsTags := { \"pref\" } }, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := { fieldName := ROUTE_E (84), routeBody := { { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := omit, hostPort := { host := \"142.133.150.169\", portField := 26720 }, urlParameters := { { id := \"lr\", paramValue := omit }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } }, rrParam := omit } } }, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := omit }, unsupported := omit, userAgent := { fieldName := USER_AGENT_E (101), userAgentBody := { \"H2S\" } }, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f943852a1bab4f483aad87c48e46579ed9\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 30" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.900588", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Message with id 30 was extracted from the queue of sipInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.900634", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "255", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.905302", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.921754", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "286", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.922466", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on sipInternalPort[0] to 849 @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMMAND_SIP_SEND_SIP_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"16\" }, { parameterName := \"SUBSCRIBER\", parameterValue := \"11\" } } }, aspsSip := { { aspResponse := { addr := { remote_host := \"142.133.142.3\", remote_port := 5060, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 200, reasonPhrase := \"OK\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := { fieldName := AUTHENTICATION_INFO_E (10), ainfo := { { id := \"qop\", paramValue := \"\\\"auth\\\"\" }, { id := \"rspauth\", paramValue := \"\\\"4e0afd3006175776f901e66eaea9c15a\\\"\" }, { id := \"cnonce\", paramValue := \"\\\"86738058454623966345207209727360\\\"\" }, { id := \"nc\", paramValue := \"\\\"2\\\"\" } } }, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_5_8407814859008826027\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.telephony\", paramValue := \"\\\"cs\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit }, { id := \"sip.ice\", paramValue := \"true\" }, { id := \"q\", paramValue := \"0.5\" }, { id := \"expires\", paramValue := \"0\" } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 3, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494y8-6\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := { fieldName := P_ASSOCIATED_URI (44), p_assoc_uris := { { p_asso_uri := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } }, ai_params := omit }, { p_asso_uri := { displayName := omit, addrSpec := { scheme := \"tel\", userInfo := { userOrTelephoneSubscriber := \"+10014002007\", password := omit }, hostPort := { host := omit, portField := omit }, urlParameters := omit, headers := omit } }, ai_params := omit } } }, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"96377838124618062465364271737466269050\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f943852a1bab4f483aad87c48e46579ed9\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.922838", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.922975", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on sipInternalPort from mtc @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMMAND_SIP_SEND_SIP_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"16\" }, { parameterName := \"SUBSCRIBER\", parameterValue := \"11\" } } }, aspsSip := { { aspResponse := { addr := { remote_host := \"142.133.142.3\", remote_port := 5060, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 200, reasonPhrase := \"OK\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := { fieldName := AUTHENTICATION_INFO_E (10), ainfo := { { id := \"qop\", paramValue := \"\\\"auth\\\"\" }, { id := \"rspauth\", paramValue := \"\\\"4e0afd3006175776f901e66eaea9c15a\\\"\" }, { id := \"cnonce\", paramValue := \"\\\"86738058454623966345207209727360\\\"\" }, { id := \"nc\", paramValue := \"\\\"2\\\"\" } } }, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_5_8407814859008826027\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.telephony\", paramValue := \"\\\"cs\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit }, { id := \"sip.ice\", paramValue := \"true\" }, { id := \"q\", paramValue := \"0.5\" }, { id := \"expires\", paramValue := \"0\" } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 3, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494y8-6\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := { fieldName := P_ASSOCIATED_URI (44), p_assoc_uris := { { p_asso_uri := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } }, ai_params := omit }, { p_asso_uri := { displayName := omit, addrSpec := { scheme := \"tel\", userInfo := { userOrTelephoneSubscriber := \"+10014002007\", password := omit }, hostPort := { host := omit, portField := omit }, urlParameters := omit, headers := omit } }, ai_params := omit } } }, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"96377838124618062465364271737466269050\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f943852a1bab4f483aad87c48e46579ed9\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 30" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.923255", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port sipInternalPort succeeded, message from mtc: @variables.internalPortMessageWithAspsSip : { internalMessage := { description := \"COMMAND_SIP_SEND_SIP_MESSAGE\", parameters := { { parameterName := \"STEP_NUMBER\", parameterValue := \"16\" }, { parameterName := \"SUBSCRIBER\", parameterValue := \"11\" } } }, aspsSip := { { aspResponse := { addr := { remote_host := \"142.133.142.3\", remote_port := 5060, local_host := \"142.133.150.169\", local_port := 26720, protocol := TCP_E (1) }, response := { statusLine := { sipVersion := \"SIP/2.0\", statusCode := 200, reasonPhrase := \"OK\" }, msgHeader := { accept := omit, accept_contact := omit, acceptEncoding := omit, acceptLanguage := omit, acceptResourcePriority := omit, alertInfo := omit, alert_mode := omit, allow := omit, allow_events := omit, answer_mode := omit, authenticationInfo := { fieldName := AUTHENTICATION_INFO_E (10), ainfo := { { id := \"qop\", paramValue := \"\\\"auth\\\"\" }, { id := \"rspauth\", paramValue := \"\\\"4e0afd3006175776f901e66eaea9c15a\\\"\" }, { id := \"cnonce\", paramValue := \"\\\"86738058454623966345207209727360\\\"\" }, { id := \"nc\", paramValue := \"\\\"2\\\"\" } } }, authorization := omit, callId := { fieldName := CALL_ID_E (12), callid := \"142.133.142.3_5_8407814859008826027\" }, callInfo := omit, contact := { fieldName := CONTACT_E (14), contactBody := { contactAddresses := { { addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"142.133.142.3\", portField := 5060 }, urlParameters := { { id := \"csid\", paramValue := \"2838ab5a-e194-4923-81af-c9f0a544f667\" }, { id := \"transport\", paramValue := \"TCP\" } }, headers := omit } } }, contactParams := { { id := \"+g.gsma.rcs.ipcall\", paramValue := omit }, { id := \"+g.3gpp.icsi-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\"\" }, { id := \"+g.oma.sip-im\", paramValue := omit }, { id := \"+g.gsma.rcs.telephony\", paramValue := \"\\\"cs\\\"\" }, { id := \"+g.3gpp.cs-voice\", paramValue := omit }, { id := \"+g.3gpp.iari-ref\", paramValue := \"\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\"\" }, { id := \"video\", paramValue := omit }, { id := \"sip.ice\", paramValue := \"true\" }, { id := \"q\", paramValue := \"0.5\" }, { id := \"expires\", paramValue := \"0\" } } } } } }, contentDisposition := omit, contentEncoding := omit, contentLanguage := omit, contentLength := { fieldName := CONTENT_LENGTH_E (18), len := 0 }, contentType := omit, cSeq := { fieldName := CSEQ_E (20), seqNumber := 3, method := \"REGISTER\" }, date := omit, diversion := omit, errorInfo := omit, event := omit, expires := omit, feature_caps := omit, fromField := { fieldName := FROM_E (27), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, fromParams := { { id := \"tag\", paramValue := \"i1o494y8-6\" } } }, geolocation := omit, geolocation_routing := omit, geolocation_error := omit, historyInfo := omit, info_Package := omit, inReplyTo := omit, join := omit, maxForwards := omit, mimeVersion := omit, minExpires := omit, min_SE := omit, organization := omit, p_access_network_info := omit, p_alerting_mode := omit, p_answer_state := omit, passertedID := omit, p_associated_uri := { fieldName := P_ASSOCIATED_URI (44), p_assoc_uris := { { p_asso_uri := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } }, ai_params := omit }, { p_asso_uri := { displayName := omit, addrSpec := { scheme := \"tel\", userInfo := { userOrTelephoneSubscriber := \"+10014002007\", password := omit }, hostPort := { host := omit, portField := omit }, urlParameters := omit, headers := omit } }, ai_params := omit } } }, p_called_party_id := omit, p_charging_function_address := omit, p_charging_vector := omit, p_DCS_trace_pty_id := omit, p_DCS_OSPS := omit, p_DCS_billing_info := omit, p_DCS_LAES := omit, p_DCS_redirect := omit, p_Early_Media := omit, p_media_auth := omit, ppreferredID := omit, p_profile_key := omit, p_served_user := omit, p_Service_Indication := omit, p_Service_Notification := omit, p_user_database := omit, p_visited_network_id := omit, path := omit, priv_answer_mode := omit, priority := omit, privacy := omit, proxyAuthenticate := omit, proxyAuthorization := omit, proxyRequire := omit, rack := omit, rseq := omit, reason := omit, recordRoute := omit, recv_Info := omit, reject_contact := omit, refer_sub := omit, refer_to := omit, referred_by := omit, replyTo := omit, replaces := omit, require := omit, request_disp := omit, resourcePriority := omit, retryAfter := omit, route := omit, security_client := omit, security_server := omit, security_verify := omit, session_expires := omit, session_id := omit, server := omit, service_route := omit, sip_ETag := omit, sip_If_Match := omit, subject := omit, subscription_state := omit, supported := omit, target_dialog := omit, timestamp := omit, toField := { fieldName := TO_E (99), addressField := { nameAddr := { displayName := omit, addrSpec := { scheme := \"sip\", userInfo := { userOrTelephoneSubscriber := \"10014002007\", password := omit }, hostPort := { host := \"ericsson.se\", portField := omit }, urlParameters := omit, headers := omit } } }, toParams := { { id := \"tag\", paramValue := \"96377838124618062465364271737466269050\" } } }, unsupported := omit, userAgent := omit, via := { fieldName := VIA_E (102), viaBody := { { sentProtocol := { protocolName := \"SIP\", protocolVersion := \"2.0\", transport := \"TCP\" }, sentBy := { host := \"142.133.142.3\", portField := 5060 }, viaParams := { { id := \"branch\", paramValue := \"z9hG4bKf1f943852a1bab4f483aad87c48e46579ed9\" } } } } }, warning := omit, wwwAuthenticate := omit, undefinedHeader_List := omit, p_area_info := omit, p_any_name := omit, x_any_name := omit, x_generic_num := omit, x_mcr := omit, x_contract_addr := omit, x_echo_cancel := omit, x_fwdorig_num := omit, x_origcld_num := omit, ns := omit, imdn_disposition_notification := omit, imdn_message_id := omit, contribution_id := omit, conversation_id := omit, x_correlation_id := omit, p_preferred_service := omit, inReplyTo_contribution_id := omit, msa := omit, contribution_ids := omit, local_register := omit, focus_ids := omit, fservice := omit, teluri := omit, message_uid := omit, read_notification := omit, time_of_delivery := omit, message_expires := omit }, messageBody := omit, payload := omit } } } }} id 30" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.923364", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Message with id 30 was extracted from the queue of sipInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.923387", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "80", function_name: "function:sipRun", message: " Stop timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.923923", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on sipClientPort to system @IPL4_demo_types.SIP_SendTo : { connId := 3, remName := \"142.133.142.3\", remPort := 5060, proto := { tcp := { } }, msg := { raw := \"SIP/2.0 200 OK\\r\\nAuthentication-Info:qop=\\\"auth\\\", rspauth=\\\"4e0afd3006175776f901e66eaea9c15a\\\", cnonce=\\\"86738058454623966345207209727360\\\", nc=\\\"2\\\"\\r\\nCall-ID:142.133.142.3_5_8407814859008826027\\r\\nContact:<sip:10014002007@142.133.142.3:5060;csid=2838ab5a-e194-4923-81af-c9f0a544f667;transport=TCP>;+g.gsma.rcs.ipcall;+g.3gpp.icsi-ref=\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\";+g.oma.sip-im;+g.gsma.rcs.telephony=\\\"cs\\\";+g.3gpp.cs-voice;+g.3gpp.iari-ref=\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\";video;sip.ice=true;q=0.5;expires=0\\r\\nContent-Length:0\\r\\nCSeq:3 REGISTER\\r\\nFrom:<sip:10014002007@ericsson.se>;tag=i1o494y8-6\\r\\nP-Associated-URI:<sip:10014002007@ericsson.se>\\r\\nP-Associated-URI:<tel:+10014002007>\\r\\nTo:<sip:10014002007@ericsson.se>;tag=96377838124618062465364271737466269050\\r\\nVia:SIP/2.0/TCP 142.133.142.3:5060;branch=z9hG4bKf1f943852a1bab4f483aad87c48e46579ed9\\r\\n\\r\\n\" }}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.924159", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Outgoing message was mapped to @IPL4asp_Types.ASP_SendTo : { connId := 3, remName := \"142.133.142.3\", remPort := 5060, proto := { tcp := { } }, msgr\\nAuthentication-Info:qop=\\\"auth\\\", rspauth=\\\"4e0afd3006175776f901e66eaea9c15a\\\", cnonce=\\\"86738058454623966345207209727360\\\", nc=\\\"2\\\"\\r\\nCall-ID:142.133.142.3_5_8407814859008826027\\r\\nContact:<sip:10014002007@142.133.142.3:5060;csid=2838ab5a-e194-4923-81af-c9f0a544f667;transport=TCP>;+g.gsma.rcs.ipcall;+g.3gpp.icsi-ref=\\\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,urn%3Aurn-7%3A3gpp-service.ims.icsi.mmtel\\\";+g.oma.sip-im;+g.gsma.rcs.telephony=\\\"cs\\\";+g.3gpp.cs-voice;+g.3gpp.iari-ref=\\\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-vs\\\";video;sip.ice=true;q=0.5;expires=0\\r\\nContent-Length:0\\r\\nCSeq:3 REGISTER\\r\\nFrom:<sip:10014002007@ericsson.se>;tag=i1o494y8-6\\r\\nP-Associated-URI:<sip:10014002007@ericsson.se>\\r\\nP-Associated-URI:<tel:+10014002007>\\r\\nTo:<sip:10014002007@ericsson.se>;tag=96377838124618062465364271737466269050\\r\\nVia:SIP/2.0/TCP 142.133.142.3:5060;branch=z9hG4bKf1f943852a1bab4f483aad87c48e46579ed9\\r\\n\\r\\n\")}" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.924371", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "388", function_name: "function:processCommand", message: " Sent on sipInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.924446", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "74", function_name: "function:sipRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.924524", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "253", function_name: "function:receiveInternalMessage", message: " Message enqueued on sipInternalPort[0] from 849 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.924584", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Receive operation on port sipInternalPort[0] succeeded, message from 849: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.924613", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Message with id 31 was extracted from the queue of sipInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.924634", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "255", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.925049", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:37.925111", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort[4] succeeded, message from 855: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"\", contentType := \"\", statusCode := \"204\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache, no-transform\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:37 GMT\" } } } } }} id 6" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.925171", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Message with id 6 was extracted from the queue of httpNodeInternalPort[4]" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.925195", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "241", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:37.925451", component: "mtc", peer_component: "lib", event_type: "TIMEROP", event_description: "ttcn", port: "114", function_name: "function:sleep", message: " Start timer timerGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.077753", component: "mtc", peer_component: "lib", event_type: "TIMEROP", event_description: "ttcn", port: "115", function_name: "function:sleep", message: " Timeout timerGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.078516", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.089818", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "267", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:38.090224", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort[1] to 852 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"PARAM_PORT_OVERRIDE\", parameterValue := \"8888\" } } }, aspHttp := { { httpMessage := { method := \"POST\", url := \"/jolokia/\", body := \"[ { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,successfulTerminating=successfulTerminating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,successfulOriginating=successfulOriginating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulOriginating=unsuccessfulOriginating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulTerminating=unsuccessfulTerminating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,textMessages=textMessages-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,mediaMessages=mediaMessages-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,MSRPSession=MSRPSession-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=GAUGE,format=INTEGER,MSRPCurrentlyActive=MSRPCurrentlyActive1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } ] \", contentType := \"application/json\", statusCode := \"\", header := omit } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.090426", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:38.090716", component: "852", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort from mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"PARAM_PORT_OVERRIDE\", parameterValue := \"8888\" } } }, aspHttp := { { httpMessage := { method := \"POST\", url := \"/jolokia/\", body := \"[ { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,successfulTerminating=successfulTerminating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,successfulOriginating=successfulOriginating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulOriginating=unsuccessfulOriginating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulTerminating=unsuccessfulTerminating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,textMessages=textMessages-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,mediaMessages=mediaMessages-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,MSRPSession=MSRPSession-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=GAUGE,format=INTEGER,MSRPCurrentlyActive=MSRPCurrentlyActive1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } ] \", contentType := \"application/json\", statusCode := \"\", header := omit } } }} id 5" }
Structured  DataFrame { time: "2014/Oct/24 18:34:38.091171", component: "852", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort succeeded, message from mtc: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"PARAM_PORT_OVERRIDE\", parameterValue := \"8888\" } } }, aspHttp := { { httpMessage := { method := \"POST\", url := \"/jolokia/\", body := \"[ { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,successfulTerminating=successfulTerminating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,successfulOriginating=successfulOriginating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulOriginating=unsuccessfulOriginating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulTerminating=unsuccessfulTerminating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,textMessages=textMessages-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,mediaMessages=mediaMessages-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,MSRPSession=MSRPSession-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=GAUGE,format=INTEGER,MSRPCurrentlyActive=MSRPCurrentlyActive1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } ] \", contentType := \"application/json\", statusCode := \"\", header := omit } } }} id 5" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.091260", component: "852", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "67", function_name: "function:httpNodeRun", message: " Message with id 5 was extracted from the queue of httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.091308", component: "852", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "68", function_name: "function:httpNodeRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.091635", component: "852", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "307", function_name: "function:clearHTTPClientPort", message: " Start timer timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.091685", component: "852", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "313", function_name: "function:clearHTTPClientPort", message: " Timeout timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.091824", component: "852", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Sent on clientPort to system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.092924", component: "852", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Message enqueued on clientPort from system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.092981", component: "852", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "243", function_name: "function:sendHTTPClientRequest", message: " Start timer timerWaitForHTTPOpenConnection: 2 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.093032", component: "852", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Receive operation on port clientPort succeeded, message from system(" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.093068", component: "852", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Message with id 9 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.093103", component: "852", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "246", function_name: "function:sendHTTPClientRequest", message: " Stop timer timerWaitForHTTPOpenConnection: 2 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:38.093424", component: "852", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on clientPort to system @HTTPmsg_Types.HTTPMessage : { request := { client_id := 13, method := \"POST\", uri := \"/jolokia/\", version_major := 1, version_minor := 1, header := { { header_name := \"Host\", header_value := \"142.133.142.3\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Content-Length\", header_value := \"1971\" } }, body := \"[ { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,successfulTerminating=successfulTerminating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,successfulOriginating=successfulOriginating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulOriginating=unsuccessfulOriginating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulTerminating=unsuccessfulTerminating-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,textMessages=textMessages-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,mediaMessages=mediaMessages-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,MSRPSession=MSRPSession-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=GAUGE,format=INTEGER,MSRPCurrentlyActive=MSRPCurrentlyActive1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } ] \" }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.093609", component: "852", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "189", function_name: "function:receiveAnyHTTPClientResponse", message: " Start timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:38.099893", component: "852", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on clientPort from system @HTTPmsg_Types.HTTPMessage : { response := { client_id := 13, version_major := 1, version_minor := 1, statuscode := 200, statustext := \"OK\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache\" }, { header_name := \"Pragma\", header_value := \"no-cache\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:37 GMT\" }, { header_name := \"Expires\", header_value := \"Fri, 24 Oct 2014 21:34:38 GMT\" }, { header_name := \"Content-Type\", header_value := \"text/plain;charset=utf-8\" }, { header_name := \"Content-Length\", header_value := \"1762\" } }, body := \"[{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,successfulTerminating=successfulTerminating-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":4},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,successfulOriginating=successfulOriginating-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":4},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulOriginating=unsuccessfulOriginating-1\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":1},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulTerminating=unsuccessfulTerminating-1\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":1},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,textMessages=textMessages-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":8},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,mediaMessages=mediaMessages-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,MSRPSession=MSRPSession-1,interface=WcgChatCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":2},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,MSRPCurrentlyActive=MSRPCurrentlyActive1,format=INTEGER,interface=WcgGlobalCounterGroup,type=GAUGE\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0}]\" }} id 10" }
Structured  DataFrame { time: "2014/Oct/24 18:34:38.100255", component: "852", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port clientPort succeeded, message from system(): @HTTPmsg_Types.HTTPMessage : { response := { client_id := 13, version_major := 1, version_minor := 1, statuscode := 200, statustext := \"OK\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache\" }, { header_name := \"Pragma\", header_value := \"no-cache\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:37 GMT\" }, { header_name := \"Expires\", header_value := \"Fri, 24 Oct 2014 21:34:38 GMT\" }, { header_name := \"Content-Type\", header_value := \"text/plain;charset=utf-8\" }, { header_name := \"Content-Length\", header_value := \"1762\" } }, body := \"[{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,successfulTerminating=successfulTerminating-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":4},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,successfulOriginating=successfulOriginating-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":4},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulOriginating=unsuccessfulOriginating-1\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":1},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulTerminating=unsuccessfulTerminating-1\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":1},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,textMessages=textMessages-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":8},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,mediaMessages=mediaMessages-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,MSRPSession=MSRPSession-1,interface=WcgChatCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":2},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,MSRPCurrentlyActive=MSRPCurrentlyActive1,format=INTEGER,interface=WcgGlobalCounterGroup,type=GAUGE\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0}]\" }} id 10" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.100363", component: "852", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "193", function_name: "function:receiveAnyHTTPClientResponse", message: " Message with id 10 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.100405", component: "852", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "194", function_name: "function:receiveAnyHTTPClientResponse", message: " Stop timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:38.100773", component: "852", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort to mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"[{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,successfulTerminating=successfulTerminating-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":4},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,successfulOriginating=successfulOriginating-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":4},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulOriginating=unsuccessfulOriginating-1\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":1},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulTerminating=unsuccessfulTerminating-1\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":1},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,textMessages=textMessages-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":8},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,mediaMessages=mediaMessages-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,MSRPSession=MSRPSession-1,interface=WcgChatCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":2},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,MSRPCurrentlyActive=MSRPCurrentlyActive1,format=INTEGER,interface=WcgGlobalCounterGroup,type=GAUGE\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0}]\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache\" }, { header_name := \"Pragma\", header_value := \"no-cache\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:37 GMT\" }, { header_name := \"Expires\", header_value := \"Fri, 24 Oct 2014 21:34:38 GMT\" }, { header_name := \"Content-Type\", header_value := \"text/plain;charset=utf-8\" }, { header_name := \"Content-Length\", header_value := \"1762\" } } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.100938", component: "852", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "62", function_name: "function:httpNodeRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:38.101205", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort[1] from 852 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"[{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,successfulTerminating=successfulTerminating-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":4},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,successfulOriginating=successfulOriginating-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":4},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulOriginating=unsuccessfulOriginating-1\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":1},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulTerminating=unsuccessfulTerminating-1\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":1},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,textMessages=textMessages-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":8},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,mediaMessages=mediaMessages-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,MSRPSession=MSRPSession-1,interface=WcgChatCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":2},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,MSRPCurrentlyActive=MSRPCurrentlyActive1,format=INTEGER,interface=WcgGlobalCounterGroup,type=GAUGE\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0}]\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache\" }, { header_name := \"Pragma\", header_value := \"no-cache\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:37 GMT\" }, { header_name := \"Expires\", header_value := \"Fri, 24 Oct 2014 21:34:38 GMT\" }, { header_name := \"Content-Type\", header_value := \"text/plain;charset=utf-8\" }, { header_name := \"Content-Length\", header_value := \"1762\" } } } } }} id 6" }
Structured  DataFrame { time: "2014/Oct/24 18:34:38.101488", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort[1] succeeded, message from 852: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"[{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,successfulTerminating=successfulTerminating-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":4},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,successfulOriginating=successfulOriginating-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":4},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulOriginating=unsuccessfulOriginating-1\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":1},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,type=CC,unsuccessfulTerminating=unsuccessfulTerminating-1\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":1},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,textMessages=textMessages-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":8},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgChatCounterGroup,mediaMessages=mediaMessages-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,MSRPSession=MSRPSession-1,interface=WcgChatCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":2},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,MSRPCurrentlyActive=MSRPCurrentlyActive1,format=INTEGER,interface=WcgGlobalCounterGroup,type=GAUGE\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0}]\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache\" }, { header_name := \"Pragma\", header_value := \"no-cache\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:37 GMT\" }, { header_name := \"Expires\", header_value := \"Fri, 24 Oct 2014 21:34:38 GMT\" }, { header_name := \"Content-Type\", header_value := \"text/plain;charset=utf-8\" }, { header_name := \"Content-Length\", header_value := \"1762\" } } } } }} id 6" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.101558", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Message with id 6 was extracted from the queue of httpNodeInternalPort[1]" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.101585", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "241", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.104445", component: "mtc", peer_component: "lib", event_type: "TIMEROP", event_description: "ttcn", port: "114", function_name: "function:sleep", message: " Start timer timerGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.254471", component: "mtc", peer_component: "lib", event_type: "TIMEROP", event_description: "ttcn", port: "115", function_name: "function:sleep", message: " Timeout timerGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.254915", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.265532", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "267", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Structured  DataFrame { time: "2014/Oct/24 18:34:38.265813", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort[1] to 852 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"PARAM_PORT_OVERRIDE\", parameterValue := \"8888\" } } }, aspHttp := { { httpMessage := { method := \"POST\", url := \"/jolokia/\", body := \"[ { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,successfullyReceivedDeliveryNotification=successfullyReceivedDeliveryNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,successfullyReceivedDisplayNotification=successfullyReceivedDisplayNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,failedReceivedDeliveryNotification=failedReceivedDeliveryNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,failedReceivedDisplayNotification=failedReceivedDisplayNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,successfullySentDisplayNotification=successfullySentDisplayNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,failedSentDisplayNotification=failedSentDisplayNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } ] \", contentType := \"application/json\", statusCode := \"\", header := omit } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.266004", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:38.266130", component: "852", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort from mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"PARAM_PORT_OVERRIDE\", parameterValue := \"8888\" } } }, aspHttp := { { httpMessage := { method := \"POST\", url := \"/jolokia/\", body := \"[ { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,successfullyReceivedDeliveryNotification=successfullyReceivedDeliveryNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,successfullyReceivedDisplayNotification=successfullyReceivedDisplayNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,failedReceivedDeliveryNotification=failedReceivedDeliveryNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,failedReceivedDisplayNotification=failedReceivedDisplayNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,successfullySentDisplayNotification=successfullySentDisplayNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,failedSentDisplayNotification=failedSentDisplayNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } ] \", contentType := \"application/json\", statusCode := \"\", header := omit } } }} id 6" }
Structured  DataFrame { time: "2014/Oct/24 18:34:38.266308", component: "852", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort succeeded, message from mtc: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\", parameters := { { parameterName := \"PARAM_PORT_OVERRIDE\", parameterValue := \"8888\" } } }, aspHttp := { { httpMessage := { method := \"POST\", url := \"/jolokia/\", body := \"[ { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,successfullyReceivedDeliveryNotification=successfullyReceivedDeliveryNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,successfullyReceivedDisplayNotification=successfullyReceivedDisplayNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,failedReceivedDeliveryNotification=failedReceivedDeliveryNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,failedReceivedDisplayNotification=failedReceivedDisplayNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,successfullySentDisplayNotification=successfullySentDisplayNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,failedSentDisplayNotification=failedSentDisplayNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } ] \", contentType := \"application/json\", statusCode := \"\", header := omit } } }} id 6" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.266380", component: "852", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "67", function_name: "function:httpNodeRun", message: " Message with id 6 was extracted from the queue of httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.266399", component: "852", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "68", function_name: "function:httpNodeRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.266515", component: "852", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "307", function_name: "function:clearHTTPClientPort", message: " Start timer timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.266533", component: "852", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "313", function_name: "function:clearHTTPClientPort", message: " Timeout timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.266584", component: "852", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Sent on clientPort to system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.267493", component: "852", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Message enqueued on clientPort from system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.267533", component: "852", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "243", function_name: "function:sendHTTPClientRequest", message: " Start timer timerWaitForHTTPOpenConnection: 2 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.267560", component: "852", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Receive operation on port clientPort succeeded, message from system(" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.267588", component: "852", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Message with id 11 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.267604", component: "852", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "246", function_name: "function:sendHTTPClientRequest", message: " Stop timer timerWaitForHTTPOpenConnection: 2 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:38.267749", component: "852", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on clientPort to system @HTTPmsg_Types.HTTPMessage : { request := { client_id := 14, method := \"POST\", uri := \"/jolokia/\", version_major := 1, version_minor := 1, header := { { header_name := \"Host\", header_value := \"142.133.142.3\" }, { header_name := \"Content-Type\", header_value := \"application/json\" }, { header_name := \"Content-Length\", header_value := \"1682\" } }, body := \"[ { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,successfullyReceivedDeliveryNotification=successfullyReceivedDeliveryNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,successfullyReceivedDisplayNotification=successfullyReceivedDisplayNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,failedReceivedDeliveryNotification=failedReceivedDeliveryNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,failedReceivedDisplayNotification=failedReceivedDisplayNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,successfullySentDisplayNotification=successfullySentDisplayNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } , { \\\"type\\\": \\\"read\\\", \\\"mbean\\\": \\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,type=CC,failedSentDisplayNotification=failedSentDisplayNotification-1\\\", \\\"attribute\\\": \\\"Value\\\", \\\"config\\\": { \\\"mimeType\\\": \\\"application/json\\\", \\\"includeStackTrace\\\": \\\"false\\\"} } ] \" }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.267821", component: "852", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "189", function_name: "function:receiveAnyHTTPClientResponse", message: " Start timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:38.274516", component: "852", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on clientPort from system @HTTPmsg_Types.HTTPMessage : { response := { client_id := 14, version_major := 1, version_minor := 1, statuscode := 200, statustext := \"OK\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache\" }, { header_name := \"Pragma\", header_value := \"no-cache\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:37 GMT\" }, { header_name := \"Expires\", header_value := \"Fri, 24 Oct 2014 21:34:38 GMT\" }, { header_name := \"Content-Type\", header_value := \"text/plain;charset=utf-8\" }, { header_name := \"Content-Length\", header_value := \"1525\" } }, body := \"[{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,successfullyReceivedDeliveryNotification=successfullyReceivedDeliveryNotification-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":4},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,successfullyReceivedDisplayNotification=successfullyReceivedDisplayNotification-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,failedReceivedDeliveryNotification=failedReceivedDeliveryNotification-1,interface=WcgGlobalCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,failedReceivedDisplayNotification=failedReceivedDisplayNotification-1,interface=WcgGlobalCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,successfullySentDisplayNotification=successfullySentDisplayNotification-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,failedSentDisplayNotification=failedSentDisplayNotification-1,interface=WcgGlobalCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0}]\" }} id 12" }
Structured  DataFrame { time: "2014/Oct/24 18:34:38.274789", component: "852", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port clientPort succeeded, message from system(): @HTTPmsg_Types.HTTPMessage : { response := { client_id := 14, version_major := 1, version_minor := 1, statuscode := 200, statustext := \"OK\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache\" }, { header_name := \"Pragma\", header_value := \"no-cache\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:37 GMT\" }, { header_name := \"Expires\", header_value := \"Fri, 24 Oct 2014 21:34:38 GMT\" }, { header_name := \"Content-Type\", header_value := \"text/plain;charset=utf-8\" }, { header_name := \"Content-Length\", header_value := \"1525\" } }, body := \"[{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,successfullyReceivedDeliveryNotification=successfullyReceivedDeliveryNotification-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":4},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,successfullyReceivedDisplayNotification=successfullyReceivedDisplayNotification-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,failedReceivedDeliveryNotification=failedReceivedDeliveryNotification-1,interface=WcgGlobalCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,failedReceivedDisplayNotification=failedReceivedDisplayNotification-1,interface=WcgGlobalCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,successfullySentDisplayNotification=successfullySentDisplayNotification-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,failedSentDisplayNotification=failedSentDisplayNotification-1,interface=WcgGlobalCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0}]\" }} id 12" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.274859", component: "852", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "193", function_name: "function:receiveAnyHTTPClientResponse", message: " Message with id 12 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.274898", component: "852", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "194", function_name: "function:receiveAnyHTTPClientResponse", message: " Stop timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:38.275184", component: "852", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort to mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"[{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,successfullyReceivedDeliveryNotification=successfullyReceivedDeliveryNotification-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":4},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,successfullyReceivedDisplayNotification=successfullyReceivedDisplayNotification-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,failedReceivedDeliveryNotification=failedReceivedDeliveryNotification-1,interface=WcgGlobalCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,failedReceivedDisplayNotification=failedReceivedDisplayNotification-1,interface=WcgGlobalCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,successfullySentDisplayNotification=successfullySentDisplayNotification-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,failedSentDisplayNotification=failedSentDisplayNotification-1,interface=WcgGlobalCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0}]\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache\" }, { header_name := \"Pragma\", header_value := \"no-cache\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:37 GMT\" }, { header_name := \"Expires\", header_value := \"Fri, 24 Oct 2014 21:34:38 GMT\" }, { header_name := \"Content-Type\", header_value := \"text/plain;charset=utf-8\" }, { header_name := \"Content-Length\", header_value := \"1525\" } } } } }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.275354", component: "852", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "62", function_name: "function:httpNodeRun", message: " Start timer timerWaitForCommand: 600 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:38.275528", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort[1] from 852 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"[{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,successfullyReceivedDeliveryNotification=successfullyReceivedDeliveryNotification-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":4},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,successfullyReceivedDisplayNotification=successfullyReceivedDisplayNotification-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,failedReceivedDeliveryNotification=failedReceivedDeliveryNotification-1,interface=WcgGlobalCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,failedReceivedDisplayNotification=failedReceivedDisplayNotification-1,interface=WcgGlobalCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,successfullySentDisplayNotification=successfullySentDisplayNotification-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,failedSentDisplayNotification=failedSentDisplayNotification-1,interface=WcgGlobalCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0}]\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache\" }, { header_name := \"Pragma\", header_value := \"no-cache\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:37 GMT\" }, { header_name := \"Expires\", header_value := \"Fri, 24 Oct 2014 21:34:38 GMT\" }, { header_name := \"Content-Type\", header_value := \"text/plain;charset=utf-8\" }, { header_name := \"Content-Length\", header_value := \"1525\" } } } } }} id 7" }
Structured  DataFrame { time: "2014/Oct/24 18:34:38.275709", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort[1] succeeded, message from 852: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"[{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,successfullyReceivedDeliveryNotification=successfullyReceivedDeliveryNotification-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":4},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,successfullyReceivedDisplayNotification=successfullyReceivedDisplayNotification-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,failedReceivedDeliveryNotification=failedReceivedDeliveryNotification-1,interface=WcgGlobalCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,failedReceivedDisplayNotification=failedReceivedDisplayNotification-1,interface=WcgGlobalCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,interface=WcgGlobalCounterGroup,successfullySentDisplayNotification=successfullySentDisplayNotification-1,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0},{\\\"timestamp\\\":1414190078,\\\"status\\\":200,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.caf.pm:Application=Wcg,failedSentDisplayNotification=failedSentDisplayNotification-1,interface=WcgGlobalCounterGroup,type=CC\\\",\\\"attribute\\\":\\\"Value\\\",\\\"type\\\":\\\"read\\\"},\\\"value\\\":0}]\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache\" }, { header_name := \"Pragma\", header_value := \"no-cache\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:37 GMT\" }, { header_name := \"Expires\", header_value := \"Fri, 24 Oct 2014 21:34:38 GMT\" }, { header_name := \"Content-Type\", header_value := \"text/plain;charset=utf-8\" }, { header_name := \"Content-Length\", header_value := \"1525\" } } } } }} id 7" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.275748", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Message with id 7 was extracted from the queue of httpNodeInternalPort[1]" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.275766", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "241", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.277661", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.289581", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "286", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.289771", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "202", function_name: "function:sendInternalMessage", message: " Sent on sipInternalPort[0] to 849 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.289953", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "78", function_name: "function:sipRun", message: " Message enqueued on sipInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.290006", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.290036", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Receive operation on port sipInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.290060", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Message with id 31 was extracted from the queue of sipInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.290074", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "80", function_name: "function:sipRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.290163", component: "849", peer_component: "BaseSipClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "703", function_name: "function:clearSipQueue", message: " Port sipClientPort was cleared" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.290207", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "388", function_name: "function:processCommand", message: " Sent on sipInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.290258", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "74", function_name: "function:sipRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.290318", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "253", function_name: "function:receiveInternalMessage", message: " Message enqueued on sipInternalPort[0] from 849 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.290389", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Receive operation on port sipInternalPort[0] succeeded, message from 849: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.290457", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Message with id 32 was extracted from the queue of sipInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.290497", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "255", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.291011", component: "mtc", peer_component: "lib", event_type: "TIMEROP", event_description: "ttcn", port: "114", function_name: "function:sleep", message: " Start timer timerGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.793830", component: "mtc", peer_component: "lib", event_type: "TIMEROP", event_description: "ttcn", port: "115", function_name: "function:sleep", message: " Timeout timerGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.804192", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 10 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.804560", component: "858", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port clientPort was started." }
Simple DataFrame { time: "2014/Oct/24 18:34:38.804609", component: "858", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port serverPort was started." }
Simple DataFrame { time: "2014/Oct/24 18:34:38.804642", component: "858", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port httpNodeInternalPort was started." }
Simple DataFrame { time: "2014/Oct/24 18:34:38.806080", component: "858", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "130", function_name: "function:httpNodeInitialize", message: " Port clientPort was mapped to system:clientPort[6]" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.806508", component: "858", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "133", function_name: "function:httpNodeInitialize", message: " Port serverPort was mapped to system:serverPort[6]" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.806904", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port httpNodeInternalPort[6] is waiting for connection from 858:httpNodeInternalPort on UNIX pathname /tmp/ttcn3-portconn-200b9f2a." }
Simple DataFrame { time: "2014/Oct/24 18:34:38.807049", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "239", function_name: "function:receiveInternalMessage", message: " Port httpNodeInternalPort[6] has accepted the connection from 858:httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.807107", component: "858", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "136", function_name: "function:httpNodeInitialize", message: " Port httpNodeInternalPort has established the connection with mtc:httpNodeInternalPort[6] using transport type UNIX" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.807310", component: "858", peer_component: "BaseHttpServerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "55", function_name: "function:openServerForListening", message: " Sent on serverPort to system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.807439", component: "858", peer_component: "BaseHttpServerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "55", function_name: "function:openServerForListening", message: " Message enqueued on serverPort from system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.807472", component: "858", peer_component: "BaseHttpServerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "73", function_name: "function:receiveHTTPServerListenResult", message: " Start timer timerWaitForHTTPRequest: 5 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.807510", component: "858", peer_component: "BaseHttpServerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "77", function_name: "function:receiveHTTPServerListenResult", message: " Receive operation on port serverPort succeeded, message from system(" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.807530", component: "858", peer_component: "BaseHttpServerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "77", function_name: "function:receiveHTTPServerListenResult", message: " Message with id 1 was extracted from the queue of serverPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.807555", component: "858", peer_component: "BaseHttpServerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "78", function_name: "function:receiveHTTPServerListenResult", message: " Stop timer timerWaitForHTTPRequest: 5 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.807650", component: "858", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "141", function_name: "function:httpNodeInitialize", message: " Sent on httpNodeInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.807719", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "239", function_name: "function:receiveInternalMessage", message: " Message enqueued on httpNodeInternalPort[6] from 858 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.807766", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Receive operation on port httpNodeInternalPort[6] succeeded, message from 858: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.807790", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Message with id 1 was extracted from the queue of httpNodeInternalPort[6]" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.807808", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "241", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 10 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.808016", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.808096", component: "858", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "62", function_name: "function:httpNodeRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.818055", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "267", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.818213", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "191", function_name: "function:sendInternalMessage", message: " Sent on httpNodeInternalPort[6] to 858 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.818402", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.818494", component: "858", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "66", function_name: "function:httpNodeRun", message: " Message enqueued on httpNodeInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.818550", component: "858", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "67", function_name: "function:httpNodeRun", message: " Receive operation on port httpNodeInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.818574", component: "858", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "67", function_name: "function:httpNodeRun", message: " Message with id 1 was extracted from the queue of httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.818598", component: "858", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "68", function_name: "function:httpNodeRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.818774", component: "858", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "307", function_name: "function:clearHTTPClientPort", message: " Start timer timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.818794", component: "858", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "313", function_name: "function:clearHTTPClientPort", message: " Timeout timerWaitForClearHTTPClientPort: 0 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.818848", component: "858", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Sent on clientPort to system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.819654", component: "858", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "241", function_name: "function:sendHTTPClientRequest", message: " Message enqueued on clientPort from system @HTTPmsg_Types" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.819697", component: "858", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "243", function_name: "function:sendHTTPClientRequest", message: " Start timer timerWaitForHTTPOpenConnection: 2 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.819727", component: "858", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Receive operation on port clientPort succeeded, message from system(" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.819743", component: "858", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "245", function_name: "function:sendHTTPClientRequest", message: " Message with id 1 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.819757", component: "858", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "246", function_name: "function:sendHTTPClientRequest", message: " Stop timer timerWaitForHTTPOpenConnection: 2 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:38.819828", component: "858", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on clientPort to system @HTTPmsg_Types.HTTPMessage : { request := { client_id := 9, method := \"GET\", uri := \"/jolokia/read/com.ericsson.kalki:Type=ClientSession,Name=*\", version_major := 1, version_minor := 1, header := { { header_name := \"Host\", header_value := \"142.133.142.3\" }, { header_name := \"Content-Length\", header_value := \"0\" } }, body := \"\" }}" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.819918", component: "858", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "189", function_name: "function:receiveAnyHTTPClientResponse", message: " Start timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:38.826820", component: "858", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on clientPort from system @HTTPmsg_Types.HTTPMessage : { response := { client_id := 9, version_major := 1, version_minor := 1, statuscode := 200, statustext := \"OK\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache\" }, { header_name := \"Pragma\", header_value := \"no-cache\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:37 GMT\" }, { header_name := \"Expires\", header_value := \"Fri, 24 Oct 2014 21:34:38 GMT\" }, { header_name := \"Content-Type\", header_value := \"text/plain;charset=utf-8\" }, { header_name := \"Content-Length\", header_value := \"3187\" } }, body := \"{\\\"error_type\\\":\\\"javax.management.InstanceNotFoundException\\\",\\\"error\\\":\\\"javax.management.InstanceNotFoundException : No MBean with pattern com.ericsson.kalki:Type=ClientSession,Name=* found for reading attributes\\\",\\\"status\\\":404,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.kalki:Name=*,Type=ClientSession\\\",\\\"type\\\":\\\"read\\\"},\\\"stacktrace\\\":\\\"javax.management.InstanceNotFoundException: No MBean with pattern com.ericsson.kalki:Type=ClientSession,Name=* found for reading attributes\\\\n\\\\tat org.jolokia.handler.ReadHandler.searchMBeans(ReadHandler.java:155)\\\\n\\\\tat org.jolokia.handler.ReadHandler.fetchAttributesForMBeanPattern(ReadHandler.java:127)\\\\n\\\\tat org.jolokia.handler.ReadHandler.doHandleRequest(ReadHandler.java:117)\\\\n\\\\tat org.jolokia.handler.ReadHandler.doHandleRequest(ReadHandler.java:37)\\\\n\\\\tat org.jolokia.handler.JsonRequestHandler.handleRequest(JsonRequestHandler.java:160)\\\\n\\\\tat org.jolokia.backend.MBeanServerHandler.dispatchRequest(MBeanServerHandler.java:97)\\\\n\\\\tat org.jolokia.backend.LocalRequestDispatcher.dispatchRequest(LocalRequestDispatcher.java:91)\\\\n\\\\tat org.jolokia.backend.BackendManager.callRequestDispatcher(BackendManager.java:388)\\\\n\\\\tat org.jolokia.backend.BackendManager.handleRequest(BackendManager.java:150)\\\\n\\\\tat org.jolokia.http.HttpRequestHandler.executeRequest(HttpRequestHandler.java:197)\\\\n\\\\tat org.jolokia.http.HttpRequestHandler.handleGetRequest(HttpRequestHandler.java:86)\\\\n\\\\tat org.jolokia.http.AgentServlet$3.handleRequest(AgentServlet.java:294)\\\\n\\\\tat org.jolokia.http.AgentServlet.handle(AgentServlet.java:225)\\\\n\\\\tat org.jolokia.http.AgentServlet.doGet(AgentServlet.java:190)\\\\n\\\\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:734)\\\\n\\\\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:847)\\\\n\\\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:295)\\\\n\\\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:214)\\\\n\\\\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:230)\\\\n\\\\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:149)\\\\n\\\\tat org.jboss.modcluster.container.jbossweb.JBossWebContext$RequestListenerValve.event(JBossWebContext.java:91)\\\\n\\\\tat org.jboss.modcluster.container.jbossweb.JBossWebContext$RequestListenerValve.invoke(JBossWebContext.java:72)\\\\n\\\\tat org.jboss.as.web.security.SecurityContextAssociationValve.invoke(SecurityContextAssociationValve.java:169)\\\\n\\\\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:145)\\\\n\\\\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:97)\\\\n\\\\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:102)\\\\n\\\\tat com.ericsson.container.clb.proxy.http.util.ClbHttpValve.invoke(ClbHttpValve.java:51)\\\\n\\\\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:336)\\\\n\\\\tat org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:856)\\\\n\\\\tat org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:653)\\\\n\\\\tat org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:920)\\\\n\\\\tat java.lang.Thread.run(Thread.java:744)\\\\n\\\"}\" }} id 2" }
Structured  DataFrame { time: "2014/Oct/24 18:34:38.827142", component: "858", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port clientPort succeeded, message from system(): @HTTPmsg_Types.HTTPMessage : { response := { client_id := 9, version_major := 1, version_minor := 1, statuscode := 200, statustext := \"OK\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache\" }, { header_name := \"Pragma\", header_value := \"no-cache\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:37 GMT\" }, { header_name := \"Expires\", header_value := \"Fri, 24 Oct 2014 21:34:38 GMT\" }, { header_name := \"Content-Type\", header_value := \"text/plain;charset=utf-8\" }, { header_name := \"Content-Length\", header_value := \"3187\" } }, body := \"{\\\"error_type\\\":\\\"javax.management.InstanceNotFoundException\\\",\\\"error\\\":\\\"javax.management.InstanceNotFoundException : No MBean with pattern com.ericsson.kalki:Type=ClientSession,Name=* found for reading attributes\\\",\\\"status\\\":404,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.kalki:Name=*,Type=ClientSession\\\",\\\"type\\\":\\\"read\\\"},\\\"stacktrace\\\":\\\"javax.management.InstanceNotFoundException: No MBean with pattern com.ericsson.kalki:Type=ClientSession,Name=* found for reading attributes\\\\n\\\\tat org.jolokia.handler.ReadHandler.searchMBeans(ReadHandler.java:155)\\\\n\\\\tat org.jolokia.handler.ReadHandler.fetchAttributesForMBeanPattern(ReadHandler.java:127)\\\\n\\\\tat org.jolokia.handler.ReadHandler.doHandleRequest(ReadHandler.java:117)\\\\n\\\\tat org.jolokia.handler.ReadHandler.doHandleRequest(ReadHandler.java:37)\\\\n\\\\tat org.jolokia.handler.JsonRequestHandler.handleRequest(JsonRequestHandler.java:160)\\\\n\\\\tat org.jolokia.backend.MBeanServerHandler.dispatchRequest(MBeanServerHandler.java:97)\\\\n\\\\tat org.jolokia.backend.LocalRequestDispatcher.dispatchRequest(LocalRequestDispatcher.java:91)\\\\n\\\\tat org.jolokia.backend.BackendManager.callRequestDispatcher(BackendManager.java:388)\\\\n\\\\tat org.jolokia.backend.BackendManager.handleRequest(BackendManager.java:150)\\\\n\\\\tat org.jolokia.http.HttpRequestHandler.executeRequest(HttpRequestHandler.java:197)\\\\n\\\\tat org.jolokia.http.HttpRequestHandler.handleGetRequest(HttpRequestHandler.java:86)\\\\n\\\\tat org.jolokia.http.AgentServlet$3.handleRequest(AgentServlet.java:294)\\\\n\\\\tat org.jolokia.http.AgentServlet.handle(AgentServlet.java:225)\\\\n\\\\tat org.jolokia.http.AgentServlet.doGet(AgentServlet.java:190)\\\\n\\\\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:734)\\\\n\\\\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:847)\\\\n\\\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:295)\\\\n\\\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:214)\\\\n\\\\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:230)\\\\n\\\\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:149)\\\\n\\\\tat org.jboss.modcluster.container.jbossweb.JBossWebContext$RequestListenerValve.event(JBossWebContext.java:91)\\\\n\\\\tat org.jboss.modcluster.container.jbossweb.JBossWebContext$RequestListenerValve.invoke(JBossWebContext.java:72)\\\\n\\\\tat org.jboss.as.web.security.SecurityContextAssociationValve.invoke(SecurityContextAssociationValve.java:169)\\\\n\\\\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:145)\\\\n\\\\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:97)\\\\n\\\\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:102)\\\\n\\\\tat com.ericsson.container.clb.proxy.http.util.ClbHttpValve.invoke(ClbHttpValve.java:51)\\\\n\\\\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:336)\\\\n\\\\tat org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:856)\\\\n\\\\tat org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:653)\\\\n\\\\tat org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:920)\\\\n\\\\tat java.lang.Thread.run(Thread.java:744)\\\\n\\\"}\" }} id 2" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.827202", component: "858", peer_component: "BaseHttpClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "193", function_name: "function:receiveAnyHTTPClientResponse", message: " Message with id 2 was extracted from the queue of clientPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.827230", component: "858", peer_component: "BaseHttpClientComponent", event_type: "TIMEROP", event_description: "ttcn", port: "194", function_name: "function:receiveAnyHTTPClientResponse", message: " Stop timer timerWaitForHTTPResponse: 60 s" }
Structured  DataFrame { time: "2014/Oct/24 18:34:38.827556", component: "858", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Sent on httpNodeInternalPort to mtc @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\\"error_type\\\":\\\"javax.management.InstanceNotFoundException\\\",\\\"error\\\":\\\"javax.management.InstanceNotFoundException : No MBean with pattern com.ericsson.kalki:Type=ClientSession,Name=* found for reading attributes\\\",\\\"status\\\":404,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.kalki:Name=*,Type=ClientSession\\\",\\\"type\\\":\\\"read\\\"},\\\"stacktrace\\\":\\\"javax.management.InstanceNotFoundException: No MBean with pattern com.ericsson.kalki:Type=ClientSession,Name=* found for reading attributes\\\\n\\\\tat org.jolokia.handler.ReadHandler.searchMBeans(ReadHandler.java:155)\\\\n\\\\tat org.jolokia.handler.ReadHandler.fetchAttributesForMBeanPattern(ReadHandler.java:127)\\\\n\\\\tat org.jolokia.handler.ReadHandler.doHandleRequest(ReadHandler.java:117)\\\\n\\\\tat org.jolokia.handler.ReadHandler.doHandleRequest(ReadHandler.java:37)\\\\n\\\\tat org.jolokia.handler.JsonRequestHandler.handleRequest(JsonRequestHandler.java:160)\\\\n\\\\tat org.jolokia.backend.MBeanServerHandler.dispatchRequest(MBeanServerHandler.java:97)\\\\n\\\\tat org.jolokia.backend.LocalRequestDispatcher.dispatchRequest(LocalRequestDispatcher.java:91)\\\\n\\\\tat org.jolokia.backend.BackendManager.callRequestDispatcher(BackendManager.java:388)\\\\n\\\\tat org.jolokia.backend.BackendManager.handleRequest(BackendManager.java:150)\\\\n\\\\tat org.jolokia.http.HttpRequestHandler.executeRequest(HttpRequestHandler.java:197)\\\\n\\\\tat org.jolokia.http.HttpRequestHandler.handleGetRequest(HttpRequestHandler.java:86)\\\\n\\\\tat org.jolokia.http.AgentServlet$3.handleRequest(AgentServlet.java:294)\\\\n\\\\tat org.jolokia.http.AgentServlet.handle(AgentServlet.java:225)\\\\n\\\\tat org.jolokia.http.AgentServlet.doGet(AgentServlet.java:190)\\\\n\\\\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:734)\\\\n\\\\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:847)\\\\n\\\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:295)\\\\n\\\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:214)\\\\n\\\\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:230)\\\\n\\\\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:149)\\\\n\\\\tat org.jboss.modcluster.container.jbossweb.JBossWebContext$RequestListenerValve.event(JBossWebContext.java:91)\\\\n\\\\tat org.jboss.modcluster.container.jbossweb.JBossWebContext$RequestListenerValve.invoke(JBossWebContext.java:72)\\\\n\\\\tat org.jboss.as.web.security.SecurityContextAssociationValve.invoke(SecurityContextAssociationValve.java:169)\\\\n\\\\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:145)\\\\n\\\\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:97)\\\\n\\\\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:102)\\\\n\\\\tat com.ericsson.container.clb.proxy.http.util.ClbHttpValve.invoke(ClbHttpValve.java:51)\\\\n\\\\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:336)\\\\n\\\\tat org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:856)\\\\n\\\\tat org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:653)\\\\n\\\\tat org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:920)\\\\n\\\\tat java.lang.Thread.run(Thread.java:744)\\\\n\\\"}\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache\" }, { header_name := \"Pragma\", header_value := \"no-cache\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:37 GMT\" }, { header_name := \"Expires\", header_value := \"Fri, 24 Oct 2014 21:34:38 GMT\" }, { header_name := \"Content-Type\", header_value := \"text/plain;charset=utf-8\" }, { header_name := \"Content-Length\", header_value := \"3187\" } } } } }}" }
Structured  DataFrame { time: "2014/Oct/24 18:34:38.827965", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message enqueued on httpNodeInternalPort[6] from 858 @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\\"error_type\\\":\\\"javax.management.InstanceNotFoundException\\\",\\\"error\\\":\\\"javax.management.InstanceNotFoundException : No MBean with pattern com.ericsson.kalki:Type=ClientSession,Name=* found for reading attributes\\\",\\\"status\\\":404,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.kalki:Name=*,Type=ClientSession\\\",\\\"type\\\":\\\"read\\\"},\\\"stacktrace\\\":\\\"javax.management.InstanceNotFoundException: No MBean with pattern com.ericsson.kalki:Type=ClientSession,Name=* found for reading attributes\\\\n\\\\tat org.jolokia.handler.ReadHandler.searchMBeans(ReadHandler.java:155)\\\\n\\\\tat org.jolokia.handler.ReadHandler.fetchAttributesForMBeanPattern(ReadHandler.java:127)\\\\n\\\\tat org.jolokia.handler.ReadHandler.doHandleRequest(ReadHandler.java:117)\\\\n\\\\tat org.jolokia.handler.ReadHandler.doHandleRequest(ReadHandler.java:37)\\\\n\\\\tat org.jolokia.handler.JsonRequestHandler.handleRequest(JsonRequestHandler.java:160)\\\\n\\\\tat org.jolokia.backend.MBeanServerHandler.dispatchRequest(MBeanServerHandler.java:97)\\\\n\\\\tat org.jolokia.backend.LocalRequestDispatcher.dispatchRequest(LocalRequestDispatcher.java:91)\\\\n\\\\tat org.jolokia.backend.BackendManager.callRequestDispatcher(BackendManager.java:388)\\\\n\\\\tat org.jolokia.backend.BackendManager.handleRequest(BackendManager.java:150)\\\\n\\\\tat org.jolokia.http.HttpRequestHandler.executeRequest(HttpRequestHandler.java:197)\\\\n\\\\tat org.jolokia.http.HttpRequestHandler.handleGetRequest(HttpRequestHandler.java:86)\\\\n\\\\tat org.jolokia.http.AgentServlet$3.handleRequest(AgentServlet.java:294)\\\\n\\\\tat org.jolokia.http.AgentServlet.handle(AgentServlet.java:225)\\\\n\\\\tat org.jolokia.http.AgentServlet.doGet(AgentServlet.java:190)\\\\n\\\\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:734)\\\\n\\\\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:847)\\\\n\\\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:295)\\\\n\\\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:214)\\\\n\\\\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:230)\\\\n\\\\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:149)\\\\n\\\\tat org.jboss.modcluster.container.jbossweb.JBossWebContext$RequestListenerValve.event(JBossWebContext.java:91)\\\\n\\\\tat org.jboss.modcluster.container.jbossweb.JBossWebContext$RequestListenerValve.invoke(JBossWebContext.java:72)\\\\n\\\\tat org.jboss.as.web.security.SecurityContextAssociationValve.invoke(SecurityContextAssociationValve.java:169)\\\\n\\\\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:145)\\\\n\\\\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:97)\\\\n\\\\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:102)\\\\n\\\\tat com.ericsson.container.clb.proxy.http.util.ClbHttpValve.invoke(ClbHttpValve.java:51)\\\\n\\\\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:336)\\\\n\\\\tat org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:856)\\\\n\\\\tat org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:653)\\\\n\\\\tat org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:920)\\\\n\\\\tat java.lang.Thread.run(Thread.java:744)\\\\n\\\"}\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache\" }, { header_name := \"Pragma\", header_value := \"no-cache\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:37 GMT\" }, { header_name := \"Expires\", header_value := \"Fri, 24 Oct 2014 21:34:38 GMT\" }, { header_name := \"Content-Type\", header_value := \"text/plain;charset=utf-8\" }, { header_name := \"Content-Length\", header_value := \"3187\" } } } } }} id 2" }
Structured  DataFrame { time: "2014/Oct/24 18:34:38.828290", component: "mtc", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Receive operation on port httpNodeInternalPort[6] succeeded, message from 858: @variables.internalPortMessageWithAspHttp : { internalMessage := { description := \"COMPONENT_DONE_WITH_SUCCESS\", parameters := { { parameterName := \"COMMAND_EXECUTED\", parameterValue := \"COMMAND_HTTP_CLIENT_SEND_GET_ANY_MESSAGE\" } } }, aspHttp := { { httpMessage := { method := \"\", url := \"\", body := \"{\\\"error_type\\\":\\\"javax.management.InstanceNotFoundException\\\",\\\"error\\\":\\\"javax.management.InstanceNotFoundException : No MBean with pattern com.ericsson.kalki:Type=ClientSession,Name=* found for reading attributes\\\",\\\"status\\\":404,\\\"request\\\":{\\\"mbean\\\":\\\"com.ericsson.kalki:Name=*,Type=ClientSession\\\",\\\"type\\\":\\\"read\\\"},\\\"stacktrace\\\":\\\"javax.management.InstanceNotFoundException: No MBean with pattern com.ericsson.kalki:Type=ClientSession,Name=* found for reading attributes\\\\n\\\\tat org.jolokia.handler.ReadHandler.searchMBeans(ReadHandler.java:155)\\\\n\\\\tat org.jolokia.handler.ReadHandler.fetchAttributesForMBeanPattern(ReadHandler.java:127)\\\\n\\\\tat org.jolokia.handler.ReadHandler.doHandleRequest(ReadHandler.java:117)\\\\n\\\\tat org.jolokia.handler.ReadHandler.doHandleRequest(ReadHandler.java:37)\\\\n\\\\tat org.jolokia.handler.JsonRequestHandler.handleRequest(JsonRequestHandler.java:160)\\\\n\\\\tat org.jolokia.backend.MBeanServerHandler.dispatchRequest(MBeanServerHandler.java:97)\\\\n\\\\tat org.jolokia.backend.LocalRequestDispatcher.dispatchRequest(LocalRequestDispatcher.java:91)\\\\n\\\\tat org.jolokia.backend.BackendManager.callRequestDispatcher(BackendManager.java:388)\\\\n\\\\tat org.jolokia.backend.BackendManager.handleRequest(BackendManager.java:150)\\\\n\\\\tat org.jolokia.http.HttpRequestHandler.executeRequest(HttpRequestHandler.java:197)\\\\n\\\\tat org.jolokia.http.HttpRequestHandler.handleGetRequest(HttpRequestHandler.java:86)\\\\n\\\\tat org.jolokia.http.AgentServlet$3.handleRequest(AgentServlet.java:294)\\\\n\\\\tat org.jolokia.http.AgentServlet.handle(AgentServlet.java:225)\\\\n\\\\tat org.jolokia.http.AgentServlet.doGet(AgentServlet.java:190)\\\\n\\\\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:734)\\\\n\\\\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:847)\\\\n\\\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:295)\\\\n\\\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:214)\\\\n\\\\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:230)\\\\n\\\\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:149)\\\\n\\\\tat org.jboss.modcluster.container.jbossweb.JBossWebContext$RequestListenerValve.event(JBossWebContext.java:91)\\\\n\\\\tat org.jboss.modcluster.container.jbossweb.JBossWebContext$RequestListenerValve.invoke(JBossWebContext.java:72)\\\\n\\\\tat org.jboss.as.web.security.SecurityContextAssociationValve.invoke(SecurityContextAssociationValve.java:169)\\\\n\\\\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:145)\\\\n\\\\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:97)\\\\n\\\\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:102)\\\\n\\\\tat com.ericsson.container.clb.proxy.http.util.ClbHttpValve.invoke(ClbHttpValve.java:51)\\\\n\\\\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:336)\\\\n\\\\tat org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:856)\\\\n\\\\tat org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:653)\\\\n\\\\tat org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:920)\\\\n\\\\tat java.lang.Thread.run(Thread.java:744)\\\\n\\\"}\", contentType := \"\", statusCode := \"200\", header := { { header_name := \"Server\", header_value := \"Apache-Coyote/1.1\" }, { header_name := \"Cache-Control\", header_value := \"no-cache\" }, { header_name := \"Pragma\", header_value := \"no-cache\" }, { header_name := \"Date\", header_value := \"Fri, 24 Oct 2014 22:34:37 GMT\" }, { header_name := \"Expires\", header_value := \"Fri, 24 Oct 2014 21:34:38 GMT\" }, { header_name := \"Content-Type\", header_value := \"text/plain;charset=utf-8\" }, { header_name := \"Content-Length\", header_value := \"3187\" } } } } }} id 2" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.828382", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Message with id 2 was extracted from the queue of httpNodeInternalPort[6]" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.828418", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "241", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 60 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.830529", component: "858", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "62", function_name: "function:httpNodeRun", message: " Start timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.836143", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.846493", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "267", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.846624", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "191", function_name: "function:sendInternalMessage", message: " Sent on httpNodeInternalPort[0] to 851 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.846779", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.846784", component: "851", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "66", function_name: "function:httpNodeRun", message: " Message enqueued on httpNodeInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.846859", component: "851", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "67", function_name: "function:httpNodeRun", message: " Receive operation on port httpNodeInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.846885", component: "851", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "67", function_name: "function:httpNodeRun", message: " Message with id 1 was extracted from the queue of httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.846902", component: "851", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "68", function_name: "function:httpNodeRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.847170", component: "851", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "173", function_name: "function:httpNodeFinalize", message: " Port clientPort was unmapped from system:clientPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.847408", component: "851", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "176", function_name: "function:httpNodeFinalize", message: " Port serverPort was unmapped from system:serverPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.847570", component: "851", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "182", function_name: "function:httpNodeFinalize", message: " Sent on httpNodeInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.847657", component: "851", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port clientPort was stopped." }
Simple DataFrame { time: "2014/Oct/24 18:34:38.847684", component: "851", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port serverPort was stopped." }
Simple DataFrame { time: "2014/Oct/24 18:34:38.847685", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "239", function_name: "function:receiveInternalMessage", message: " Message enqueued on httpNodeInternalPort[0] from 851 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.847702", component: "851", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Removing unterminated connection between port httpNodeInternalPort and mtc:httpNodeInternalPort[0]." }
Simple DataFrame { time: "2014/Oct/24 18:34:38.847740", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Receive operation on port httpNodeInternalPort[0] succeeded, message from 851: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.847741", component: "851", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port httpNodeInternalPort was stopped." }
Simple DataFrame { time: "2014/Oct/24 18:34:38.847764", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Message with id 2 was extracted from the queue of httpNodeInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.847783", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "241", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.847957", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.848011", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "239", function_name: "function:receiveInternalMessage", message: " Connection of port httpNodeInternalPort[0] to 851:httpNodeInternalPort was closed unexpectedly by the peer" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.848038", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "239", function_name: "function:receiveInternalMessage", message: " Port httpNodeInternalPort[0] was disconnected from 851:httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.858537", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "267", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.858658", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "191", function_name: "function:sendInternalMessage", message: " Sent on httpNodeInternalPort[1] to 852 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.858818", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.858833", component: "852", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "66", function_name: "function:httpNodeRun", message: " Message enqueued on httpNodeInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.858931", component: "852", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "67", function_name: "function:httpNodeRun", message: " Receive operation on port httpNodeInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.858955", component: "852", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "67", function_name: "function:httpNodeRun", message: " Message with id 7 was extracted from the queue of httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.858971", component: "852", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "68", function_name: "function:httpNodeRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.859541", component: "852", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "173", function_name: "function:httpNodeFinalize", message: " Port clientPort was unmapped from system:clientPort[1]" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.860048", component: "852", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "176", function_name: "function:httpNodeFinalize", message: " Port serverPort was unmapped from system:serverPort[1]" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.860253", component: "852", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "182", function_name: "function:httpNodeFinalize", message: " Sent on httpNodeInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.860323", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "239", function_name: "function:receiveInternalMessage", message: " Message enqueued on httpNodeInternalPort[1] from 852 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.860346", component: "852", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port clientPort was stopped." }
Simple DataFrame { time: "2014/Oct/24 18:34:38.860361", component: "852", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port serverPort was stopped." }
Simple DataFrame { time: "2014/Oct/24 18:34:38.860372", component: "852", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Removing unterminated connection between port httpNodeInternalPort and mtc:httpNodeInternalPort[1]." }
Simple DataFrame { time: "2014/Oct/24 18:34:38.860373", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Receive operation on port httpNodeInternalPort[1] succeeded, message from 852: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.860397", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Message with id 8 was extracted from the queue of httpNodeInternalPort[1]" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.860428", component: "852", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port httpNodeInternalPort was stopped." }
Simple DataFrame { time: "2014/Oct/24 18:34:38.860429", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "241", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.860576", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.860610", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "239", function_name: "function:receiveInternalMessage", message: " Connection of port httpNodeInternalPort[1] to 852:httpNodeInternalPort was closed unexpectedly by the peer" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.860634", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "239", function_name: "function:receiveInternalMessage", message: " Port httpNodeInternalPort[1] was disconnected from 852:httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.873033", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "267", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.873212", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "191", function_name: "function:sendInternalMessage", message: " Sent on httpNodeInternalPort[2] to 853 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.873379", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.873390", component: "853", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "66", function_name: "function:httpNodeRun", message: " Message enqueued on httpNodeInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.873495", component: "853", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "67", function_name: "function:httpNodeRun", message: " Receive operation on port httpNodeInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.873540", component: "853", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "67", function_name: "function:httpNodeRun", message: " Message with id 5 was extracted from the queue of httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.873575", component: "853", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "68", function_name: "function:httpNodeRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.874077", component: "853", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "173", function_name: "function:httpNodeFinalize", message: " Port clientPort was unmapped from system:clientPort[2]" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.874475", component: "853", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "176", function_name: "function:httpNodeFinalize", message: " Port serverPort was unmapped from system:serverPort[2]" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.874817", component: "853", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "182", function_name: "function:httpNodeFinalize", message: " Sent on httpNodeInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.875028", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "239", function_name: "function:receiveInternalMessage", message: " Message enqueued on httpNodeInternalPort[2] from 853 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.875077", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Receive operation on port httpNodeInternalPort[2] succeeded, message from 853: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.875100", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Message with id 6 was extracted from the queue of httpNodeInternalPort[2]" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.875119", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "241", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.875125", component: "853", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port clientPort was stopped." }
Simple DataFrame { time: "2014/Oct/24 18:34:38.875156", component: "853", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port serverPort was stopped." }
Simple DataFrame { time: "2014/Oct/24 18:34:38.875185", component: "853", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Removing unterminated connection between port httpNodeInternalPort and mtc:httpNodeInternalPort[2]." }
Simple DataFrame { time: "2014/Oct/24 18:34:38.875253", component: "853", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port httpNodeInternalPort was stopped." }
Simple DataFrame { time: "2014/Oct/24 18:34:38.875317", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.875354", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "239", function_name: "function:receiveInternalMessage", message: " Connection of port httpNodeInternalPort[2] to 853:httpNodeInternalPort was closed unexpectedly by the peer" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.875380", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "239", function_name: "function:receiveInternalMessage", message: " Port httpNodeInternalPort[2] was disconnected from 853:httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.886477", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "267", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.886567", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "191", function_name: "function:sendInternalMessage", message: " Sent on httpNodeInternalPort[3] to 854 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.886706", component: "854", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "66", function_name: "function:httpNodeRun", message: " Message enqueued on httpNodeInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.886718", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.886803", component: "854", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "67", function_name: "function:httpNodeRun", message: " Receive operation on port httpNodeInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.886827", component: "854", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "67", function_name: "function:httpNodeRun", message: " Message with id 5 was extracted from the queue of httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.886843", component: "854", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "68", function_name: "function:httpNodeRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.887209", component: "854", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "173", function_name: "function:httpNodeFinalize", message: " Port clientPort was unmapped from system:clientPort[3]" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.887607", component: "854", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "176", function_name: "function:httpNodeFinalize", message: " Port serverPort was unmapped from system:serverPort[3]" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.887871", component: "854", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "182", function_name: "function:httpNodeFinalize", message: " Sent on httpNodeInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.887943", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "239", function_name: "function:receiveInternalMessage", message: " Message enqueued on httpNodeInternalPort[3] from 854 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.887968", component: "854", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port clientPort was stopped." }
Simple DataFrame { time: "2014/Oct/24 18:34:38.887982", component: "854", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port serverPort was stopped." }
Simple DataFrame { time: "2014/Oct/24 18:34:38.887989", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Receive operation on port httpNodeInternalPort[3] succeeded, message from 854: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.887994", component: "854", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Removing unterminated connection between port httpNodeInternalPort and mtc:httpNodeInternalPort[3]." }
Simple DataFrame { time: "2014/Oct/24 18:34:38.888013", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Message with id 6 was extracted from the queue of httpNodeInternalPort[3]" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.888031", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "241", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.888034", component: "854", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port httpNodeInternalPort was stopped." }
Simple DataFrame { time: "2014/Oct/24 18:34:38.888178", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.888210", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "239", function_name: "function:receiveInternalMessage", message: " Connection of port httpNodeInternalPort[3] to 854:httpNodeInternalPort was closed unexpectedly by the peer" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.888233", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "239", function_name: "function:receiveInternalMessage", message: " Port httpNodeInternalPort[3] was disconnected from 854:httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.900469", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "267", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.900639", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "191", function_name: "function:sendInternalMessage", message: " Sent on httpNodeInternalPort[4] to 855 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.900793", component: "855", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "66", function_name: "function:httpNodeRun", message: " Message enqueued on httpNodeInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.900811", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.900878", component: "855", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "67", function_name: "function:httpNodeRun", message: " Receive operation on port httpNodeInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.900903", component: "855", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "67", function_name: "function:httpNodeRun", message: " Message with id 6 was extracted from the queue of httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.900918", component: "855", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "68", function_name: "function:httpNodeRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.901265", component: "855", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "173", function_name: "function:httpNodeFinalize", message: " Port clientPort was unmapped from system:clientPort[4]" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.901708", component: "855", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "176", function_name: "function:httpNodeFinalize", message: " Port serverPort was unmapped from system:serverPort[4]" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.901942", component: "855", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "182", function_name: "function:httpNodeFinalize", message: " Sent on httpNodeInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.902030", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "239", function_name: "function:receiveInternalMessage", message: " Message enqueued on httpNodeInternalPort[4] from 855 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.902077", component: "855", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port clientPort was stopped." }
Simple DataFrame { time: "2014/Oct/24 18:34:38.902078", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Receive operation on port httpNodeInternalPort[4] succeeded, message from 855: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.902099", component: "855", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port serverPort was stopped." }
Simple DataFrame { time: "2014/Oct/24 18:34:38.902102", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Message with id 7 was extracted from the queue of httpNodeInternalPort[4]" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.902120", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "241", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.902179", component: "855", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Removing unterminated connection between port httpNodeInternalPort and mtc:httpNodeInternalPort[4]." }
Simple DataFrame { time: "2014/Oct/24 18:34:38.902263", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.902268", component: "855", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port httpNodeInternalPort was stopped." }
Simple DataFrame { time: "2014/Oct/24 18:34:38.902298", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "239", function_name: "function:receiveInternalMessage", message: " Connection of port httpNodeInternalPort[4] to 855:httpNodeInternalPort was closed unexpectedly by the peer" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.902323", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "239", function_name: "function:receiveInternalMessage", message: " Port httpNodeInternalPort[4] was disconnected from 855:httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.914473", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "267", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.914577", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "191", function_name: "function:sendInternalMessage", message: " Sent on httpNodeInternalPort[5] to 856 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.914710", component: "856", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "66", function_name: "function:httpNodeRun", message: " Message enqueued on httpNodeInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.914710", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.914849", component: "856", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "67", function_name: "function:httpNodeRun", message: " Receive operation on port httpNodeInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.914886", component: "856", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "67", function_name: "function:httpNodeRun", message: " Message with id 6 was extracted from the queue of httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.914910", component: "856", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "68", function_name: "function:httpNodeRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.915356", component: "856", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "173", function_name: "function:httpNodeFinalize", message: " Port clientPort was unmapped from system:clientPort[5]" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.915679", component: "856", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "176", function_name: "function:httpNodeFinalize", message: " Port serverPort was unmapped from system:serverPort[5]" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.915887", component: "856", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "182", function_name: "function:httpNodeFinalize", message: " Sent on httpNodeInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.915992", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "239", function_name: "function:receiveInternalMessage", message: " Message enqueued on httpNodeInternalPort[5] from 856 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.916037", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Receive operation on port httpNodeInternalPort[5] succeeded, message from 856: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.916053", component: "856", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port clientPort was stopped." }
Simple DataFrame { time: "2014/Oct/24 18:34:38.916060", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Message with id 7 was extracted from the queue of httpNodeInternalPort[5]" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.916078", component: "856", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port serverPort was stopped." }
Simple DataFrame { time: "2014/Oct/24 18:34:38.916079", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "241", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.916158", component: "856", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Removing unterminated connection between port httpNodeInternalPort and mtc:httpNodeInternalPort[5]." }
Simple DataFrame { time: "2014/Oct/24 18:34:38.916222", component: "856", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port httpNodeInternalPort was stopped." }
Simple DataFrame { time: "2014/Oct/24 18:34:38.916222", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.916256", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "239", function_name: "function:receiveInternalMessage", message: " Connection of port httpNodeInternalPort[5] to 856:httpNodeInternalPort was closed unexpectedly by the peer" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.916280", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "239", function_name: "function:receiveInternalMessage", message: " Port httpNodeInternalPort[5] was disconnected from 856:httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.926479", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "267", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.926570", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "191", function_name: "function:sendInternalMessage", message: " Sent on httpNodeInternalPort[6] to 858 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.926682", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "236", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.926767", component: "858", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "66", function_name: "function:httpNodeRun", message: " Message enqueued on httpNodeInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.926827", component: "858", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "67", function_name: "function:httpNodeRun", message: " Receive operation on port httpNodeInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.926847", component: "858", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "67", function_name: "function:httpNodeRun", message: " Message with id 2 was extracted from the queue of httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.926861", component: "858", peer_component: "httpNodeInterface", event_type: "TIMEROP", event_description: "ttcn", port: "68", function_name: "function:httpNodeRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.927045", component: "858", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "173", function_name: "function:httpNodeFinalize", message: " Port clientPort was unmapped from system:clientPort[6]" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.927200", component: "858", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "176", function_name: "function:httpNodeFinalize", message: " Port serverPort was unmapped from system:serverPort[6]" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.927310", component: "858", peer_component: "httpNodeInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "182", function_name: "function:httpNodeFinalize", message: " Sent on httpNodeInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.927350", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "239", function_name: "function:receiveInternalMessage", message: " Message enqueued on httpNodeInternalPort[6] from 858 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.927396", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Receive operation on port httpNodeInternalPort[6] succeeded, message from 858: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.927428", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "240", function_name: "function:receiveInternalMessage", message: " Message with id 3 was extracted from the queue of httpNodeInternalPort[6]" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.927445", component: "mtc", peer_component: "HttpNodeLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "241", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.927551", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.927632", component: "858", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port clientPort was stopped." }
Simple DataFrame { time: "2014/Oct/24 18:34:38.927645", component: "858", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port serverPort was stopped." }
Simple DataFrame { time: "2014/Oct/24 18:34:38.927655", component: "858", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Removing unterminated connection between port httpNodeInternalPort and mtc:httpNodeInternalPort[6]." }
Simple DataFrame { time: "2014/Oct/24 18:34:38.927723", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "253", function_name: "function:receiveInternalMessage", message: " Connection of port httpNodeInternalPort[6] to 858:httpNodeInternalPort was closed unexpectedly by the peer" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.927759", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "253", function_name: "function:receiveInternalMessage", message: " Port httpNodeInternalPort[6] was disconnected from 858:httpNodeInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.927824", component: "858", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port httpNodeInternalPort was stopped." }
Simple DataFrame { time: "2014/Oct/24 18:34:38.938506", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "286", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.938655", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "202", function_name: "function:sendInternalMessage", message: " Sent on sipInternalPort[0] to 849 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.938776", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "245", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.938795", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "78", function_name: "function:sipRun", message: " Message enqueued on sipInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.938888", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Receive operation on port sipInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.938913", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "79", function_name: "function:sipRun", message: " Message with id 32 was extracted from the queue of sipInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.938929", component: "849", peer_component: "sipClientInterface", event_type: "TIMEROP", event_description: "ttcn", port: "80", function_name: "function:sipRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.939254", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "181", function_name: "function:sipFinalize", message: " Port sipClientPort was unmapped from system:sipClientPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.939542", component: "849", peer_component: "sipClientInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "187", function_name: "function:sipFinalize", message: " Sent on sipInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.939620", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "253", function_name: "function:receiveInternalMessage", message: " Message enqueued on sipInternalPort[0] from 849 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.939647", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port sipClientPort was stopped." }
Simple DataFrame { time: "2014/Oct/24 18:34:38.939661", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Removing unterminated connection between port sipInternalPort and mtc:sipInternalPort[0]." }
Simple DataFrame { time: "2014/Oct/24 18:34:38.939680", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Receive operation on port sipInternalPort[0] succeeded, message from 849: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.939699", component: "849", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port sipInternalPort was stopped." }
Simple DataFrame { time: "2014/Oct/24 18:34:38.939730", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Message with id 33 was extracted from the queue of sipInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.939751", component: "mtc", peer_component: "SipClientLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "255", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.939927", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.939969", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "216", function_name: "function:receiveInternalMessage", message: " Connection of port sipInternalPort[0] to 849:sipInternalPort was closed unexpectedly by the peer" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.939993", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "216", function_name: "function:receiveInternalMessage", message: " Port sipInternalPort[0] was disconnected from 849:sipInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.950492", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.950563", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "168", function_name: "function:sendInternalMessage", message: " Sent on msrpInternalPort[0] to 850 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.950664", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.951584", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "83", function_name: "function:msrpRun", message: " Message enqueued on msrpInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.951702", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Receive operation on port msrpInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.951740", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Message with id 16 was extracted from the queue of msrpInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.951758", component: "850", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "85", function_name: "function:msrpRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.952026", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "188", function_name: "function:msrpFinalize", message: " Port msrpPort was unmapped from system:msrpPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.952294", component: "850", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "194", function_name: "function:msrpFinalize", message: " Sent on msrpInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.952379", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "216", function_name: "function:receiveInternalMessage", message: " Message enqueued on msrpInternalPort[0] from 850 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.952425", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Receive operation on port msrpInternalPort[0] succeeded, message from 850: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.952431", component: "850", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message with id 9 was extracted from the queue of msrpPort." }
Simple DataFrame { time: "2014/Oct/24 18:34:38.952448", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Message with id 17 was extracted from the queue of msrpInternalPort[0]" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.952455", component: "850", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port msrpPort was stopped." }
Simple DataFrame { time: "2014/Oct/24 18:34:38.952465", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "218", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.952477", component: "850", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Removing unterminated connection between port msrpInternalPort and mtc:msrpInternalPort[0]." }
Simple DataFrame { time: "2014/Oct/24 18:34:38.952530", component: "850", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port msrpInternalPort was stopped." }
Simple DataFrame { time: "2014/Oct/24 18:34:38.952620", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.952656", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "216", function_name: "function:receiveInternalMessage", message: " Connection of port msrpInternalPort[0] to 850:msrpInternalPort was closed unexpectedly by the peer" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.952680", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "216", function_name: "function:receiveInternalMessage", message: " Port msrpInternalPort[0] was disconnected from 850:msrpInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.963863", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "254", function_name: "function:receiveInternalMessage", message: " Timeout TimerTestCaseInternalCommunicationGuard: 0" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.963995", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "168", function_name: "function:sendInternalMessage", message: " Sent on msrpInternalPort[1] to 857 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.964166", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "213", function_name: "function:receiveInternalMessage", message: " Start timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.964170", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "83", function_name: "function:msrpRun", message: " Message enqueued on msrpInternalPort from mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.964263", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Receive operation on port msrpInternalPort succeeded, message from mtc: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.964340", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "84", function_name: "function:msrpRun", message: " Message with id 15 was extracted from the queue of msrpInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.964375", component: "857", peer_component: "msrpInterface", event_type: "TIMEROP", event_description: "ttcn", port: "85", function_name: "function:msrpRun", message: " Stop timer timerWaitForCommand: 600 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.964741", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "188", function_name: "function:msrpFinalize", message: " Port msrpPort was unmapped from system:msrpPort[1]" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.965055", component: "857", peer_component: "msrpInterface", event_type: "PORTEVENT", event_description: "ttcn", port: "194", function_name: "function:msrpFinalize", message: " Sent on msrpInternalPort to mtc @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.965158", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "216", function_name: "function:receiveInternalMessage", message: " Message enqueued on msrpInternalPort[1] from 857 @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.965212", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Receive operation on port msrpInternalPort[1] succeeded, message from 857: @variables" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.965226", component: "857", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Message with id 8 was extracted from the queue of msrpPort." }
Simple DataFrame { time: "2014/Oct/24 18:34:38.965241", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "217", function_name: "function:receiveInternalMessage", message: " Message with id 16 was extracted from the queue of msrpInternalPort[1]" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.965259", component: "857", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port msrpPort was stopped." }
Simple DataFrame { time: "2014/Oct/24 18:34:38.965263", component: "mtc", peer_component: "MsrpLayerComponent", event_type: "TIMEROP", event_description: "ttcn", port: "218", function_name: "function:receiveInternalMessage", message: " Stop timer TimerTestCaseInternalCommunicationGuard: 185 s" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.965290", component: "857", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Removing unterminated connection between port msrpInternalPort and mtc:msrpInternalPort[1]." }
Simple DataFrame { time: "2014/Oct/24 18:34:38.965356", component: "857", peer_component: "", event_type: "PORTEVENT", event_description: "", port: "", function_name: "", message: "Port msrpInternalPort was stopped." }
Simple DataFrame { time: "2014/Oct/24 18:34:38.965408", component: "mtc", peer_component: "SshClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "38", function_name: "function:sshClientFinalize", message: " Connection of port msrpInternalPort[1] to 857:msrpInternalPort was closed unexpectedly by the peer" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.965455", component: "mtc", peer_component: "SshClientComponent", event_type: "PORTEVENT", event_description: "ttcn", port: "38", function_name: "function:sshClientFinalize", message: " Port msrpInternalPort[1] was disconnected from 857:msrpInternalPort" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.965756", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "129", function_name: "testcase:WCG100140020", message: " Port dnsInternalPort[0] was stopped" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.965773", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "129", function_name: "testcase:WCG100140020", message: " Port dnsInternalPort[1] was stopped" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.965788", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "129", function_name: "testcase:WCG100140020", message: " Port dnsInternalPort[2] was stopped" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.965803", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "129", function_name: "testcase:WCG100140020", message: " Port dnsInternalPort[3] was stopped" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.965817", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "129", function_name: "testcase:WCG100140020", message: " Port httpNodeInternalPort[0] was stopped" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.965832", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "129", function_name: "testcase:WCG100140020", message: " Port httpNodeInternalPort[1] was stopped" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.965847", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "129", function_name: "testcase:WCG100140020", message: " Port httpNodeInternalPort[2] was stopped" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.965861", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "129", function_name: "testcase:WCG100140020", message: " Port httpNodeInternalPort[3] was stopped" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.965876", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "129", function_name: "testcase:WCG100140020", message: " Port httpNodeInternalPort[4] was stopped" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.965890", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "129", function_name: "testcase:WCG100140020", message: " Port httpNodeInternalPort[5] was stopped" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.965905", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "129", function_name: "testcase:WCG100140020", message: " Port httpNodeInternalPort[6] was stopped" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.965919", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "129", function_name: "testcase:WCG100140020", message: " Port httpNodeInternalPort[7] was stopped" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.965934", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "129", function_name: "testcase:WCG100140020", message: " Port httpNodeInternalPort[8] was stopped" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.965948", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "129", function_name: "testcase:WCG100140020", message: " Port httpNodeInternalPort[9] was stopped" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.965963", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "129", function_name: "testcase:WCG100140020", message: " Port httpNodeInternalPort[10] was stopped" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.965977", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "129", function_name: "testcase:WCG100140020", message: " Port httpNodeInternalPort[11] was stopped" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.965992", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "129", function_name: "testcase:WCG100140020", message: " Port httpNodeInternalPort[12] was stopped" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.966007", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "129", function_name: "testcase:WCG100140020", message: " Port httpNodeInternalPort[13] was stopped" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.966022", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "129", function_name: "testcase:WCG100140020", message: " Port httpNodeInternalPort[14] was stopped" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.966036", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "129", function_name: "testcase:WCG100140020", message: " Port httpNodeInternalPort[15] was stopped" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.966059", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "129", function_name: "testcase:WCG100140020", message: " Port msrpInternalPort[0] was stopped" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.966101", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "129", function_name: "testcase:WCG100140020", message: " Port msrpInternalPort[1] was stopped" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.966121", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "129", function_name: "testcase:WCG100140020", message: " Port msrpInternalPort[2] was stopped" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.966137", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "129", function_name: "testcase:WCG100140020", message: " Port msrpInternalPort[3] was stopped" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.966151", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "129", function_name: "testcase:WCG100140020", message: " Port msrpInternalPort[4] was stopped" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.966166", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "129", function_name: "testcase:WCG100140020", message: " Port msrpInternalPort[5] was stopped" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.966181", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "129", function_name: "testcase:WCG100140020", message: " Port msrpInternalPort[6] was stopped" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.966196", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "129", function_name: "testcase:WCG100140020", message: " Port msrpInternalPort[7] was stopped" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.966210", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "129", function_name: "testcase:WCG100140020", message: " Port sipInternalPort[0] was stopped" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.966226", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "129", function_name: "testcase:WCG100140020", message: " Port sipInternalPort[1] was stopped" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.966241", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "129", function_name: "testcase:WCG100140020", message: " Port sipInternalPort[2] was stopped" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.966255", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "129", function_name: "testcase:WCG100140020", message: " Port sipInternalPort[3] was stopped" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.966270", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "129", function_name: "testcase:WCG100140020", message: " Port sipInternalPort[4] was stopped" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.966285", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "129", function_name: "testcase:WCG100140020", message: " Port sipInternalPort[5] was stopped" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.966300", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "129", function_name: "testcase:WCG100140020", message: " Port sipInternalPort[6] was stopped" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.966315", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "129", function_name: "testcase:WCG100140020", message: " Port sipInternalPort[7] was stopped" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.966333", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "129", function_name: "testcase:WCG100140020", message: " Port sshClientPort was stopped" }
Simple DataFrame { time: "2014/Oct/24 18:34:38.966352", component: "mtc", peer_component: "WCG10014_0020", event_type: "PORTEVENT", event_description: "ttcn", port: "129", function_name: "testcase:WCG100140020", message: " Port tcpClientPort was stopped" }
